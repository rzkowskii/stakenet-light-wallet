name: Build windows(staging)

on:
  push:
    # Sequence of patterns matched against refs/heads
    branches:
      - staging # Push events on master branch

    # branches-ignore:
    # - '**'

jobs:
  build:
    runs-on: "windows-latest"
    env:
      working-directory: sources

    steps:
      - uses: actions/checkout@v2
        with:
          path: ${{env.working-directory}}

      - name: Prepare conan
        run: pip install conan && conan config set general.revisions_enabled=1 && conan remote add jfrog-x9developers https://stakenetwallet.jfrog.io/artifactory/api/conan/light-wallet-conan && conan user
        shell: bash

      - name: Download packages
        run: mkdir -p build && cd build && conan install ../src -s compiler.version=15
        working-directory: ${{env.working-directory}}
        shell: bash

      - name: Build project
        run: |
          cmake -DCMAKE_BUILD_TYPE=RelWithDebInfo -DDEFAULT_USE_STAGING=ON -G "Visual Studio 16 2019" -A "x64" -T "v141" ../src \
          && cmake --build . --config RelWithDebInfo --target Stakenet --parallel 2
        working-directory: ${{env.working-directory}}/build
        shell: bash

      - name: Install project
        run: |
          cmake --install . --component Stakenet --config RelWithDebInfo
        working-directory: ${{env.working-directory}}/build
        shell: bash

      - uses: chrislennon/action-aws-cli@v1.1
        env:
          ACTIONS_ALLOW_UNSECURE_COMMANDS: true

      - name: Deploy to staging
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: cmake -DDEPLOY_ENV="staging" -DPLATFORM="win" -DINSTALLER=package/Stakenet.zip -DUPDATE_DIR=package/update/$GITHUB_SHA -P $PWD/../cmake/s3-deploy-update.cmake
        working-directory: ${{env.working-directory}}/build
        shell: bash

      - name: Prepare env for lssd deployment
        env:
          ACTIONS_ALLOW_UNSECURE_COMMANDS: true
        run: |
          export TMP_LSSD_TAG=$(grep CMAKE_PROJECT_VERSION:STATIC CMakeCache.txt | cut -d "=" -f2 | tr -d '\n')
          echo "::set-env name=LSSD_TAG::$TMP_LSSD_TAG"
        working-directory: ${{env.working-directory}}/build
        shell: bash
    # - uses: "Ilshidur/action-discord@0.3.0"
    #   env:
    #     DISCORD_WEBHOOK: https://discord.com/api/webhooks/747792185776275457/8HyQEMTad6eBnsKbRD20jj4essZHKa22upJ1UkZBQj3c3ZM9vijYIgYhHRaXJrrrKCgF
    #   with:
    #     args: "Windows version ready: ${{env.LSSD_TAG}}"
