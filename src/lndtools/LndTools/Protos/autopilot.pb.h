// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: autopilot.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_autopilot_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_autopilot_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3011000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3011002 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_autopilot_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_autopilot_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[13]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_autopilot_2eproto;
namespace autopilotrpc {
class ModifyStatusRequest;
class ModifyStatusRequestDefaultTypeInternal;
extern ModifyStatusRequestDefaultTypeInternal _ModifyStatusRequest_default_instance_;
class ModifyStatusResponse;
class ModifyStatusResponseDefaultTypeInternal;
extern ModifyStatusResponseDefaultTypeInternal _ModifyStatusResponse_default_instance_;
class QueryScoresRequest;
class QueryScoresRequestDefaultTypeInternal;
extern QueryScoresRequestDefaultTypeInternal _QueryScoresRequest_default_instance_;
class QueryScoresResponse;
class QueryScoresResponseDefaultTypeInternal;
extern QueryScoresResponseDefaultTypeInternal _QueryScoresResponse_default_instance_;
class QueryScoresResponse_HeuristicResult;
class QueryScoresResponse_HeuristicResultDefaultTypeInternal;
extern QueryScoresResponse_HeuristicResultDefaultTypeInternal _QueryScoresResponse_HeuristicResult_default_instance_;
class QueryScoresResponse_HeuristicResult_ScoresEntry_DoNotUse;
class QueryScoresResponse_HeuristicResult_ScoresEntry_DoNotUseDefaultTypeInternal;
extern QueryScoresResponse_HeuristicResult_ScoresEntry_DoNotUseDefaultTypeInternal _QueryScoresResponse_HeuristicResult_ScoresEntry_DoNotUse_default_instance_;
class RestartConstraintsRequest;
class RestartConstraintsRequestDefaultTypeInternal;
extern RestartConstraintsRequestDefaultTypeInternal _RestartConstraintsRequest_default_instance_;
class RestartConstraintsResponse;
class RestartConstraintsResponseDefaultTypeInternal;
extern RestartConstraintsResponseDefaultTypeInternal _RestartConstraintsResponse_default_instance_;
class SetScoresRequest;
class SetScoresRequestDefaultTypeInternal;
extern SetScoresRequestDefaultTypeInternal _SetScoresRequest_default_instance_;
class SetScoresRequest_ScoresEntry_DoNotUse;
class SetScoresRequest_ScoresEntry_DoNotUseDefaultTypeInternal;
extern SetScoresRequest_ScoresEntry_DoNotUseDefaultTypeInternal _SetScoresRequest_ScoresEntry_DoNotUse_default_instance_;
class SetScoresResponse;
class SetScoresResponseDefaultTypeInternal;
extern SetScoresResponseDefaultTypeInternal _SetScoresResponse_default_instance_;
class StatusRequest;
class StatusRequestDefaultTypeInternal;
extern StatusRequestDefaultTypeInternal _StatusRequest_default_instance_;
class StatusResponse;
class StatusResponseDefaultTypeInternal;
extern StatusResponseDefaultTypeInternal _StatusResponse_default_instance_;
}  // namespace autopilotrpc
PROTOBUF_NAMESPACE_OPEN
template<> ::autopilotrpc::ModifyStatusRequest* Arena::CreateMaybeMessage<::autopilotrpc::ModifyStatusRequest>(Arena*);
template<> ::autopilotrpc::ModifyStatusResponse* Arena::CreateMaybeMessage<::autopilotrpc::ModifyStatusResponse>(Arena*);
template<> ::autopilotrpc::QueryScoresRequest* Arena::CreateMaybeMessage<::autopilotrpc::QueryScoresRequest>(Arena*);
template<> ::autopilotrpc::QueryScoresResponse* Arena::CreateMaybeMessage<::autopilotrpc::QueryScoresResponse>(Arena*);
template<> ::autopilotrpc::QueryScoresResponse_HeuristicResult* Arena::CreateMaybeMessage<::autopilotrpc::QueryScoresResponse_HeuristicResult>(Arena*);
template<> ::autopilotrpc::QueryScoresResponse_HeuristicResult_ScoresEntry_DoNotUse* Arena::CreateMaybeMessage<::autopilotrpc::QueryScoresResponse_HeuristicResult_ScoresEntry_DoNotUse>(Arena*);
template<> ::autopilotrpc::RestartConstraintsRequest* Arena::CreateMaybeMessage<::autopilotrpc::RestartConstraintsRequest>(Arena*);
template<> ::autopilotrpc::RestartConstraintsResponse* Arena::CreateMaybeMessage<::autopilotrpc::RestartConstraintsResponse>(Arena*);
template<> ::autopilotrpc::SetScoresRequest* Arena::CreateMaybeMessage<::autopilotrpc::SetScoresRequest>(Arena*);
template<> ::autopilotrpc::SetScoresRequest_ScoresEntry_DoNotUse* Arena::CreateMaybeMessage<::autopilotrpc::SetScoresRequest_ScoresEntry_DoNotUse>(Arena*);
template<> ::autopilotrpc::SetScoresResponse* Arena::CreateMaybeMessage<::autopilotrpc::SetScoresResponse>(Arena*);
template<> ::autopilotrpc::StatusRequest* Arena::CreateMaybeMessage<::autopilotrpc::StatusRequest>(Arena*);
template<> ::autopilotrpc::StatusResponse* Arena::CreateMaybeMessage<::autopilotrpc::StatusResponse>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace autopilotrpc {

// ===================================================================

class StatusRequest :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:autopilotrpc.StatusRequest) */ {
 public:
  StatusRequest();
  virtual ~StatusRequest();

  StatusRequest(const StatusRequest& from);
  StatusRequest(StatusRequest&& from) noexcept
    : StatusRequest() {
    *this = ::std::move(from);
  }

  inline StatusRequest& operator=(const StatusRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline StatusRequest& operator=(StatusRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const StatusRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StatusRequest* internal_default_instance() {
    return reinterpret_cast<const StatusRequest*>(
               &_StatusRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(StatusRequest& a, StatusRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(StatusRequest* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline StatusRequest* New() const final {
    return CreateMaybeMessage<StatusRequest>(nullptr);
  }

  StatusRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<StatusRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const StatusRequest& from);
  void MergeFrom(const StatusRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(StatusRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "autopilotrpc.StatusRequest";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_autopilot_2eproto);
    return ::descriptor_table_autopilot_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:autopilotrpc.StatusRequest)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_autopilot_2eproto;
};
// -------------------------------------------------------------------

class StatusResponse :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:autopilotrpc.StatusResponse) */ {
 public:
  StatusResponse();
  virtual ~StatusResponse();

  StatusResponse(const StatusResponse& from);
  StatusResponse(StatusResponse&& from) noexcept
    : StatusResponse() {
    *this = ::std::move(from);
  }

  inline StatusResponse& operator=(const StatusResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline StatusResponse& operator=(StatusResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const StatusResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StatusResponse* internal_default_instance() {
    return reinterpret_cast<const StatusResponse*>(
               &_StatusResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(StatusResponse& a, StatusResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(StatusResponse* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline StatusResponse* New() const final {
    return CreateMaybeMessage<StatusResponse>(nullptr);
  }

  StatusResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<StatusResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const StatusResponse& from);
  void MergeFrom(const StatusResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(StatusResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "autopilotrpc.StatusResponse";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_autopilot_2eproto);
    return ::descriptor_table_autopilot_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kActiveFieldNumber = 1,
  };
  // bool active = 1;
  void clear_active();
  bool active() const;
  void set_active(bool value);
  private:
  bool _internal_active() const;
  void _internal_set_active(bool value);
  public:

  // @@protoc_insertion_point(class_scope:autopilotrpc.StatusResponse)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  bool active_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_autopilot_2eproto;
};
// -------------------------------------------------------------------

class ModifyStatusRequest :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:autopilotrpc.ModifyStatusRequest) */ {
 public:
  ModifyStatusRequest();
  virtual ~ModifyStatusRequest();

  ModifyStatusRequest(const ModifyStatusRequest& from);
  ModifyStatusRequest(ModifyStatusRequest&& from) noexcept
    : ModifyStatusRequest() {
    *this = ::std::move(from);
  }

  inline ModifyStatusRequest& operator=(const ModifyStatusRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ModifyStatusRequest& operator=(ModifyStatusRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ModifyStatusRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ModifyStatusRequest* internal_default_instance() {
    return reinterpret_cast<const ModifyStatusRequest*>(
               &_ModifyStatusRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(ModifyStatusRequest& a, ModifyStatusRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(ModifyStatusRequest* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ModifyStatusRequest* New() const final {
    return CreateMaybeMessage<ModifyStatusRequest>(nullptr);
  }

  ModifyStatusRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ModifyStatusRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ModifyStatusRequest& from);
  void MergeFrom(const ModifyStatusRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ModifyStatusRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "autopilotrpc.ModifyStatusRequest";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_autopilot_2eproto);
    return ::descriptor_table_autopilot_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kEnableFieldNumber = 1,
  };
  // bool enable = 1;
  void clear_enable();
  bool enable() const;
  void set_enable(bool value);
  private:
  bool _internal_enable() const;
  void _internal_set_enable(bool value);
  public:

  // @@protoc_insertion_point(class_scope:autopilotrpc.ModifyStatusRequest)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  bool enable_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_autopilot_2eproto;
};
// -------------------------------------------------------------------

class ModifyStatusResponse :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:autopilotrpc.ModifyStatusResponse) */ {
 public:
  ModifyStatusResponse();
  virtual ~ModifyStatusResponse();

  ModifyStatusResponse(const ModifyStatusResponse& from);
  ModifyStatusResponse(ModifyStatusResponse&& from) noexcept
    : ModifyStatusResponse() {
    *this = ::std::move(from);
  }

  inline ModifyStatusResponse& operator=(const ModifyStatusResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ModifyStatusResponse& operator=(ModifyStatusResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ModifyStatusResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ModifyStatusResponse* internal_default_instance() {
    return reinterpret_cast<const ModifyStatusResponse*>(
               &_ModifyStatusResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(ModifyStatusResponse& a, ModifyStatusResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(ModifyStatusResponse* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ModifyStatusResponse* New() const final {
    return CreateMaybeMessage<ModifyStatusResponse>(nullptr);
  }

  ModifyStatusResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ModifyStatusResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ModifyStatusResponse& from);
  void MergeFrom(const ModifyStatusResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ModifyStatusResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "autopilotrpc.ModifyStatusResponse";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_autopilot_2eproto);
    return ::descriptor_table_autopilot_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:autopilotrpc.ModifyStatusResponse)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_autopilot_2eproto;
};
// -------------------------------------------------------------------

class QueryScoresRequest :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:autopilotrpc.QueryScoresRequest) */ {
 public:
  QueryScoresRequest();
  virtual ~QueryScoresRequest();

  QueryScoresRequest(const QueryScoresRequest& from);
  QueryScoresRequest(QueryScoresRequest&& from) noexcept
    : QueryScoresRequest() {
    *this = ::std::move(from);
  }

  inline QueryScoresRequest& operator=(const QueryScoresRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryScoresRequest& operator=(QueryScoresRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const QueryScoresRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const QueryScoresRequest* internal_default_instance() {
    return reinterpret_cast<const QueryScoresRequest*>(
               &_QueryScoresRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(QueryScoresRequest& a, QueryScoresRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(QueryScoresRequest* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline QueryScoresRequest* New() const final {
    return CreateMaybeMessage<QueryScoresRequest>(nullptr);
  }

  QueryScoresRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<QueryScoresRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const QueryScoresRequest& from);
  void MergeFrom(const QueryScoresRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(QueryScoresRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "autopilotrpc.QueryScoresRequest";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_autopilot_2eproto);
    return ::descriptor_table_autopilot_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPubkeysFieldNumber = 1,
    kIgnoreLocalStateFieldNumber = 2,
  };
  // repeated string pubkeys = 1;
  int pubkeys_size() const;
  private:
  int _internal_pubkeys_size() const;
  public:
  void clear_pubkeys();
  const std::string& pubkeys(int index) const;
  std::string* mutable_pubkeys(int index);
  void set_pubkeys(int index, const std::string& value);
  void set_pubkeys(int index, std::string&& value);
  void set_pubkeys(int index, const char* value);
  void set_pubkeys(int index, const char* value, size_t size);
  std::string* add_pubkeys();
  void add_pubkeys(const std::string& value);
  void add_pubkeys(std::string&& value);
  void add_pubkeys(const char* value);
  void add_pubkeys(const char* value, size_t size);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& pubkeys() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_pubkeys();
  private:
  const std::string& _internal_pubkeys(int index) const;
  std::string* _internal_add_pubkeys();
  public:

  // bool ignore_local_state = 2;
  void clear_ignore_local_state();
  bool ignore_local_state() const;
  void set_ignore_local_state(bool value);
  private:
  bool _internal_ignore_local_state() const;
  void _internal_set_ignore_local_state(bool value);
  public:

  // @@protoc_insertion_point(class_scope:autopilotrpc.QueryScoresRequest)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> pubkeys_;
  bool ignore_local_state_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_autopilot_2eproto;
};
// -------------------------------------------------------------------

class QueryScoresResponse_HeuristicResult_ScoresEntry_DoNotUse : public ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<QueryScoresResponse_HeuristicResult_ScoresEntry_DoNotUse, 
    std::string, double,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_DOUBLE,
    0 > {
public:
  typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<QueryScoresResponse_HeuristicResult_ScoresEntry_DoNotUse, 
    std::string, double,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_DOUBLE,
    0 > SuperType;
  QueryScoresResponse_HeuristicResult_ScoresEntry_DoNotUse();
  QueryScoresResponse_HeuristicResult_ScoresEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void MergeFrom(const QueryScoresResponse_HeuristicResult_ScoresEntry_DoNotUse& other);
  static const QueryScoresResponse_HeuristicResult_ScoresEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const QueryScoresResponse_HeuristicResult_ScoresEntry_DoNotUse*>(&_QueryScoresResponse_HeuristicResult_ScoresEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(std::string* s) {
    return ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(s->data(), static_cast<int>(s->size()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE, "autopilotrpc.QueryScoresResponse.HeuristicResult.ScoresEntry.key");
 }
  static bool ValidateValue(void*) { return true; }
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& other) final;
  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_autopilot_2eproto);
    return ::descriptor_table_autopilot_2eproto.file_level_metadata[5];
  }

  public:
};

// -------------------------------------------------------------------

class QueryScoresResponse_HeuristicResult :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:autopilotrpc.QueryScoresResponse.HeuristicResult) */ {
 public:
  QueryScoresResponse_HeuristicResult();
  virtual ~QueryScoresResponse_HeuristicResult();

  QueryScoresResponse_HeuristicResult(const QueryScoresResponse_HeuristicResult& from);
  QueryScoresResponse_HeuristicResult(QueryScoresResponse_HeuristicResult&& from) noexcept
    : QueryScoresResponse_HeuristicResult() {
    *this = ::std::move(from);
  }

  inline QueryScoresResponse_HeuristicResult& operator=(const QueryScoresResponse_HeuristicResult& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryScoresResponse_HeuristicResult& operator=(QueryScoresResponse_HeuristicResult&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const QueryScoresResponse_HeuristicResult& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const QueryScoresResponse_HeuristicResult* internal_default_instance() {
    return reinterpret_cast<const QueryScoresResponse_HeuristicResult*>(
               &_QueryScoresResponse_HeuristicResult_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(QueryScoresResponse_HeuristicResult& a, QueryScoresResponse_HeuristicResult& b) {
    a.Swap(&b);
  }
  inline void Swap(QueryScoresResponse_HeuristicResult* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline QueryScoresResponse_HeuristicResult* New() const final {
    return CreateMaybeMessage<QueryScoresResponse_HeuristicResult>(nullptr);
  }

  QueryScoresResponse_HeuristicResult* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<QueryScoresResponse_HeuristicResult>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const QueryScoresResponse_HeuristicResult& from);
  void MergeFrom(const QueryScoresResponse_HeuristicResult& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(QueryScoresResponse_HeuristicResult* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "autopilotrpc.QueryScoresResponse.HeuristicResult";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_autopilot_2eproto);
    return ::descriptor_table_autopilot_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  enum : int {
    kScoresFieldNumber = 2,
    kHeuristicFieldNumber = 1,
  };
  // map<string, double> scores = 2;
  int scores_size() const;
  private:
  int _internal_scores_size() const;
  public:
  void clear_scores();
  private:
  const ::PROTOBUF_NAMESPACE_ID::Map< std::string, double >&
      _internal_scores() const;
  ::PROTOBUF_NAMESPACE_ID::Map< std::string, double >*
      _internal_mutable_scores();
  public:
  const ::PROTOBUF_NAMESPACE_ID::Map< std::string, double >&
      scores() const;
  ::PROTOBUF_NAMESPACE_ID::Map< std::string, double >*
      mutable_scores();

  // string heuristic = 1;
  void clear_heuristic();
  const std::string& heuristic() const;
  void set_heuristic(const std::string& value);
  void set_heuristic(std::string&& value);
  void set_heuristic(const char* value);
  void set_heuristic(const char* value, size_t size);
  std::string* mutable_heuristic();
  std::string* release_heuristic();
  void set_allocated_heuristic(std::string* heuristic);
  private:
  const std::string& _internal_heuristic() const;
  void _internal_set_heuristic(const std::string& value);
  std::string* _internal_mutable_heuristic();
  public:

  // @@protoc_insertion_point(class_scope:autopilotrpc.QueryScoresResponse.HeuristicResult)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::MapField<
      QueryScoresResponse_HeuristicResult_ScoresEntry_DoNotUse,
      std::string, double,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_DOUBLE,
      0 > scores_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr heuristic_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_autopilot_2eproto;
};
// -------------------------------------------------------------------

class QueryScoresResponse :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:autopilotrpc.QueryScoresResponse) */ {
 public:
  QueryScoresResponse();
  virtual ~QueryScoresResponse();

  QueryScoresResponse(const QueryScoresResponse& from);
  QueryScoresResponse(QueryScoresResponse&& from) noexcept
    : QueryScoresResponse() {
    *this = ::std::move(from);
  }

  inline QueryScoresResponse& operator=(const QueryScoresResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryScoresResponse& operator=(QueryScoresResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const QueryScoresResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const QueryScoresResponse* internal_default_instance() {
    return reinterpret_cast<const QueryScoresResponse*>(
               &_QueryScoresResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(QueryScoresResponse& a, QueryScoresResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(QueryScoresResponse* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline QueryScoresResponse* New() const final {
    return CreateMaybeMessage<QueryScoresResponse>(nullptr);
  }

  QueryScoresResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<QueryScoresResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const QueryScoresResponse& from);
  void MergeFrom(const QueryScoresResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(QueryScoresResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "autopilotrpc.QueryScoresResponse";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_autopilot_2eproto);
    return ::descriptor_table_autopilot_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef QueryScoresResponse_HeuristicResult HeuristicResult;

  // accessors -------------------------------------------------------

  enum : int {
    kResultsFieldNumber = 1,
  };
  // repeated .autopilotrpc.QueryScoresResponse.HeuristicResult results = 1;
  int results_size() const;
  private:
  int _internal_results_size() const;
  public:
  void clear_results();
  ::autopilotrpc::QueryScoresResponse_HeuristicResult* mutable_results(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::autopilotrpc::QueryScoresResponse_HeuristicResult >*
      mutable_results();
  private:
  const ::autopilotrpc::QueryScoresResponse_HeuristicResult& _internal_results(int index) const;
  ::autopilotrpc::QueryScoresResponse_HeuristicResult* _internal_add_results();
  public:
  const ::autopilotrpc::QueryScoresResponse_HeuristicResult& results(int index) const;
  ::autopilotrpc::QueryScoresResponse_HeuristicResult* add_results();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::autopilotrpc::QueryScoresResponse_HeuristicResult >&
      results() const;

  // @@protoc_insertion_point(class_scope:autopilotrpc.QueryScoresResponse)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::autopilotrpc::QueryScoresResponse_HeuristicResult > results_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_autopilot_2eproto;
};
// -------------------------------------------------------------------

class SetScoresRequest_ScoresEntry_DoNotUse : public ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<SetScoresRequest_ScoresEntry_DoNotUse, 
    std::string, double,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_DOUBLE,
    0 > {
public:
  typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<SetScoresRequest_ScoresEntry_DoNotUse, 
    std::string, double,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_DOUBLE,
    0 > SuperType;
  SetScoresRequest_ScoresEntry_DoNotUse();
  SetScoresRequest_ScoresEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void MergeFrom(const SetScoresRequest_ScoresEntry_DoNotUse& other);
  static const SetScoresRequest_ScoresEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const SetScoresRequest_ScoresEntry_DoNotUse*>(&_SetScoresRequest_ScoresEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(std::string* s) {
    return ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(s->data(), static_cast<int>(s->size()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE, "autopilotrpc.SetScoresRequest.ScoresEntry.key");
 }
  static bool ValidateValue(void*) { return true; }
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& other) final;
  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_autopilot_2eproto);
    return ::descriptor_table_autopilot_2eproto.file_level_metadata[8];
  }

  public:
};

// -------------------------------------------------------------------

class SetScoresRequest :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:autopilotrpc.SetScoresRequest) */ {
 public:
  SetScoresRequest();
  virtual ~SetScoresRequest();

  SetScoresRequest(const SetScoresRequest& from);
  SetScoresRequest(SetScoresRequest&& from) noexcept
    : SetScoresRequest() {
    *this = ::std::move(from);
  }

  inline SetScoresRequest& operator=(const SetScoresRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetScoresRequest& operator=(SetScoresRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SetScoresRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SetScoresRequest* internal_default_instance() {
    return reinterpret_cast<const SetScoresRequest*>(
               &_SetScoresRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(SetScoresRequest& a, SetScoresRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(SetScoresRequest* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SetScoresRequest* New() const final {
    return CreateMaybeMessage<SetScoresRequest>(nullptr);
  }

  SetScoresRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SetScoresRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SetScoresRequest& from);
  void MergeFrom(const SetScoresRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SetScoresRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "autopilotrpc.SetScoresRequest";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_autopilot_2eproto);
    return ::descriptor_table_autopilot_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  enum : int {
    kScoresFieldNumber = 2,
    kHeuristicFieldNumber = 1,
  };
  // map<string, double> scores = 2;
  int scores_size() const;
  private:
  int _internal_scores_size() const;
  public:
  void clear_scores();
  private:
  const ::PROTOBUF_NAMESPACE_ID::Map< std::string, double >&
      _internal_scores() const;
  ::PROTOBUF_NAMESPACE_ID::Map< std::string, double >*
      _internal_mutable_scores();
  public:
  const ::PROTOBUF_NAMESPACE_ID::Map< std::string, double >&
      scores() const;
  ::PROTOBUF_NAMESPACE_ID::Map< std::string, double >*
      mutable_scores();

  // string heuristic = 1;
  void clear_heuristic();
  const std::string& heuristic() const;
  void set_heuristic(const std::string& value);
  void set_heuristic(std::string&& value);
  void set_heuristic(const char* value);
  void set_heuristic(const char* value, size_t size);
  std::string* mutable_heuristic();
  std::string* release_heuristic();
  void set_allocated_heuristic(std::string* heuristic);
  private:
  const std::string& _internal_heuristic() const;
  void _internal_set_heuristic(const std::string& value);
  std::string* _internal_mutable_heuristic();
  public:

  // @@protoc_insertion_point(class_scope:autopilotrpc.SetScoresRequest)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::MapField<
      SetScoresRequest_ScoresEntry_DoNotUse,
      std::string, double,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_DOUBLE,
      0 > scores_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr heuristic_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_autopilot_2eproto;
};
// -------------------------------------------------------------------

class SetScoresResponse :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:autopilotrpc.SetScoresResponse) */ {
 public:
  SetScoresResponse();
  virtual ~SetScoresResponse();

  SetScoresResponse(const SetScoresResponse& from);
  SetScoresResponse(SetScoresResponse&& from) noexcept
    : SetScoresResponse() {
    *this = ::std::move(from);
  }

  inline SetScoresResponse& operator=(const SetScoresResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetScoresResponse& operator=(SetScoresResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SetScoresResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SetScoresResponse* internal_default_instance() {
    return reinterpret_cast<const SetScoresResponse*>(
               &_SetScoresResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(SetScoresResponse& a, SetScoresResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(SetScoresResponse* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SetScoresResponse* New() const final {
    return CreateMaybeMessage<SetScoresResponse>(nullptr);
  }

  SetScoresResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SetScoresResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SetScoresResponse& from);
  void MergeFrom(const SetScoresResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SetScoresResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "autopilotrpc.SetScoresResponse";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_autopilot_2eproto);
    return ::descriptor_table_autopilot_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:autopilotrpc.SetScoresResponse)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_autopilot_2eproto;
};
// -------------------------------------------------------------------

class RestartConstraintsRequest :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:autopilotrpc.RestartConstraintsRequest) */ {
 public:
  RestartConstraintsRequest();
  virtual ~RestartConstraintsRequest();

  RestartConstraintsRequest(const RestartConstraintsRequest& from);
  RestartConstraintsRequest(RestartConstraintsRequest&& from) noexcept
    : RestartConstraintsRequest() {
    *this = ::std::move(from);
  }

  inline RestartConstraintsRequest& operator=(const RestartConstraintsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline RestartConstraintsRequest& operator=(RestartConstraintsRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const RestartConstraintsRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RestartConstraintsRequest* internal_default_instance() {
    return reinterpret_cast<const RestartConstraintsRequest*>(
               &_RestartConstraintsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  friend void swap(RestartConstraintsRequest& a, RestartConstraintsRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(RestartConstraintsRequest* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline RestartConstraintsRequest* New() const final {
    return CreateMaybeMessage<RestartConstraintsRequest>(nullptr);
  }

  RestartConstraintsRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<RestartConstraintsRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const RestartConstraintsRequest& from);
  void MergeFrom(const RestartConstraintsRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RestartConstraintsRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "autopilotrpc.RestartConstraintsRequest";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_autopilot_2eproto);
    return ::descriptor_table_autopilot_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAllocationFieldNumber = 1,
    kChanLimitFieldNumber = 2,
    kSatPerByteFieldNumber = 3,
  };
  // double allocation = 1;
  void clear_allocation();
  double allocation() const;
  void set_allocation(double value);
  private:
  double _internal_allocation() const;
  void _internal_set_allocation(double value);
  public:

  // uint32 chanLimit = 2;
  void clear_chanlimit();
  ::PROTOBUF_NAMESPACE_ID::uint32 chanlimit() const;
  void set_chanlimit(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_chanlimit() const;
  void _internal_set_chanlimit(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 satPerByte = 3;
  void clear_satperbyte();
  ::PROTOBUF_NAMESPACE_ID::uint32 satperbyte() const;
  void set_satperbyte(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_satperbyte() const;
  void _internal_set_satperbyte(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:autopilotrpc.RestartConstraintsRequest)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  double allocation_;
  ::PROTOBUF_NAMESPACE_ID::uint32 chanlimit_;
  ::PROTOBUF_NAMESPACE_ID::uint32 satperbyte_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_autopilot_2eproto;
};
// -------------------------------------------------------------------

class RestartConstraintsResponse :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:autopilotrpc.RestartConstraintsResponse) */ {
 public:
  RestartConstraintsResponse();
  virtual ~RestartConstraintsResponse();

  RestartConstraintsResponse(const RestartConstraintsResponse& from);
  RestartConstraintsResponse(RestartConstraintsResponse&& from) noexcept
    : RestartConstraintsResponse() {
    *this = ::std::move(from);
  }

  inline RestartConstraintsResponse& operator=(const RestartConstraintsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline RestartConstraintsResponse& operator=(RestartConstraintsResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const RestartConstraintsResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RestartConstraintsResponse* internal_default_instance() {
    return reinterpret_cast<const RestartConstraintsResponse*>(
               &_RestartConstraintsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  friend void swap(RestartConstraintsResponse& a, RestartConstraintsResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(RestartConstraintsResponse* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline RestartConstraintsResponse* New() const final {
    return CreateMaybeMessage<RestartConstraintsResponse>(nullptr);
  }

  RestartConstraintsResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<RestartConstraintsResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const RestartConstraintsResponse& from);
  void MergeFrom(const RestartConstraintsResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RestartConstraintsResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "autopilotrpc.RestartConstraintsResponse";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_autopilot_2eproto);
    return ::descriptor_table_autopilot_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:autopilotrpc.RestartConstraintsResponse)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_autopilot_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// StatusRequest

// -------------------------------------------------------------------

// StatusResponse

// bool active = 1;
inline void StatusResponse::clear_active() {
  active_ = false;
}
inline bool StatusResponse::_internal_active() const {
  return active_;
}
inline bool StatusResponse::active() const {
  // @@protoc_insertion_point(field_get:autopilotrpc.StatusResponse.active)
  return _internal_active();
}
inline void StatusResponse::_internal_set_active(bool value) {
  
  active_ = value;
}
inline void StatusResponse::set_active(bool value) {
  _internal_set_active(value);
  // @@protoc_insertion_point(field_set:autopilotrpc.StatusResponse.active)
}

// -------------------------------------------------------------------

// ModifyStatusRequest

// bool enable = 1;
inline void ModifyStatusRequest::clear_enable() {
  enable_ = false;
}
inline bool ModifyStatusRequest::_internal_enable() const {
  return enable_;
}
inline bool ModifyStatusRequest::enable() const {
  // @@protoc_insertion_point(field_get:autopilotrpc.ModifyStatusRequest.enable)
  return _internal_enable();
}
inline void ModifyStatusRequest::_internal_set_enable(bool value) {
  
  enable_ = value;
}
inline void ModifyStatusRequest::set_enable(bool value) {
  _internal_set_enable(value);
  // @@protoc_insertion_point(field_set:autopilotrpc.ModifyStatusRequest.enable)
}

// -------------------------------------------------------------------

// ModifyStatusResponse

// -------------------------------------------------------------------

// QueryScoresRequest

// repeated string pubkeys = 1;
inline int QueryScoresRequest::_internal_pubkeys_size() const {
  return pubkeys_.size();
}
inline int QueryScoresRequest::pubkeys_size() const {
  return _internal_pubkeys_size();
}
inline void QueryScoresRequest::clear_pubkeys() {
  pubkeys_.Clear();
}
inline std::string* QueryScoresRequest::add_pubkeys() {
  // @@protoc_insertion_point(field_add_mutable:autopilotrpc.QueryScoresRequest.pubkeys)
  return _internal_add_pubkeys();
}
inline const std::string& QueryScoresRequest::_internal_pubkeys(int index) const {
  return pubkeys_.Get(index);
}
inline const std::string& QueryScoresRequest::pubkeys(int index) const {
  // @@protoc_insertion_point(field_get:autopilotrpc.QueryScoresRequest.pubkeys)
  return _internal_pubkeys(index);
}
inline std::string* QueryScoresRequest::mutable_pubkeys(int index) {
  // @@protoc_insertion_point(field_mutable:autopilotrpc.QueryScoresRequest.pubkeys)
  return pubkeys_.Mutable(index);
}
inline void QueryScoresRequest::set_pubkeys(int index, const std::string& value) {
  // @@protoc_insertion_point(field_set:autopilotrpc.QueryScoresRequest.pubkeys)
  pubkeys_.Mutable(index)->assign(value);
}
inline void QueryScoresRequest::set_pubkeys(int index, std::string&& value) {
  // @@protoc_insertion_point(field_set:autopilotrpc.QueryScoresRequest.pubkeys)
  pubkeys_.Mutable(index)->assign(std::move(value));
}
inline void QueryScoresRequest::set_pubkeys(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  pubkeys_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:autopilotrpc.QueryScoresRequest.pubkeys)
}
inline void QueryScoresRequest::set_pubkeys(int index, const char* value, size_t size) {
  pubkeys_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:autopilotrpc.QueryScoresRequest.pubkeys)
}
inline std::string* QueryScoresRequest::_internal_add_pubkeys() {
  return pubkeys_.Add();
}
inline void QueryScoresRequest::add_pubkeys(const std::string& value) {
  pubkeys_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:autopilotrpc.QueryScoresRequest.pubkeys)
}
inline void QueryScoresRequest::add_pubkeys(std::string&& value) {
  pubkeys_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:autopilotrpc.QueryScoresRequest.pubkeys)
}
inline void QueryScoresRequest::add_pubkeys(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  pubkeys_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:autopilotrpc.QueryScoresRequest.pubkeys)
}
inline void QueryScoresRequest::add_pubkeys(const char* value, size_t size) {
  pubkeys_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:autopilotrpc.QueryScoresRequest.pubkeys)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
QueryScoresRequest::pubkeys() const {
  // @@protoc_insertion_point(field_list:autopilotrpc.QueryScoresRequest.pubkeys)
  return pubkeys_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
QueryScoresRequest::mutable_pubkeys() {
  // @@protoc_insertion_point(field_mutable_list:autopilotrpc.QueryScoresRequest.pubkeys)
  return &pubkeys_;
}

// bool ignore_local_state = 2;
inline void QueryScoresRequest::clear_ignore_local_state() {
  ignore_local_state_ = false;
}
inline bool QueryScoresRequest::_internal_ignore_local_state() const {
  return ignore_local_state_;
}
inline bool QueryScoresRequest::ignore_local_state() const {
  // @@protoc_insertion_point(field_get:autopilotrpc.QueryScoresRequest.ignore_local_state)
  return _internal_ignore_local_state();
}
inline void QueryScoresRequest::_internal_set_ignore_local_state(bool value) {
  
  ignore_local_state_ = value;
}
inline void QueryScoresRequest::set_ignore_local_state(bool value) {
  _internal_set_ignore_local_state(value);
  // @@protoc_insertion_point(field_set:autopilotrpc.QueryScoresRequest.ignore_local_state)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// QueryScoresResponse_HeuristicResult

// string heuristic = 1;
inline void QueryScoresResponse_HeuristicResult::clear_heuristic() {
  heuristic_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& QueryScoresResponse_HeuristicResult::heuristic() const {
  // @@protoc_insertion_point(field_get:autopilotrpc.QueryScoresResponse.HeuristicResult.heuristic)
  return _internal_heuristic();
}
inline void QueryScoresResponse_HeuristicResult::set_heuristic(const std::string& value) {
  _internal_set_heuristic(value);
  // @@protoc_insertion_point(field_set:autopilotrpc.QueryScoresResponse.HeuristicResult.heuristic)
}
inline std::string* QueryScoresResponse_HeuristicResult::mutable_heuristic() {
  // @@protoc_insertion_point(field_mutable:autopilotrpc.QueryScoresResponse.HeuristicResult.heuristic)
  return _internal_mutable_heuristic();
}
inline const std::string& QueryScoresResponse_HeuristicResult::_internal_heuristic() const {
  return heuristic_.GetNoArena();
}
inline void QueryScoresResponse_HeuristicResult::_internal_set_heuristic(const std::string& value) {
  
  heuristic_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void QueryScoresResponse_HeuristicResult::set_heuristic(std::string&& value) {
  
  heuristic_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:autopilotrpc.QueryScoresResponse.HeuristicResult.heuristic)
}
inline void QueryScoresResponse_HeuristicResult::set_heuristic(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  heuristic_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:autopilotrpc.QueryScoresResponse.HeuristicResult.heuristic)
}
inline void QueryScoresResponse_HeuristicResult::set_heuristic(const char* value, size_t size) {
  
  heuristic_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:autopilotrpc.QueryScoresResponse.HeuristicResult.heuristic)
}
inline std::string* QueryScoresResponse_HeuristicResult::_internal_mutable_heuristic() {
  
  return heuristic_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* QueryScoresResponse_HeuristicResult::release_heuristic() {
  // @@protoc_insertion_point(field_release:autopilotrpc.QueryScoresResponse.HeuristicResult.heuristic)
  
  return heuristic_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void QueryScoresResponse_HeuristicResult::set_allocated_heuristic(std::string* heuristic) {
  if (heuristic != nullptr) {
    
  } else {
    
  }
  heuristic_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), heuristic);
  // @@protoc_insertion_point(field_set_allocated:autopilotrpc.QueryScoresResponse.HeuristicResult.heuristic)
}

// map<string, double> scores = 2;
inline int QueryScoresResponse_HeuristicResult::_internal_scores_size() const {
  return scores_.size();
}
inline int QueryScoresResponse_HeuristicResult::scores_size() const {
  return _internal_scores_size();
}
inline void QueryScoresResponse_HeuristicResult::clear_scores() {
  scores_.Clear();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< std::string, double >&
QueryScoresResponse_HeuristicResult::_internal_scores() const {
  return scores_.GetMap();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< std::string, double >&
QueryScoresResponse_HeuristicResult::scores() const {
  // @@protoc_insertion_point(field_map:autopilotrpc.QueryScoresResponse.HeuristicResult.scores)
  return _internal_scores();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< std::string, double >*
QueryScoresResponse_HeuristicResult::_internal_mutable_scores() {
  return scores_.MutableMap();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< std::string, double >*
QueryScoresResponse_HeuristicResult::mutable_scores() {
  // @@protoc_insertion_point(field_mutable_map:autopilotrpc.QueryScoresResponse.HeuristicResult.scores)
  return _internal_mutable_scores();
}

// -------------------------------------------------------------------

// QueryScoresResponse

// repeated .autopilotrpc.QueryScoresResponse.HeuristicResult results = 1;
inline int QueryScoresResponse::_internal_results_size() const {
  return results_.size();
}
inline int QueryScoresResponse::results_size() const {
  return _internal_results_size();
}
inline void QueryScoresResponse::clear_results() {
  results_.Clear();
}
inline ::autopilotrpc::QueryScoresResponse_HeuristicResult* QueryScoresResponse::mutable_results(int index) {
  // @@protoc_insertion_point(field_mutable:autopilotrpc.QueryScoresResponse.results)
  return results_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::autopilotrpc::QueryScoresResponse_HeuristicResult >*
QueryScoresResponse::mutable_results() {
  // @@protoc_insertion_point(field_mutable_list:autopilotrpc.QueryScoresResponse.results)
  return &results_;
}
inline const ::autopilotrpc::QueryScoresResponse_HeuristicResult& QueryScoresResponse::_internal_results(int index) const {
  return results_.Get(index);
}
inline const ::autopilotrpc::QueryScoresResponse_HeuristicResult& QueryScoresResponse::results(int index) const {
  // @@protoc_insertion_point(field_get:autopilotrpc.QueryScoresResponse.results)
  return _internal_results(index);
}
inline ::autopilotrpc::QueryScoresResponse_HeuristicResult* QueryScoresResponse::_internal_add_results() {
  return results_.Add();
}
inline ::autopilotrpc::QueryScoresResponse_HeuristicResult* QueryScoresResponse::add_results() {
  // @@protoc_insertion_point(field_add:autopilotrpc.QueryScoresResponse.results)
  return _internal_add_results();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::autopilotrpc::QueryScoresResponse_HeuristicResult >&
QueryScoresResponse::results() const {
  // @@protoc_insertion_point(field_list:autopilotrpc.QueryScoresResponse.results)
  return results_;
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// SetScoresRequest

// string heuristic = 1;
inline void SetScoresRequest::clear_heuristic() {
  heuristic_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& SetScoresRequest::heuristic() const {
  // @@protoc_insertion_point(field_get:autopilotrpc.SetScoresRequest.heuristic)
  return _internal_heuristic();
}
inline void SetScoresRequest::set_heuristic(const std::string& value) {
  _internal_set_heuristic(value);
  // @@protoc_insertion_point(field_set:autopilotrpc.SetScoresRequest.heuristic)
}
inline std::string* SetScoresRequest::mutable_heuristic() {
  // @@protoc_insertion_point(field_mutable:autopilotrpc.SetScoresRequest.heuristic)
  return _internal_mutable_heuristic();
}
inline const std::string& SetScoresRequest::_internal_heuristic() const {
  return heuristic_.GetNoArena();
}
inline void SetScoresRequest::_internal_set_heuristic(const std::string& value) {
  
  heuristic_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void SetScoresRequest::set_heuristic(std::string&& value) {
  
  heuristic_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:autopilotrpc.SetScoresRequest.heuristic)
}
inline void SetScoresRequest::set_heuristic(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  heuristic_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:autopilotrpc.SetScoresRequest.heuristic)
}
inline void SetScoresRequest::set_heuristic(const char* value, size_t size) {
  
  heuristic_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:autopilotrpc.SetScoresRequest.heuristic)
}
inline std::string* SetScoresRequest::_internal_mutable_heuristic() {
  
  return heuristic_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SetScoresRequest::release_heuristic() {
  // @@protoc_insertion_point(field_release:autopilotrpc.SetScoresRequest.heuristic)
  
  return heuristic_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SetScoresRequest::set_allocated_heuristic(std::string* heuristic) {
  if (heuristic != nullptr) {
    
  } else {
    
  }
  heuristic_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), heuristic);
  // @@protoc_insertion_point(field_set_allocated:autopilotrpc.SetScoresRequest.heuristic)
}

// map<string, double> scores = 2;
inline int SetScoresRequest::_internal_scores_size() const {
  return scores_.size();
}
inline int SetScoresRequest::scores_size() const {
  return _internal_scores_size();
}
inline void SetScoresRequest::clear_scores() {
  scores_.Clear();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< std::string, double >&
SetScoresRequest::_internal_scores() const {
  return scores_.GetMap();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< std::string, double >&
SetScoresRequest::scores() const {
  // @@protoc_insertion_point(field_map:autopilotrpc.SetScoresRequest.scores)
  return _internal_scores();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< std::string, double >*
SetScoresRequest::_internal_mutable_scores() {
  return scores_.MutableMap();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< std::string, double >*
SetScoresRequest::mutable_scores() {
  // @@protoc_insertion_point(field_mutable_map:autopilotrpc.SetScoresRequest.scores)
  return _internal_mutable_scores();
}

// -------------------------------------------------------------------

// SetScoresResponse

// -------------------------------------------------------------------

// RestartConstraintsRequest

// double allocation = 1;
inline void RestartConstraintsRequest::clear_allocation() {
  allocation_ = 0;
}
inline double RestartConstraintsRequest::_internal_allocation() const {
  return allocation_;
}
inline double RestartConstraintsRequest::allocation() const {
  // @@protoc_insertion_point(field_get:autopilotrpc.RestartConstraintsRequest.allocation)
  return _internal_allocation();
}
inline void RestartConstraintsRequest::_internal_set_allocation(double value) {
  
  allocation_ = value;
}
inline void RestartConstraintsRequest::set_allocation(double value) {
  _internal_set_allocation(value);
  // @@protoc_insertion_point(field_set:autopilotrpc.RestartConstraintsRequest.allocation)
}

// uint32 chanLimit = 2;
inline void RestartConstraintsRequest::clear_chanlimit() {
  chanlimit_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RestartConstraintsRequest::_internal_chanlimit() const {
  return chanlimit_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RestartConstraintsRequest::chanlimit() const {
  // @@protoc_insertion_point(field_get:autopilotrpc.RestartConstraintsRequest.chanLimit)
  return _internal_chanlimit();
}
inline void RestartConstraintsRequest::_internal_set_chanlimit(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  chanlimit_ = value;
}
inline void RestartConstraintsRequest::set_chanlimit(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_chanlimit(value);
  // @@protoc_insertion_point(field_set:autopilotrpc.RestartConstraintsRequest.chanLimit)
}

// uint32 satPerByte = 3;
inline void RestartConstraintsRequest::clear_satperbyte() {
  satperbyte_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RestartConstraintsRequest::_internal_satperbyte() const {
  return satperbyte_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RestartConstraintsRequest::satperbyte() const {
  // @@protoc_insertion_point(field_get:autopilotrpc.RestartConstraintsRequest.satPerByte)
  return _internal_satperbyte();
}
inline void RestartConstraintsRequest::_internal_set_satperbyte(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  satperbyte_ = value;
}
inline void RestartConstraintsRequest::set_satperbyte(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_satperbyte(value);
  // @@protoc_insertion_point(field_set:autopilotrpc.RestartConstraintsRequest.satPerByte)
}

// -------------------------------------------------------------------

// RestartConstraintsResponse

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace autopilotrpc

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_autopilot_2eproto
