// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: watchtower.proto

#include "watchtower.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
namespace watchtowerrpc {
class GetInfoRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetInfoRequest> _instance;
} _GetInfoRequest_default_instance_;
class GetInfoResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetInfoResponse> _instance;
} _GetInfoResponse_default_instance_;
}  // namespace watchtowerrpc
static void InitDefaultsscc_info_GetInfoRequest_watchtower_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::watchtowerrpc::_GetInfoRequest_default_instance_;
    new (ptr) ::watchtowerrpc::GetInfoRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::watchtowerrpc::GetInfoRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetInfoRequest_watchtower_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetInfoRequest_watchtower_2eproto}, {}};

static void InitDefaultsscc_info_GetInfoResponse_watchtower_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::watchtowerrpc::_GetInfoResponse_default_instance_;
    new (ptr) ::watchtowerrpc::GetInfoResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::watchtowerrpc::GetInfoResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetInfoResponse_watchtower_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetInfoResponse_watchtower_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_watchtower_2eproto[2];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_watchtower_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_watchtower_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_watchtower_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::watchtowerrpc::GetInfoRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::watchtowerrpc::GetInfoResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::watchtowerrpc::GetInfoResponse, pubkey_),
  PROTOBUF_FIELD_OFFSET(::watchtowerrpc::GetInfoResponse, listeners_),
  PROTOBUF_FIELD_OFFSET(::watchtowerrpc::GetInfoResponse, uris_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::watchtowerrpc::GetInfoRequest)},
  { 5, -1, sizeof(::watchtowerrpc::GetInfoResponse)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::watchtowerrpc::_GetInfoRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::watchtowerrpc::_GetInfoResponse_default_instance_),
};

const char descriptor_table_protodef_watchtower_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\020watchtower.proto\022\rwatchtowerrpc\"\020\n\016Get"
  "InfoRequest\"B\n\017GetInfoResponse\022\016\n\006pubkey"
  "\030\001 \001(\014\022\021\n\tlisteners\030\002 \003(\t\022\014\n\004uris\030\003 \003(\t2"
  "V\n\nWatchtower\022H\n\007GetInfo\022\035.watchtowerrpc"
  ".GetInfoRequest\032\036.watchtowerrpc.GetInfoR"
  "esponseB5Z3github.com/lightningnetwork/l"
  "nd/lnrpc/watchtowerrpcb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_watchtower_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_watchtower_2eproto_sccs[2] = {
  &scc_info_GetInfoRequest_watchtower_2eproto.base,
  &scc_info_GetInfoResponse_watchtower_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_watchtower_2eproto_once;
static bool descriptor_table_watchtower_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_watchtower_2eproto = {
  &descriptor_table_watchtower_2eproto_initialized, descriptor_table_protodef_watchtower_2eproto, "watchtower.proto", 270,
  &descriptor_table_watchtower_2eproto_once, descriptor_table_watchtower_2eproto_sccs, descriptor_table_watchtower_2eproto_deps, 2, 0,
  schemas, file_default_instances, TableStruct_watchtower_2eproto::offsets,
  file_level_metadata_watchtower_2eproto, 2, file_level_enum_descriptors_watchtower_2eproto, file_level_service_descriptors_watchtower_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_watchtower_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_watchtower_2eproto), true);
namespace watchtowerrpc {

// ===================================================================

void GetInfoRequest::InitAsDefaultInstance() {
}
class GetInfoRequest::_Internal {
 public:
};

GetInfoRequest::GetInfoRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:watchtowerrpc.GetInfoRequest)
}
GetInfoRequest::GetInfoRequest(const GetInfoRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:watchtowerrpc.GetInfoRequest)
}

void GetInfoRequest::SharedCtor() {
}

GetInfoRequest::~GetInfoRequest() {
  // @@protoc_insertion_point(destructor:watchtowerrpc.GetInfoRequest)
  SharedDtor();
}

void GetInfoRequest::SharedDtor() {
}

void GetInfoRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetInfoRequest& GetInfoRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetInfoRequest_watchtower_2eproto.base);
  return *internal_default_instance();
}


void GetInfoRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:watchtowerrpc.GetInfoRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

const char* GetInfoRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetInfoRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:watchtowerrpc.GetInfoRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:watchtowerrpc.GetInfoRequest)
  return target;
}

size_t GetInfoRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:watchtowerrpc.GetInfoRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetInfoRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:watchtowerrpc.GetInfoRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetInfoRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetInfoRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:watchtowerrpc.GetInfoRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:watchtowerrpc.GetInfoRequest)
    MergeFrom(*source);
  }
}

void GetInfoRequest::MergeFrom(const GetInfoRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:watchtowerrpc.GetInfoRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void GetInfoRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:watchtowerrpc.GetInfoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetInfoRequest::CopyFrom(const GetInfoRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:watchtowerrpc.GetInfoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetInfoRequest::IsInitialized() const {
  return true;
}

void GetInfoRequest::InternalSwap(GetInfoRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetInfoRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetInfoResponse::InitAsDefaultInstance() {
}
class GetInfoResponse::_Internal {
 public:
};

GetInfoResponse::GetInfoResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:watchtowerrpc.GetInfoResponse)
}
GetInfoResponse::GetInfoResponse(const GetInfoResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      listeners_(from.listeners_),
      uris_(from.uris_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  pubkey_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_pubkey().empty()) {
    pubkey_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.pubkey_);
  }
  // @@protoc_insertion_point(copy_constructor:watchtowerrpc.GetInfoResponse)
}

void GetInfoResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetInfoResponse_watchtower_2eproto.base);
  pubkey_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

GetInfoResponse::~GetInfoResponse() {
  // @@protoc_insertion_point(destructor:watchtowerrpc.GetInfoResponse)
  SharedDtor();
}

void GetInfoResponse::SharedDtor() {
  pubkey_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetInfoResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetInfoResponse& GetInfoResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetInfoResponse_watchtower_2eproto.base);
  return *internal_default_instance();
}


void GetInfoResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:watchtowerrpc.GetInfoResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  listeners_.Clear();
  uris_.Clear();
  pubkey_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

const char* GetInfoResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes pubkey = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_pubkey();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated string listeners = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_listeners();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "watchtowerrpc.GetInfoResponse.listeners"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated string uris = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_uris();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "watchtowerrpc.GetInfoResponse.uris"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetInfoResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:watchtowerrpc.GetInfoResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes pubkey = 1;
  if (this->pubkey().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_pubkey(), target);
  }

  // repeated string listeners = 2;
  for (int i = 0, n = this->_internal_listeners_size(); i < n; i++) {
    const auto& s = this->_internal_listeners(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "watchtowerrpc.GetInfoResponse.listeners");
    target = stream->WriteString(2, s, target);
  }

  // repeated string uris = 3;
  for (int i = 0, n = this->_internal_uris_size(); i < n; i++) {
    const auto& s = this->_internal_uris(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "watchtowerrpc.GetInfoResponse.uris");
    target = stream->WriteString(3, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:watchtowerrpc.GetInfoResponse)
  return target;
}

size_t GetInfoResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:watchtowerrpc.GetInfoResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string listeners = 2;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(listeners_.size());
  for (int i = 0, n = listeners_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      listeners_.Get(i));
  }

  // repeated string uris = 3;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(uris_.size());
  for (int i = 0, n = uris_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      uris_.Get(i));
  }

  // bytes pubkey = 1;
  if (this->pubkey().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_pubkey());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetInfoResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:watchtowerrpc.GetInfoResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetInfoResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetInfoResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:watchtowerrpc.GetInfoResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:watchtowerrpc.GetInfoResponse)
    MergeFrom(*source);
  }
}

void GetInfoResponse::MergeFrom(const GetInfoResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:watchtowerrpc.GetInfoResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  listeners_.MergeFrom(from.listeners_);
  uris_.MergeFrom(from.uris_);
  if (from.pubkey().size() > 0) {

    pubkey_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.pubkey_);
  }
}

void GetInfoResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:watchtowerrpc.GetInfoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetInfoResponse::CopyFrom(const GetInfoResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:watchtowerrpc.GetInfoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetInfoResponse::IsInitialized() const {
  return true;
}

void GetInfoResponse::InternalSwap(GetInfoResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  listeners_.InternalSwap(&other->listeners_);
  uris_.InternalSwap(&other->uris_);
  pubkey_.Swap(&other->pubkey_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::PROTOBUF_NAMESPACE_ID::Metadata GetInfoResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace watchtowerrpc
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::watchtowerrpc::GetInfoRequest* Arena::CreateMaybeMessage< ::watchtowerrpc::GetInfoRequest >(Arena* arena) {
  return Arena::CreateInternal< ::watchtowerrpc::GetInfoRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::watchtowerrpc::GetInfoResponse* Arena::CreateMaybeMessage< ::watchtowerrpc::GetInfoResponse >(Arena* arena) {
  return Arena::CreateInternal< ::watchtowerrpc::GetInfoResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
