// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: invoices.proto

#include "invoices.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_rpc_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_RouteHint_rpc_2eproto;
namespace invoicesrpc {
class CancelInvoiceMsgDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CancelInvoiceMsg> _instance;
} _CancelInvoiceMsg_default_instance_;
class CancelInvoiceRespDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CancelInvoiceResp> _instance;
} _CancelInvoiceResp_default_instance_;
class AddHoldInvoiceRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AddHoldInvoiceRequest> _instance;
} _AddHoldInvoiceRequest_default_instance_;
class AddHoldInvoiceRespDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AddHoldInvoiceResp> _instance;
} _AddHoldInvoiceResp_default_instance_;
class SettleInvoiceMsgDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SettleInvoiceMsg> _instance;
} _SettleInvoiceMsg_default_instance_;
class SettleInvoiceRespDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SettleInvoiceResp> _instance;
} _SettleInvoiceResp_default_instance_;
class SubscribeSingleInvoiceRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SubscribeSingleInvoiceRequest> _instance;
} _SubscribeSingleInvoiceRequest_default_instance_;
}  // namespace invoicesrpc
static void InitDefaultsscc_info_AddHoldInvoiceRequest_invoices_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::invoicesrpc::_AddHoldInvoiceRequest_default_instance_;
    new (ptr) ::invoicesrpc::AddHoldInvoiceRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::invoicesrpc::AddHoldInvoiceRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_AddHoldInvoiceRequest_invoices_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_AddHoldInvoiceRequest_invoices_2eproto}, {
      &scc_info_RouteHint_rpc_2eproto.base,}};

static void InitDefaultsscc_info_AddHoldInvoiceResp_invoices_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::invoicesrpc::_AddHoldInvoiceResp_default_instance_;
    new (ptr) ::invoicesrpc::AddHoldInvoiceResp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::invoicesrpc::AddHoldInvoiceResp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AddHoldInvoiceResp_invoices_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_AddHoldInvoiceResp_invoices_2eproto}, {}};

static void InitDefaultsscc_info_CancelInvoiceMsg_invoices_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::invoicesrpc::_CancelInvoiceMsg_default_instance_;
    new (ptr) ::invoicesrpc::CancelInvoiceMsg();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::invoicesrpc::CancelInvoiceMsg::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CancelInvoiceMsg_invoices_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CancelInvoiceMsg_invoices_2eproto}, {}};

static void InitDefaultsscc_info_CancelInvoiceResp_invoices_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::invoicesrpc::_CancelInvoiceResp_default_instance_;
    new (ptr) ::invoicesrpc::CancelInvoiceResp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::invoicesrpc::CancelInvoiceResp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CancelInvoiceResp_invoices_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CancelInvoiceResp_invoices_2eproto}, {}};

static void InitDefaultsscc_info_SettleInvoiceMsg_invoices_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::invoicesrpc::_SettleInvoiceMsg_default_instance_;
    new (ptr) ::invoicesrpc::SettleInvoiceMsg();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::invoicesrpc::SettleInvoiceMsg::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SettleInvoiceMsg_invoices_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SettleInvoiceMsg_invoices_2eproto}, {}};

static void InitDefaultsscc_info_SettleInvoiceResp_invoices_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::invoicesrpc::_SettleInvoiceResp_default_instance_;
    new (ptr) ::invoicesrpc::SettleInvoiceResp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::invoicesrpc::SettleInvoiceResp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SettleInvoiceResp_invoices_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SettleInvoiceResp_invoices_2eproto}, {}};

static void InitDefaultsscc_info_SubscribeSingleInvoiceRequest_invoices_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::invoicesrpc::_SubscribeSingleInvoiceRequest_default_instance_;
    new (ptr) ::invoicesrpc::SubscribeSingleInvoiceRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::invoicesrpc::SubscribeSingleInvoiceRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SubscribeSingleInvoiceRequest_invoices_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SubscribeSingleInvoiceRequest_invoices_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_invoices_2eproto[7];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_invoices_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_invoices_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_invoices_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::invoicesrpc::CancelInvoiceMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::invoicesrpc::CancelInvoiceMsg, payment_hash_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::invoicesrpc::CancelInvoiceResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::invoicesrpc::AddHoldInvoiceRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::invoicesrpc::AddHoldInvoiceRequest, memo_),
  PROTOBUF_FIELD_OFFSET(::invoicesrpc::AddHoldInvoiceRequest, hash_),
  PROTOBUF_FIELD_OFFSET(::invoicesrpc::AddHoldInvoiceRequest, value_),
  PROTOBUF_FIELD_OFFSET(::invoicesrpc::AddHoldInvoiceRequest, value_msat_),
  PROTOBUF_FIELD_OFFSET(::invoicesrpc::AddHoldInvoiceRequest, description_hash_),
  PROTOBUF_FIELD_OFFSET(::invoicesrpc::AddHoldInvoiceRequest, expiry_),
  PROTOBUF_FIELD_OFFSET(::invoicesrpc::AddHoldInvoiceRequest, fallback_addr_),
  PROTOBUF_FIELD_OFFSET(::invoicesrpc::AddHoldInvoiceRequest, cltv_expiry_),
  PROTOBUF_FIELD_OFFSET(::invoicesrpc::AddHoldInvoiceRequest, route_hints_),
  PROTOBUF_FIELD_OFFSET(::invoicesrpc::AddHoldInvoiceRequest, private__),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::invoicesrpc::AddHoldInvoiceResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::invoicesrpc::AddHoldInvoiceResp, payment_request_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::invoicesrpc::SettleInvoiceMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::invoicesrpc::SettleInvoiceMsg, preimage_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::invoicesrpc::SettleInvoiceResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::invoicesrpc::SubscribeSingleInvoiceRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::invoicesrpc::SubscribeSingleInvoiceRequest, r_hash_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::invoicesrpc::CancelInvoiceMsg)},
  { 6, -1, sizeof(::invoicesrpc::CancelInvoiceResp)},
  { 11, -1, sizeof(::invoicesrpc::AddHoldInvoiceRequest)},
  { 26, -1, sizeof(::invoicesrpc::AddHoldInvoiceResp)},
  { 32, -1, sizeof(::invoicesrpc::SettleInvoiceMsg)},
  { 38, -1, sizeof(::invoicesrpc::SettleInvoiceResp)},
  { 43, -1, sizeof(::invoicesrpc::SubscribeSingleInvoiceRequest)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::invoicesrpc::_CancelInvoiceMsg_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::invoicesrpc::_CancelInvoiceResp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::invoicesrpc::_AddHoldInvoiceRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::invoicesrpc::_AddHoldInvoiceResp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::invoicesrpc::_SettleInvoiceMsg_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::invoicesrpc::_SettleInvoiceResp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::invoicesrpc::_SubscribeSingleInvoiceRequest_default_instance_),
};

const char descriptor_table_protodef_invoices_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\016invoices.proto\022\013invoicesrpc\032\trpc.proto"
  "\"(\n\020CancelInvoiceMsg\022\024\n\014payment_hash\030\001 \001"
  "(\014\"\023\n\021CancelInvoiceResp\"\344\001\n\025AddHoldInvoi"
  "ceRequest\022\014\n\004memo\030\001 \001(\t\022\014\n\004hash\030\002 \001(\014\022\r\n"
  "\005value\030\003 \001(\003\022\022\n\nvalue_msat\030\n \001(\003\022\030\n\020desc"
  "ription_hash\030\004 \001(\014\022\016\n\006expiry\030\005 \001(\003\022\025\n\rfa"
  "llback_addr\030\006 \001(\t\022\023\n\013cltv_expiry\030\007 \001(\004\022%"
  "\n\013route_hints\030\010 \003(\0132\020.lnrpc.RouteHint\022\017\n"
  "\007private\030\t \001(\010\"-\n\022AddHoldInvoiceResp\022\027\n\017"
  "payment_request\030\001 \001(\t\"$\n\020SettleInvoiceMs"
  "g\022\020\n\010preimage\030\001 \001(\014\"\023\n\021SettleInvoiceResp"
  "\"5\n\035SubscribeSingleInvoiceRequest\022\016\n\006r_h"
  "ash\030\002 \001(\014J\004\010\001\020\0022\331\002\n\010Invoices\022V\n\026Subscrib"
  "eSingleInvoice\022*.invoicesrpc.SubscribeSi"
  "ngleInvoiceRequest\032\016.lnrpc.Invoice0\001\022N\n\r"
  "CancelInvoice\022\035.invoicesrpc.CancelInvoic"
  "eMsg\032\036.invoicesrpc.CancelInvoiceResp\022U\n\016"
  "AddHoldInvoice\022\".invoicesrpc.AddHoldInvo"
  "iceRequest\032\037.invoicesrpc.AddHoldInvoiceR"
  "esp\022N\n\rSettleInvoice\022\035.invoicesrpc.Settl"
  "eInvoiceMsg\032\036.invoicesrpc.SettleInvoiceR"
  "espb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_invoices_2eproto_deps[1] = {
  &::descriptor_table_rpc_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_invoices_2eproto_sccs[7] = {
  &scc_info_AddHoldInvoiceRequest_invoices_2eproto.base,
  &scc_info_AddHoldInvoiceResp_invoices_2eproto.base,
  &scc_info_CancelInvoiceMsg_invoices_2eproto.base,
  &scc_info_CancelInvoiceResp_invoices_2eproto.base,
  &scc_info_SettleInvoiceMsg_invoices_2eproto.base,
  &scc_info_SettleInvoiceResp_invoices_2eproto.base,
  &scc_info_SubscribeSingleInvoiceRequest_invoices_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_invoices_2eproto_once;
static bool descriptor_table_invoices_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_invoices_2eproto = {
  &descriptor_table_invoices_2eproto_initialized, descriptor_table_protodef_invoices_2eproto, "invoices.proto", 851,
  &descriptor_table_invoices_2eproto_once, descriptor_table_invoices_2eproto_sccs, descriptor_table_invoices_2eproto_deps, 7, 1,
  schemas, file_default_instances, TableStruct_invoices_2eproto::offsets,
  file_level_metadata_invoices_2eproto, 7, file_level_enum_descriptors_invoices_2eproto, file_level_service_descriptors_invoices_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_invoices_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_invoices_2eproto), true);
namespace invoicesrpc {

// ===================================================================

void CancelInvoiceMsg::InitAsDefaultInstance() {
}
class CancelInvoiceMsg::_Internal {
 public:
};

CancelInvoiceMsg::CancelInvoiceMsg()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:invoicesrpc.CancelInvoiceMsg)
}
CancelInvoiceMsg::CancelInvoiceMsg(const CancelInvoiceMsg& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  payment_hash_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_payment_hash().empty()) {
    payment_hash_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.payment_hash_);
  }
  // @@protoc_insertion_point(copy_constructor:invoicesrpc.CancelInvoiceMsg)
}

void CancelInvoiceMsg::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CancelInvoiceMsg_invoices_2eproto.base);
  payment_hash_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

CancelInvoiceMsg::~CancelInvoiceMsg() {
  // @@protoc_insertion_point(destructor:invoicesrpc.CancelInvoiceMsg)
  SharedDtor();
}

void CancelInvoiceMsg::SharedDtor() {
  payment_hash_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CancelInvoiceMsg::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CancelInvoiceMsg& CancelInvoiceMsg::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CancelInvoiceMsg_invoices_2eproto.base);
  return *internal_default_instance();
}


void CancelInvoiceMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:invoicesrpc.CancelInvoiceMsg)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  payment_hash_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

const char* CancelInvoiceMsg::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes payment_hash = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_payment_hash();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CancelInvoiceMsg::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:invoicesrpc.CancelInvoiceMsg)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes payment_hash = 1;
  if (this->payment_hash().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_payment_hash(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:invoicesrpc.CancelInvoiceMsg)
  return target;
}

size_t CancelInvoiceMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:invoicesrpc.CancelInvoiceMsg)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes payment_hash = 1;
  if (this->payment_hash().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_payment_hash());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CancelInvoiceMsg::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:invoicesrpc.CancelInvoiceMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const CancelInvoiceMsg* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CancelInvoiceMsg>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:invoicesrpc.CancelInvoiceMsg)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:invoicesrpc.CancelInvoiceMsg)
    MergeFrom(*source);
  }
}

void CancelInvoiceMsg::MergeFrom(const CancelInvoiceMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:invoicesrpc.CancelInvoiceMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.payment_hash().size() > 0) {

    payment_hash_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.payment_hash_);
  }
}

void CancelInvoiceMsg::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:invoicesrpc.CancelInvoiceMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CancelInvoiceMsg::CopyFrom(const CancelInvoiceMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:invoicesrpc.CancelInvoiceMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CancelInvoiceMsg::IsInitialized() const {
  return true;
}

void CancelInvoiceMsg::InternalSwap(CancelInvoiceMsg* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  payment_hash_.Swap(&other->payment_hash_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::PROTOBUF_NAMESPACE_ID::Metadata CancelInvoiceMsg::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CancelInvoiceResp::InitAsDefaultInstance() {
}
class CancelInvoiceResp::_Internal {
 public:
};

CancelInvoiceResp::CancelInvoiceResp()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:invoicesrpc.CancelInvoiceResp)
}
CancelInvoiceResp::CancelInvoiceResp(const CancelInvoiceResp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:invoicesrpc.CancelInvoiceResp)
}

void CancelInvoiceResp::SharedCtor() {
}

CancelInvoiceResp::~CancelInvoiceResp() {
  // @@protoc_insertion_point(destructor:invoicesrpc.CancelInvoiceResp)
  SharedDtor();
}

void CancelInvoiceResp::SharedDtor() {
}

void CancelInvoiceResp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CancelInvoiceResp& CancelInvoiceResp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CancelInvoiceResp_invoices_2eproto.base);
  return *internal_default_instance();
}


void CancelInvoiceResp::Clear() {
// @@protoc_insertion_point(message_clear_start:invoicesrpc.CancelInvoiceResp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

const char* CancelInvoiceResp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CancelInvoiceResp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:invoicesrpc.CancelInvoiceResp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:invoicesrpc.CancelInvoiceResp)
  return target;
}

size_t CancelInvoiceResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:invoicesrpc.CancelInvoiceResp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CancelInvoiceResp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:invoicesrpc.CancelInvoiceResp)
  GOOGLE_DCHECK_NE(&from, this);
  const CancelInvoiceResp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CancelInvoiceResp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:invoicesrpc.CancelInvoiceResp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:invoicesrpc.CancelInvoiceResp)
    MergeFrom(*source);
  }
}

void CancelInvoiceResp::MergeFrom(const CancelInvoiceResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:invoicesrpc.CancelInvoiceResp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CancelInvoiceResp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:invoicesrpc.CancelInvoiceResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CancelInvoiceResp::CopyFrom(const CancelInvoiceResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:invoicesrpc.CancelInvoiceResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CancelInvoiceResp::IsInitialized() const {
  return true;
}

void CancelInvoiceResp::InternalSwap(CancelInvoiceResp* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CancelInvoiceResp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void AddHoldInvoiceRequest::InitAsDefaultInstance() {
}
class AddHoldInvoiceRequest::_Internal {
 public:
};

void AddHoldInvoiceRequest::clear_route_hints() {
  route_hints_.Clear();
}
AddHoldInvoiceRequest::AddHoldInvoiceRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:invoicesrpc.AddHoldInvoiceRequest)
}
AddHoldInvoiceRequest::AddHoldInvoiceRequest(const AddHoldInvoiceRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      route_hints_(from.route_hints_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  memo_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_memo().empty()) {
    memo_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.memo_);
  }
  hash_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_hash().empty()) {
    hash_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.hash_);
  }
  description_hash_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_description_hash().empty()) {
    description_hash_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.description_hash_);
  }
  fallback_addr_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_fallback_addr().empty()) {
    fallback_addr_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.fallback_addr_);
  }
  ::memcpy(&value_, &from.value_,
    static_cast<size_t>(reinterpret_cast<char*>(&private__) -
    reinterpret_cast<char*>(&value_)) + sizeof(private__));
  // @@protoc_insertion_point(copy_constructor:invoicesrpc.AddHoldInvoiceRequest)
}

void AddHoldInvoiceRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_AddHoldInvoiceRequest_invoices_2eproto.base);
  memo_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  hash_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  description_hash_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  fallback_addr_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&value_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&private__) -
      reinterpret_cast<char*>(&value_)) + sizeof(private__));
}

AddHoldInvoiceRequest::~AddHoldInvoiceRequest() {
  // @@protoc_insertion_point(destructor:invoicesrpc.AddHoldInvoiceRequest)
  SharedDtor();
}

void AddHoldInvoiceRequest::SharedDtor() {
  memo_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  hash_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  description_hash_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  fallback_addr_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void AddHoldInvoiceRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AddHoldInvoiceRequest& AddHoldInvoiceRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AddHoldInvoiceRequest_invoices_2eproto.base);
  return *internal_default_instance();
}


void AddHoldInvoiceRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:invoicesrpc.AddHoldInvoiceRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  route_hints_.Clear();
  memo_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  hash_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  description_hash_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  fallback_addr_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&value_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&private__) -
      reinterpret_cast<char*>(&value_)) + sizeof(private__));
  _internal_metadata_.Clear();
}

const char* AddHoldInvoiceRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string memo = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_memo();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "invoicesrpc.AddHoldInvoiceRequest.memo"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes hash = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_hash();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 value = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          value_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes description_hash = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_description_hash();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 expiry = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          expiry_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string fallback_addr = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_fallback_addr();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "invoicesrpc.AddHoldInvoiceRequest.fallback_addr"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 cltv_expiry = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          cltv_expiry_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .lnrpc.RouteHint route_hints = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_route_hints(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<66>(ptr));
        } else goto handle_unusual;
        continue;
      // bool private = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 72)) {
          private__ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 value_msat = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 80)) {
          value_msat_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AddHoldInvoiceRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:invoicesrpc.AddHoldInvoiceRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string memo = 1;
  if (this->memo().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_memo().data(), static_cast<int>(this->_internal_memo().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "invoicesrpc.AddHoldInvoiceRequest.memo");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_memo(), target);
  }

  // bytes hash = 2;
  if (this->hash().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_hash(), target);
  }

  // int64 value = 3;
  if (this->value() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(3, this->_internal_value(), target);
  }

  // bytes description_hash = 4;
  if (this->description_hash().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        4, this->_internal_description_hash(), target);
  }

  // int64 expiry = 5;
  if (this->expiry() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(5, this->_internal_expiry(), target);
  }

  // string fallback_addr = 6;
  if (this->fallback_addr().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_fallback_addr().data(), static_cast<int>(this->_internal_fallback_addr().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "invoicesrpc.AddHoldInvoiceRequest.fallback_addr");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_fallback_addr(), target);
  }

  // uint64 cltv_expiry = 7;
  if (this->cltv_expiry() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(7, this->_internal_cltv_expiry(), target);
  }

  // repeated .lnrpc.RouteHint route_hints = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_route_hints_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(8, this->_internal_route_hints(i), target, stream);
  }

  // bool private = 9;
  if (this->private_() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(9, this->_internal_private_(), target);
  }

  // int64 value_msat = 10;
  if (this->value_msat() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(10, this->_internal_value_msat(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:invoicesrpc.AddHoldInvoiceRequest)
  return target;
}

size_t AddHoldInvoiceRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:invoicesrpc.AddHoldInvoiceRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .lnrpc.RouteHint route_hints = 8;
  total_size += 1UL * this->_internal_route_hints_size();
  for (const auto& msg : this->route_hints_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string memo = 1;
  if (this->memo().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_memo());
  }

  // bytes hash = 2;
  if (this->hash().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_hash());
  }

  // bytes description_hash = 4;
  if (this->description_hash().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_description_hash());
  }

  // string fallback_addr = 6;
  if (this->fallback_addr().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_fallback_addr());
  }

  // int64 value = 3;
  if (this->value() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_value());
  }

  // int64 expiry = 5;
  if (this->expiry() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_expiry());
  }

  // uint64 cltv_expiry = 7;
  if (this->cltv_expiry() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_cltv_expiry());
  }

  // int64 value_msat = 10;
  if (this->value_msat() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_value_msat());
  }

  // bool private = 9;
  if (this->private_() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AddHoldInvoiceRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:invoicesrpc.AddHoldInvoiceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const AddHoldInvoiceRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AddHoldInvoiceRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:invoicesrpc.AddHoldInvoiceRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:invoicesrpc.AddHoldInvoiceRequest)
    MergeFrom(*source);
  }
}

void AddHoldInvoiceRequest::MergeFrom(const AddHoldInvoiceRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:invoicesrpc.AddHoldInvoiceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  route_hints_.MergeFrom(from.route_hints_);
  if (from.memo().size() > 0) {

    memo_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.memo_);
  }
  if (from.hash().size() > 0) {

    hash_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.hash_);
  }
  if (from.description_hash().size() > 0) {

    description_hash_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.description_hash_);
  }
  if (from.fallback_addr().size() > 0) {

    fallback_addr_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.fallback_addr_);
  }
  if (from.value() != 0) {
    _internal_set_value(from._internal_value());
  }
  if (from.expiry() != 0) {
    _internal_set_expiry(from._internal_expiry());
  }
  if (from.cltv_expiry() != 0) {
    _internal_set_cltv_expiry(from._internal_cltv_expiry());
  }
  if (from.value_msat() != 0) {
    _internal_set_value_msat(from._internal_value_msat());
  }
  if (from.private_() != 0) {
    _internal_set_private_(from._internal_private_());
  }
}

void AddHoldInvoiceRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:invoicesrpc.AddHoldInvoiceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddHoldInvoiceRequest::CopyFrom(const AddHoldInvoiceRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:invoicesrpc.AddHoldInvoiceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddHoldInvoiceRequest::IsInitialized() const {
  return true;
}

void AddHoldInvoiceRequest::InternalSwap(AddHoldInvoiceRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  route_hints_.InternalSwap(&other->route_hints_);
  memo_.Swap(&other->memo_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  hash_.Swap(&other->hash_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  description_hash_.Swap(&other->description_hash_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  fallback_addr_.Swap(&other->fallback_addr_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(value_, other->value_);
  swap(expiry_, other->expiry_);
  swap(cltv_expiry_, other->cltv_expiry_);
  swap(value_msat_, other->value_msat_);
  swap(private__, other->private__);
}

::PROTOBUF_NAMESPACE_ID::Metadata AddHoldInvoiceRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void AddHoldInvoiceResp::InitAsDefaultInstance() {
}
class AddHoldInvoiceResp::_Internal {
 public:
};

AddHoldInvoiceResp::AddHoldInvoiceResp()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:invoicesrpc.AddHoldInvoiceResp)
}
AddHoldInvoiceResp::AddHoldInvoiceResp(const AddHoldInvoiceResp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  payment_request_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_payment_request().empty()) {
    payment_request_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.payment_request_);
  }
  // @@protoc_insertion_point(copy_constructor:invoicesrpc.AddHoldInvoiceResp)
}

void AddHoldInvoiceResp::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_AddHoldInvoiceResp_invoices_2eproto.base);
  payment_request_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

AddHoldInvoiceResp::~AddHoldInvoiceResp() {
  // @@protoc_insertion_point(destructor:invoicesrpc.AddHoldInvoiceResp)
  SharedDtor();
}

void AddHoldInvoiceResp::SharedDtor() {
  payment_request_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void AddHoldInvoiceResp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AddHoldInvoiceResp& AddHoldInvoiceResp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AddHoldInvoiceResp_invoices_2eproto.base);
  return *internal_default_instance();
}


void AddHoldInvoiceResp::Clear() {
// @@protoc_insertion_point(message_clear_start:invoicesrpc.AddHoldInvoiceResp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  payment_request_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

const char* AddHoldInvoiceResp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string payment_request = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_payment_request();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "invoicesrpc.AddHoldInvoiceResp.payment_request"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AddHoldInvoiceResp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:invoicesrpc.AddHoldInvoiceResp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string payment_request = 1;
  if (this->payment_request().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_payment_request().data(), static_cast<int>(this->_internal_payment_request().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "invoicesrpc.AddHoldInvoiceResp.payment_request");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_payment_request(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:invoicesrpc.AddHoldInvoiceResp)
  return target;
}

size_t AddHoldInvoiceResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:invoicesrpc.AddHoldInvoiceResp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string payment_request = 1;
  if (this->payment_request().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_payment_request());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AddHoldInvoiceResp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:invoicesrpc.AddHoldInvoiceResp)
  GOOGLE_DCHECK_NE(&from, this);
  const AddHoldInvoiceResp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AddHoldInvoiceResp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:invoicesrpc.AddHoldInvoiceResp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:invoicesrpc.AddHoldInvoiceResp)
    MergeFrom(*source);
  }
}

void AddHoldInvoiceResp::MergeFrom(const AddHoldInvoiceResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:invoicesrpc.AddHoldInvoiceResp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.payment_request().size() > 0) {

    payment_request_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.payment_request_);
  }
}

void AddHoldInvoiceResp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:invoicesrpc.AddHoldInvoiceResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddHoldInvoiceResp::CopyFrom(const AddHoldInvoiceResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:invoicesrpc.AddHoldInvoiceResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddHoldInvoiceResp::IsInitialized() const {
  return true;
}

void AddHoldInvoiceResp::InternalSwap(AddHoldInvoiceResp* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  payment_request_.Swap(&other->payment_request_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::PROTOBUF_NAMESPACE_ID::Metadata AddHoldInvoiceResp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SettleInvoiceMsg::InitAsDefaultInstance() {
}
class SettleInvoiceMsg::_Internal {
 public:
};

SettleInvoiceMsg::SettleInvoiceMsg()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:invoicesrpc.SettleInvoiceMsg)
}
SettleInvoiceMsg::SettleInvoiceMsg(const SettleInvoiceMsg& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  preimage_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_preimage().empty()) {
    preimage_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.preimage_);
  }
  // @@protoc_insertion_point(copy_constructor:invoicesrpc.SettleInvoiceMsg)
}

void SettleInvoiceMsg::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SettleInvoiceMsg_invoices_2eproto.base);
  preimage_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

SettleInvoiceMsg::~SettleInvoiceMsg() {
  // @@protoc_insertion_point(destructor:invoicesrpc.SettleInvoiceMsg)
  SharedDtor();
}

void SettleInvoiceMsg::SharedDtor() {
  preimage_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void SettleInvoiceMsg::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SettleInvoiceMsg& SettleInvoiceMsg::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SettleInvoiceMsg_invoices_2eproto.base);
  return *internal_default_instance();
}


void SettleInvoiceMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:invoicesrpc.SettleInvoiceMsg)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  preimage_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

const char* SettleInvoiceMsg::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes preimage = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_preimage();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SettleInvoiceMsg::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:invoicesrpc.SettleInvoiceMsg)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes preimage = 1;
  if (this->preimage().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_preimage(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:invoicesrpc.SettleInvoiceMsg)
  return target;
}

size_t SettleInvoiceMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:invoicesrpc.SettleInvoiceMsg)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes preimage = 1;
  if (this->preimage().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_preimage());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SettleInvoiceMsg::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:invoicesrpc.SettleInvoiceMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const SettleInvoiceMsg* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SettleInvoiceMsg>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:invoicesrpc.SettleInvoiceMsg)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:invoicesrpc.SettleInvoiceMsg)
    MergeFrom(*source);
  }
}

void SettleInvoiceMsg::MergeFrom(const SettleInvoiceMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:invoicesrpc.SettleInvoiceMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.preimage().size() > 0) {

    preimage_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.preimage_);
  }
}

void SettleInvoiceMsg::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:invoicesrpc.SettleInvoiceMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SettleInvoiceMsg::CopyFrom(const SettleInvoiceMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:invoicesrpc.SettleInvoiceMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SettleInvoiceMsg::IsInitialized() const {
  return true;
}

void SettleInvoiceMsg::InternalSwap(SettleInvoiceMsg* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  preimage_.Swap(&other->preimage_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::PROTOBUF_NAMESPACE_ID::Metadata SettleInvoiceMsg::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SettleInvoiceResp::InitAsDefaultInstance() {
}
class SettleInvoiceResp::_Internal {
 public:
};

SettleInvoiceResp::SettleInvoiceResp()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:invoicesrpc.SettleInvoiceResp)
}
SettleInvoiceResp::SettleInvoiceResp(const SettleInvoiceResp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:invoicesrpc.SettleInvoiceResp)
}

void SettleInvoiceResp::SharedCtor() {
}

SettleInvoiceResp::~SettleInvoiceResp() {
  // @@protoc_insertion_point(destructor:invoicesrpc.SettleInvoiceResp)
  SharedDtor();
}

void SettleInvoiceResp::SharedDtor() {
}

void SettleInvoiceResp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SettleInvoiceResp& SettleInvoiceResp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SettleInvoiceResp_invoices_2eproto.base);
  return *internal_default_instance();
}


void SettleInvoiceResp::Clear() {
// @@protoc_insertion_point(message_clear_start:invoicesrpc.SettleInvoiceResp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

const char* SettleInvoiceResp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SettleInvoiceResp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:invoicesrpc.SettleInvoiceResp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:invoicesrpc.SettleInvoiceResp)
  return target;
}

size_t SettleInvoiceResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:invoicesrpc.SettleInvoiceResp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SettleInvoiceResp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:invoicesrpc.SettleInvoiceResp)
  GOOGLE_DCHECK_NE(&from, this);
  const SettleInvoiceResp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SettleInvoiceResp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:invoicesrpc.SettleInvoiceResp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:invoicesrpc.SettleInvoiceResp)
    MergeFrom(*source);
  }
}

void SettleInvoiceResp::MergeFrom(const SettleInvoiceResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:invoicesrpc.SettleInvoiceResp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void SettleInvoiceResp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:invoicesrpc.SettleInvoiceResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SettleInvoiceResp::CopyFrom(const SettleInvoiceResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:invoicesrpc.SettleInvoiceResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SettleInvoiceResp::IsInitialized() const {
  return true;
}

void SettleInvoiceResp::InternalSwap(SettleInvoiceResp* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SettleInvoiceResp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SubscribeSingleInvoiceRequest::InitAsDefaultInstance() {
}
class SubscribeSingleInvoiceRequest::_Internal {
 public:
};

SubscribeSingleInvoiceRequest::SubscribeSingleInvoiceRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:invoicesrpc.SubscribeSingleInvoiceRequest)
}
SubscribeSingleInvoiceRequest::SubscribeSingleInvoiceRequest(const SubscribeSingleInvoiceRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  r_hash_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_r_hash().empty()) {
    r_hash_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.r_hash_);
  }
  // @@protoc_insertion_point(copy_constructor:invoicesrpc.SubscribeSingleInvoiceRequest)
}

void SubscribeSingleInvoiceRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SubscribeSingleInvoiceRequest_invoices_2eproto.base);
  r_hash_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

SubscribeSingleInvoiceRequest::~SubscribeSingleInvoiceRequest() {
  // @@protoc_insertion_point(destructor:invoicesrpc.SubscribeSingleInvoiceRequest)
  SharedDtor();
}

void SubscribeSingleInvoiceRequest::SharedDtor() {
  r_hash_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void SubscribeSingleInvoiceRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SubscribeSingleInvoiceRequest& SubscribeSingleInvoiceRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SubscribeSingleInvoiceRequest_invoices_2eproto.base);
  return *internal_default_instance();
}


void SubscribeSingleInvoiceRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:invoicesrpc.SubscribeSingleInvoiceRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  r_hash_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

const char* SubscribeSingleInvoiceRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes r_hash = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_r_hash();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SubscribeSingleInvoiceRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:invoicesrpc.SubscribeSingleInvoiceRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes r_hash = 2;
  if (this->r_hash().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_r_hash(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:invoicesrpc.SubscribeSingleInvoiceRequest)
  return target;
}

size_t SubscribeSingleInvoiceRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:invoicesrpc.SubscribeSingleInvoiceRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes r_hash = 2;
  if (this->r_hash().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_r_hash());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SubscribeSingleInvoiceRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:invoicesrpc.SubscribeSingleInvoiceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SubscribeSingleInvoiceRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SubscribeSingleInvoiceRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:invoicesrpc.SubscribeSingleInvoiceRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:invoicesrpc.SubscribeSingleInvoiceRequest)
    MergeFrom(*source);
  }
}

void SubscribeSingleInvoiceRequest::MergeFrom(const SubscribeSingleInvoiceRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:invoicesrpc.SubscribeSingleInvoiceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.r_hash().size() > 0) {

    r_hash_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.r_hash_);
  }
}

void SubscribeSingleInvoiceRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:invoicesrpc.SubscribeSingleInvoiceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SubscribeSingleInvoiceRequest::CopyFrom(const SubscribeSingleInvoiceRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:invoicesrpc.SubscribeSingleInvoiceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SubscribeSingleInvoiceRequest::IsInitialized() const {
  return true;
}

void SubscribeSingleInvoiceRequest::InternalSwap(SubscribeSingleInvoiceRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  r_hash_.Swap(&other->r_hash_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::PROTOBUF_NAMESPACE_ID::Metadata SubscribeSingleInvoiceRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace invoicesrpc
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::invoicesrpc::CancelInvoiceMsg* Arena::CreateMaybeMessage< ::invoicesrpc::CancelInvoiceMsg >(Arena* arena) {
  return Arena::CreateInternal< ::invoicesrpc::CancelInvoiceMsg >(arena);
}
template<> PROTOBUF_NOINLINE ::invoicesrpc::CancelInvoiceResp* Arena::CreateMaybeMessage< ::invoicesrpc::CancelInvoiceResp >(Arena* arena) {
  return Arena::CreateInternal< ::invoicesrpc::CancelInvoiceResp >(arena);
}
template<> PROTOBUF_NOINLINE ::invoicesrpc::AddHoldInvoiceRequest* Arena::CreateMaybeMessage< ::invoicesrpc::AddHoldInvoiceRequest >(Arena* arena) {
  return Arena::CreateInternal< ::invoicesrpc::AddHoldInvoiceRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::invoicesrpc::AddHoldInvoiceResp* Arena::CreateMaybeMessage< ::invoicesrpc::AddHoldInvoiceResp >(Arena* arena) {
  return Arena::CreateInternal< ::invoicesrpc::AddHoldInvoiceResp >(arena);
}
template<> PROTOBUF_NOINLINE ::invoicesrpc::SettleInvoiceMsg* Arena::CreateMaybeMessage< ::invoicesrpc::SettleInvoiceMsg >(Arena* arena) {
  return Arena::CreateInternal< ::invoicesrpc::SettleInvoiceMsg >(arena);
}
template<> PROTOBUF_NOINLINE ::invoicesrpc::SettleInvoiceResp* Arena::CreateMaybeMessage< ::invoicesrpc::SettleInvoiceResp >(Arena* arena) {
  return Arena::CreateInternal< ::invoicesrpc::SettleInvoiceResp >(arena);
}
template<> PROTOBUF_NOINLINE ::invoicesrpc::SubscribeSingleInvoiceRequest* Arena::CreateMaybeMessage< ::invoicesrpc::SubscribeSingleInvoiceRequest >(Arena* arena) {
  return Arena::CreateInternal< ::invoicesrpc::SubscribeSingleInvoiceRequest >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
