// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: stakenet/orderbook/api.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_stakenet_2forderbook_2fapi_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_stakenet_2forderbook_2fapi_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3011000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3011002 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "commands.pb.h"
#include "events.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_stakenet_2forderbook_2fapi_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_stakenet_2forderbook_2fapi_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[4]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_stakenet_2forderbook_2fapi_2eproto;
namespace io {
namespace stakenet {
namespace orderbook {
namespace protos {
class Command;
class CommandDefaultTypeInternal;
extern CommandDefaultTypeInternal _Command_default_instance_;
class Event;
class EventDefaultTypeInternal;
extern EventDefaultTypeInternal _Event_default_instance_;
class Event_CommandResponse;
class Event_CommandResponseDefaultTypeInternal;
extern Event_CommandResponseDefaultTypeInternal _Event_CommandResponse_default_instance_;
class Event_ServerEvent;
class Event_ServerEventDefaultTypeInternal;
extern Event_ServerEventDefaultTypeInternal _Event_ServerEvent_default_instance_;
}  // namespace protos
}  // namespace orderbook
}  // namespace stakenet
}  // namespace io
PROTOBUF_NAMESPACE_OPEN
template<> ::io::stakenet::orderbook::protos::Command* Arena::CreateMaybeMessage<::io::stakenet::orderbook::protos::Command>(Arena*);
template<> ::io::stakenet::orderbook::protos::Event* Arena::CreateMaybeMessage<::io::stakenet::orderbook::protos::Event>(Arena*);
template<> ::io::stakenet::orderbook::protos::Event_CommandResponse* Arena::CreateMaybeMessage<::io::stakenet::orderbook::protos::Event_CommandResponse>(Arena*);
template<> ::io::stakenet::orderbook::protos::Event_ServerEvent* Arena::CreateMaybeMessage<::io::stakenet::orderbook::protos::Event_ServerEvent>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace io {
namespace stakenet {
namespace orderbook {
namespace protos {

// ===================================================================

class Command :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:io.stakenet.orderbook.protos.Command) */ {
 public:
  Command();
  virtual ~Command();

  Command(const Command& from);
  Command(Command&& from) noexcept
    : Command() {
    *this = ::std::move(from);
  }

  inline Command& operator=(const Command& from) {
    CopyFrom(from);
    return *this;
  }
  inline Command& operator=(Command&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Command& default_instance();

  enum ValueCase {
    kPing = 2,
    kGetTradingPairs = 3,
    kSubscribe = 4,
    kUnsubscribe = 5,
    kGetOpenOrders = 6,
    kGetHistoricTrades = 7,
    kGetBarsPrices = 8,
    kPlaceOrder = 9,
    kGetTradingOrderById = 10,
    kCancelOrder = 11,
    kSendOrderMessage = 12,
    kCancelMatchedOrder = 13,
    kCleanTradingPairOrders = 14,
    kGetLndPaymentInvoiceCommand = 15,
    kGenerateInvoiceToRentChannelCommand = 16,
    kRentChannelCommand = 17,
    kGetChannelStatusCommand = 18,
    kGetFeeToRentChannelCommand = 19,
    kRefundFeeCommand = 20,
    kGetRefundableAmountCommand = 21,
    kGetFeeToExtendRentedChannelCommand = 22,
    kGenerateInvoiceToExtendRentedChannelCommand = 23,
    kExtendRentedChannelTimeCommand = 24,
    kRegisterPublicKeyCommand = 25,
    kRegisterPublicIdentifierCommand = 26,
    kGetConnextPaymentInformationCommand = 27,
    kGeneratePaymentHashToRentChannelCommand = 28,
    kGeneratePaymentHashToExtendConnextRentedChannelCommand = 29,
    kGetConnextChannelContractDeploymentFeeCommand = 30,
    kRegisterConnextChannelContractDeploymentFeeCommand = 31,
    VALUE_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Command* internal_default_instance() {
    return reinterpret_cast<const Command*>(
               &_Command_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(Command& a, Command& b) {
    a.Swap(&b);
  }
  inline void Swap(Command* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Command* New() const final {
    return CreateMaybeMessage<Command>(nullptr);
  }

  Command* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Command>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Command& from);
  void MergeFrom(const Command& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Command* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "io.stakenet.orderbook.protos.Command";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_stakenet_2forderbook_2fapi_2eproto);
    return ::descriptor_table_stakenet_2forderbook_2fapi_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kClientMessageIdFieldNumber = 1,
    kPingFieldNumber = 2,
    kGetTradingPairsFieldNumber = 3,
    kSubscribeFieldNumber = 4,
    kUnsubscribeFieldNumber = 5,
    kGetOpenOrdersFieldNumber = 6,
    kGetHistoricTradesFieldNumber = 7,
    kGetBarsPricesFieldNumber = 8,
    kPlaceOrderFieldNumber = 9,
    kGetTradingOrderByIdFieldNumber = 10,
    kCancelOrderFieldNumber = 11,
    kSendOrderMessageFieldNumber = 12,
    kCancelMatchedOrderFieldNumber = 13,
    kCleanTradingPairOrdersFieldNumber = 14,
    kGetLndPaymentInvoiceCommandFieldNumber = 15,
    kGenerateInvoiceToRentChannelCommandFieldNumber = 16,
    kRentChannelCommandFieldNumber = 17,
    kGetChannelStatusCommandFieldNumber = 18,
    kGetFeeToRentChannelCommandFieldNumber = 19,
    kRefundFeeCommandFieldNumber = 20,
    kGetRefundableAmountCommandFieldNumber = 21,
    kGetFeeToExtendRentedChannelCommandFieldNumber = 22,
    kGenerateInvoiceToExtendRentedChannelCommandFieldNumber = 23,
    kExtendRentedChannelTimeCommandFieldNumber = 24,
    kRegisterPublicKeyCommandFieldNumber = 25,
    kRegisterPublicIdentifierCommandFieldNumber = 26,
    kGetConnextPaymentInformationCommandFieldNumber = 27,
    kGeneratePaymentHashToRentChannelCommandFieldNumber = 28,
    kGeneratePaymentHashToExtendConnextRentedChannelCommandFieldNumber = 29,
    kGetConnextChannelContractDeploymentFeeCommandFieldNumber = 30,
    kRegisterConnextChannelContractDeploymentFeeCommandFieldNumber = 31,
  };
  // string clientMessageId = 1;
  void clear_clientmessageid();
  const std::string& clientmessageid() const;
  void set_clientmessageid(const std::string& value);
  void set_clientmessageid(std::string&& value);
  void set_clientmessageid(const char* value);
  void set_clientmessageid(const char* value, size_t size);
  std::string* mutable_clientmessageid();
  std::string* release_clientmessageid();
  void set_allocated_clientmessageid(std::string* clientmessageid);
  private:
  const std::string& _internal_clientmessageid() const;
  void _internal_set_clientmessageid(const std::string& value);
  std::string* _internal_mutable_clientmessageid();
  public:

  // .io.stakenet.orderbook.protos.PingCommand ping = 2;
  bool has_ping() const;
  private:
  bool _internal_has_ping() const;
  public:
  void clear_ping();
  const ::io::stakenet::orderbook::protos::PingCommand& ping() const;
  ::io::stakenet::orderbook::protos::PingCommand* release_ping();
  ::io::stakenet::orderbook::protos::PingCommand* mutable_ping();
  void set_allocated_ping(::io::stakenet::orderbook::protos::PingCommand* ping);
  private:
  const ::io::stakenet::orderbook::protos::PingCommand& _internal_ping() const;
  ::io::stakenet::orderbook::protos::PingCommand* _internal_mutable_ping();
  public:

  // .io.stakenet.orderbook.protos.GetTradingPairsCommand getTradingPairs = 3;
  bool has_gettradingpairs() const;
  private:
  bool _internal_has_gettradingpairs() const;
  public:
  void clear_gettradingpairs();
  const ::io::stakenet::orderbook::protos::GetTradingPairsCommand& gettradingpairs() const;
  ::io::stakenet::orderbook::protos::GetTradingPairsCommand* release_gettradingpairs();
  ::io::stakenet::orderbook::protos::GetTradingPairsCommand* mutable_gettradingpairs();
  void set_allocated_gettradingpairs(::io::stakenet::orderbook::protos::GetTradingPairsCommand* gettradingpairs);
  private:
  const ::io::stakenet::orderbook::protos::GetTradingPairsCommand& _internal_gettradingpairs() const;
  ::io::stakenet::orderbook::protos::GetTradingPairsCommand* _internal_mutable_gettradingpairs();
  public:

  // .io.stakenet.orderbook.protos.SubscribeCommand subscribe = 4;
  bool has_subscribe() const;
  private:
  bool _internal_has_subscribe() const;
  public:
  void clear_subscribe();
  const ::io::stakenet::orderbook::protos::SubscribeCommand& subscribe() const;
  ::io::stakenet::orderbook::protos::SubscribeCommand* release_subscribe();
  ::io::stakenet::orderbook::protos::SubscribeCommand* mutable_subscribe();
  void set_allocated_subscribe(::io::stakenet::orderbook::protos::SubscribeCommand* subscribe);
  private:
  const ::io::stakenet::orderbook::protos::SubscribeCommand& _internal_subscribe() const;
  ::io::stakenet::orderbook::protos::SubscribeCommand* _internal_mutable_subscribe();
  public:

  // .io.stakenet.orderbook.protos.UnsubscribeCommand unsubscribe = 5;
  bool has_unsubscribe() const;
  private:
  bool _internal_has_unsubscribe() const;
  public:
  void clear_unsubscribe();
  const ::io::stakenet::orderbook::protos::UnsubscribeCommand& unsubscribe() const;
  ::io::stakenet::orderbook::protos::UnsubscribeCommand* release_unsubscribe();
  ::io::stakenet::orderbook::protos::UnsubscribeCommand* mutable_unsubscribe();
  void set_allocated_unsubscribe(::io::stakenet::orderbook::protos::UnsubscribeCommand* unsubscribe);
  private:
  const ::io::stakenet::orderbook::protos::UnsubscribeCommand& _internal_unsubscribe() const;
  ::io::stakenet::orderbook::protos::UnsubscribeCommand* _internal_mutable_unsubscribe();
  public:

  // .io.stakenet.orderbook.protos.GetOpenOrdersCommand getOpenOrders = 6;
  bool has_getopenorders() const;
  private:
  bool _internal_has_getopenorders() const;
  public:
  void clear_getopenorders();
  const ::io::stakenet::orderbook::protos::GetOpenOrdersCommand& getopenorders() const;
  ::io::stakenet::orderbook::protos::GetOpenOrdersCommand* release_getopenorders();
  ::io::stakenet::orderbook::protos::GetOpenOrdersCommand* mutable_getopenorders();
  void set_allocated_getopenorders(::io::stakenet::orderbook::protos::GetOpenOrdersCommand* getopenorders);
  private:
  const ::io::stakenet::orderbook::protos::GetOpenOrdersCommand& _internal_getopenorders() const;
  ::io::stakenet::orderbook::protos::GetOpenOrdersCommand* _internal_mutable_getopenorders();
  public:

  // .io.stakenet.orderbook.protos.GetHistoricTradesCommand getHistoricTrades = 7;
  bool has_gethistorictrades() const;
  private:
  bool _internal_has_gethistorictrades() const;
  public:
  void clear_gethistorictrades();
  const ::io::stakenet::orderbook::protos::GetHistoricTradesCommand& gethistorictrades() const;
  ::io::stakenet::orderbook::protos::GetHistoricTradesCommand* release_gethistorictrades();
  ::io::stakenet::orderbook::protos::GetHistoricTradesCommand* mutable_gethistorictrades();
  void set_allocated_gethistorictrades(::io::stakenet::orderbook::protos::GetHistoricTradesCommand* gethistorictrades);
  private:
  const ::io::stakenet::orderbook::protos::GetHistoricTradesCommand& _internal_gethistorictrades() const;
  ::io::stakenet::orderbook::protos::GetHistoricTradesCommand* _internal_mutable_gethistorictrades();
  public:

  // .io.stakenet.orderbook.protos.GetBarsPricesCommand getBarsPrices = 8;
  bool has_getbarsprices() const;
  private:
  bool _internal_has_getbarsprices() const;
  public:
  void clear_getbarsprices();
  const ::io::stakenet::orderbook::protos::GetBarsPricesCommand& getbarsprices() const;
  ::io::stakenet::orderbook::protos::GetBarsPricesCommand* release_getbarsprices();
  ::io::stakenet::orderbook::protos::GetBarsPricesCommand* mutable_getbarsprices();
  void set_allocated_getbarsprices(::io::stakenet::orderbook::protos::GetBarsPricesCommand* getbarsprices);
  private:
  const ::io::stakenet::orderbook::protos::GetBarsPricesCommand& _internal_getbarsprices() const;
  ::io::stakenet::orderbook::protos::GetBarsPricesCommand* _internal_mutable_getbarsprices();
  public:

  // .io.stakenet.orderbook.protos.PlaceOrderCommand placeOrder = 9;
  bool has_placeorder() const;
  private:
  bool _internal_has_placeorder() const;
  public:
  void clear_placeorder();
  const ::io::stakenet::orderbook::protos::PlaceOrderCommand& placeorder() const;
  ::io::stakenet::orderbook::protos::PlaceOrderCommand* release_placeorder();
  ::io::stakenet::orderbook::protos::PlaceOrderCommand* mutable_placeorder();
  void set_allocated_placeorder(::io::stakenet::orderbook::protos::PlaceOrderCommand* placeorder);
  private:
  const ::io::stakenet::orderbook::protos::PlaceOrderCommand& _internal_placeorder() const;
  ::io::stakenet::orderbook::protos::PlaceOrderCommand* _internal_mutable_placeorder();
  public:

  // .io.stakenet.orderbook.protos.GetOpenOrderByIdCommand getTradingOrderById = 10;
  bool has_gettradingorderbyid() const;
  private:
  bool _internal_has_gettradingorderbyid() const;
  public:
  void clear_gettradingorderbyid();
  const ::io::stakenet::orderbook::protos::GetOpenOrderByIdCommand& gettradingorderbyid() const;
  ::io::stakenet::orderbook::protos::GetOpenOrderByIdCommand* release_gettradingorderbyid();
  ::io::stakenet::orderbook::protos::GetOpenOrderByIdCommand* mutable_gettradingorderbyid();
  void set_allocated_gettradingorderbyid(::io::stakenet::orderbook::protos::GetOpenOrderByIdCommand* gettradingorderbyid);
  private:
  const ::io::stakenet::orderbook::protos::GetOpenOrderByIdCommand& _internal_gettradingorderbyid() const;
  ::io::stakenet::orderbook::protos::GetOpenOrderByIdCommand* _internal_mutable_gettradingorderbyid();
  public:

  // .io.stakenet.orderbook.protos.CancelOpenOrderCommand cancelOrder = 11;
  bool has_cancelorder() const;
  private:
  bool _internal_has_cancelorder() const;
  public:
  void clear_cancelorder();
  const ::io::stakenet::orderbook::protos::CancelOpenOrderCommand& cancelorder() const;
  ::io::stakenet::orderbook::protos::CancelOpenOrderCommand* release_cancelorder();
  ::io::stakenet::orderbook::protos::CancelOpenOrderCommand* mutable_cancelorder();
  void set_allocated_cancelorder(::io::stakenet::orderbook::protos::CancelOpenOrderCommand* cancelorder);
  private:
  const ::io::stakenet::orderbook::protos::CancelOpenOrderCommand& _internal_cancelorder() const;
  ::io::stakenet::orderbook::protos::CancelOpenOrderCommand* _internal_mutable_cancelorder();
  public:

  // .io.stakenet.orderbook.protos.SendOrderMessageCommand sendOrderMessage = 12;
  bool has_sendordermessage() const;
  private:
  bool _internal_has_sendordermessage() const;
  public:
  void clear_sendordermessage();
  const ::io::stakenet::orderbook::protos::SendOrderMessageCommand& sendordermessage() const;
  ::io::stakenet::orderbook::protos::SendOrderMessageCommand* release_sendordermessage();
  ::io::stakenet::orderbook::protos::SendOrderMessageCommand* mutable_sendordermessage();
  void set_allocated_sendordermessage(::io::stakenet::orderbook::protos::SendOrderMessageCommand* sendordermessage);
  private:
  const ::io::stakenet::orderbook::protos::SendOrderMessageCommand& _internal_sendordermessage() const;
  ::io::stakenet::orderbook::protos::SendOrderMessageCommand* _internal_mutable_sendordermessage();
  public:

  // .io.stakenet.orderbook.protos.CancelMatchedOrderCommand cancelMatchedOrder = 13;
  bool has_cancelmatchedorder() const;
  private:
  bool _internal_has_cancelmatchedorder() const;
  public:
  void clear_cancelmatchedorder();
  const ::io::stakenet::orderbook::protos::CancelMatchedOrderCommand& cancelmatchedorder() const;
  ::io::stakenet::orderbook::protos::CancelMatchedOrderCommand* release_cancelmatchedorder();
  ::io::stakenet::orderbook::protos::CancelMatchedOrderCommand* mutable_cancelmatchedorder();
  void set_allocated_cancelmatchedorder(::io::stakenet::orderbook::protos::CancelMatchedOrderCommand* cancelmatchedorder);
  private:
  const ::io::stakenet::orderbook::protos::CancelMatchedOrderCommand& _internal_cancelmatchedorder() const;
  ::io::stakenet::orderbook::protos::CancelMatchedOrderCommand* _internal_mutable_cancelmatchedorder();
  public:

  // .io.stakenet.orderbook.protos.CleanTradingPairOrdersCommand cleanTradingPairOrders = 14;
  bool has_cleantradingpairorders() const;
  private:
  bool _internal_has_cleantradingpairorders() const;
  public:
  void clear_cleantradingpairorders();
  const ::io::stakenet::orderbook::protos::CleanTradingPairOrdersCommand& cleantradingpairorders() const;
  ::io::stakenet::orderbook::protos::CleanTradingPairOrdersCommand* release_cleantradingpairorders();
  ::io::stakenet::orderbook::protos::CleanTradingPairOrdersCommand* mutable_cleantradingpairorders();
  void set_allocated_cleantradingpairorders(::io::stakenet::orderbook::protos::CleanTradingPairOrdersCommand* cleantradingpairorders);
  private:
  const ::io::stakenet::orderbook::protos::CleanTradingPairOrdersCommand& _internal_cleantradingpairorders() const;
  ::io::stakenet::orderbook::protos::CleanTradingPairOrdersCommand* _internal_mutable_cleantradingpairorders();
  public:

  // .io.stakenet.orderbook.protos.GetLndPaymentInvoiceCommand getLndPaymentInvoiceCommand = 15;
  bool has_getlndpaymentinvoicecommand() const;
  private:
  bool _internal_has_getlndpaymentinvoicecommand() const;
  public:
  void clear_getlndpaymentinvoicecommand();
  const ::io::stakenet::orderbook::protos::GetLndPaymentInvoiceCommand& getlndpaymentinvoicecommand() const;
  ::io::stakenet::orderbook::protos::GetLndPaymentInvoiceCommand* release_getlndpaymentinvoicecommand();
  ::io::stakenet::orderbook::protos::GetLndPaymentInvoiceCommand* mutable_getlndpaymentinvoicecommand();
  void set_allocated_getlndpaymentinvoicecommand(::io::stakenet::orderbook::protos::GetLndPaymentInvoiceCommand* getlndpaymentinvoicecommand);
  private:
  const ::io::stakenet::orderbook::protos::GetLndPaymentInvoiceCommand& _internal_getlndpaymentinvoicecommand() const;
  ::io::stakenet::orderbook::protos::GetLndPaymentInvoiceCommand* _internal_mutable_getlndpaymentinvoicecommand();
  public:

  // .io.stakenet.orderbook.protos.GenerateInvoiceToRentChannelCommand generateInvoiceToRentChannelCommand = 16;
  bool has_generateinvoicetorentchannelcommand() const;
  private:
  bool _internal_has_generateinvoicetorentchannelcommand() const;
  public:
  void clear_generateinvoicetorentchannelcommand();
  const ::io::stakenet::orderbook::protos::GenerateInvoiceToRentChannelCommand& generateinvoicetorentchannelcommand() const;
  ::io::stakenet::orderbook::protos::GenerateInvoiceToRentChannelCommand* release_generateinvoicetorentchannelcommand();
  ::io::stakenet::orderbook::protos::GenerateInvoiceToRentChannelCommand* mutable_generateinvoicetorentchannelcommand();
  void set_allocated_generateinvoicetorentchannelcommand(::io::stakenet::orderbook::protos::GenerateInvoiceToRentChannelCommand* generateinvoicetorentchannelcommand);
  private:
  const ::io::stakenet::orderbook::protos::GenerateInvoiceToRentChannelCommand& _internal_generateinvoicetorentchannelcommand() const;
  ::io::stakenet::orderbook::protos::GenerateInvoiceToRentChannelCommand* _internal_mutable_generateinvoicetorentchannelcommand();
  public:

  // .io.stakenet.orderbook.protos.RentChannelCommand rentChannelCommand = 17;
  bool has_rentchannelcommand() const;
  private:
  bool _internal_has_rentchannelcommand() const;
  public:
  void clear_rentchannelcommand();
  const ::io::stakenet::orderbook::protos::RentChannelCommand& rentchannelcommand() const;
  ::io::stakenet::orderbook::protos::RentChannelCommand* release_rentchannelcommand();
  ::io::stakenet::orderbook::protos::RentChannelCommand* mutable_rentchannelcommand();
  void set_allocated_rentchannelcommand(::io::stakenet::orderbook::protos::RentChannelCommand* rentchannelcommand);
  private:
  const ::io::stakenet::orderbook::protos::RentChannelCommand& _internal_rentchannelcommand() const;
  ::io::stakenet::orderbook::protos::RentChannelCommand* _internal_mutable_rentchannelcommand();
  public:

  // .io.stakenet.orderbook.protos.GetChannelStatusCommand getChannelStatusCommand = 18;
  bool has_getchannelstatuscommand() const;
  private:
  bool _internal_has_getchannelstatuscommand() const;
  public:
  void clear_getchannelstatuscommand();
  const ::io::stakenet::orderbook::protos::GetChannelStatusCommand& getchannelstatuscommand() const;
  ::io::stakenet::orderbook::protos::GetChannelStatusCommand* release_getchannelstatuscommand();
  ::io::stakenet::orderbook::protos::GetChannelStatusCommand* mutable_getchannelstatuscommand();
  void set_allocated_getchannelstatuscommand(::io::stakenet::orderbook::protos::GetChannelStatusCommand* getchannelstatuscommand);
  private:
  const ::io::stakenet::orderbook::protos::GetChannelStatusCommand& _internal_getchannelstatuscommand() const;
  ::io::stakenet::orderbook::protos::GetChannelStatusCommand* _internal_mutable_getchannelstatuscommand();
  public:

  // .io.stakenet.orderbook.protos.GetFeeToRentChannelCommand getFeeToRentChannelCommand = 19;
  bool has_getfeetorentchannelcommand() const;
  private:
  bool _internal_has_getfeetorentchannelcommand() const;
  public:
  void clear_getfeetorentchannelcommand();
  const ::io::stakenet::orderbook::protos::GetFeeToRentChannelCommand& getfeetorentchannelcommand() const;
  ::io::stakenet::orderbook::protos::GetFeeToRentChannelCommand* release_getfeetorentchannelcommand();
  ::io::stakenet::orderbook::protos::GetFeeToRentChannelCommand* mutable_getfeetorentchannelcommand();
  void set_allocated_getfeetorentchannelcommand(::io::stakenet::orderbook::protos::GetFeeToRentChannelCommand* getfeetorentchannelcommand);
  private:
  const ::io::stakenet::orderbook::protos::GetFeeToRentChannelCommand& _internal_getfeetorentchannelcommand() const;
  ::io::stakenet::orderbook::protos::GetFeeToRentChannelCommand* _internal_mutable_getfeetorentchannelcommand();
  public:

  // .io.stakenet.orderbook.protos.RefundFeeCommand refundFeeCommand = 20;
  bool has_refundfeecommand() const;
  private:
  bool _internal_has_refundfeecommand() const;
  public:
  void clear_refundfeecommand();
  const ::io::stakenet::orderbook::protos::RefundFeeCommand& refundfeecommand() const;
  ::io::stakenet::orderbook::protos::RefundFeeCommand* release_refundfeecommand();
  ::io::stakenet::orderbook::protos::RefundFeeCommand* mutable_refundfeecommand();
  void set_allocated_refundfeecommand(::io::stakenet::orderbook::protos::RefundFeeCommand* refundfeecommand);
  private:
  const ::io::stakenet::orderbook::protos::RefundFeeCommand& _internal_refundfeecommand() const;
  ::io::stakenet::orderbook::protos::RefundFeeCommand* _internal_mutable_refundfeecommand();
  public:

  // .io.stakenet.orderbook.protos.GetRefundableAmountCommand getRefundableAmountCommand = 21;
  bool has_getrefundableamountcommand() const;
  private:
  bool _internal_has_getrefundableamountcommand() const;
  public:
  void clear_getrefundableamountcommand();
  const ::io::stakenet::orderbook::protos::GetRefundableAmountCommand& getrefundableamountcommand() const;
  ::io::stakenet::orderbook::protos::GetRefundableAmountCommand* release_getrefundableamountcommand();
  ::io::stakenet::orderbook::protos::GetRefundableAmountCommand* mutable_getrefundableamountcommand();
  void set_allocated_getrefundableamountcommand(::io::stakenet::orderbook::protos::GetRefundableAmountCommand* getrefundableamountcommand);
  private:
  const ::io::stakenet::orderbook::protos::GetRefundableAmountCommand& _internal_getrefundableamountcommand() const;
  ::io::stakenet::orderbook::protos::GetRefundableAmountCommand* _internal_mutable_getrefundableamountcommand();
  public:

  // .io.stakenet.orderbook.protos.GetFeeToExtendRentedChannelCommand getFeeToExtendRentedChannelCommand = 22;
  bool has_getfeetoextendrentedchannelcommand() const;
  private:
  bool _internal_has_getfeetoextendrentedchannelcommand() const;
  public:
  void clear_getfeetoextendrentedchannelcommand();
  const ::io::stakenet::orderbook::protos::GetFeeToExtendRentedChannelCommand& getfeetoextendrentedchannelcommand() const;
  ::io::stakenet::orderbook::protos::GetFeeToExtendRentedChannelCommand* release_getfeetoextendrentedchannelcommand();
  ::io::stakenet::orderbook::protos::GetFeeToExtendRentedChannelCommand* mutable_getfeetoextendrentedchannelcommand();
  void set_allocated_getfeetoextendrentedchannelcommand(::io::stakenet::orderbook::protos::GetFeeToExtendRentedChannelCommand* getfeetoextendrentedchannelcommand);
  private:
  const ::io::stakenet::orderbook::protos::GetFeeToExtendRentedChannelCommand& _internal_getfeetoextendrentedchannelcommand() const;
  ::io::stakenet::orderbook::protos::GetFeeToExtendRentedChannelCommand* _internal_mutable_getfeetoextendrentedchannelcommand();
  public:

  // .io.stakenet.orderbook.protos.GenerateInvoiceToExtendRentedChannelCommand generateInvoiceToExtendRentedChannelCommand = 23;
  bool has_generateinvoicetoextendrentedchannelcommand() const;
  private:
  bool _internal_has_generateinvoicetoextendrentedchannelcommand() const;
  public:
  void clear_generateinvoicetoextendrentedchannelcommand();
  const ::io::stakenet::orderbook::protos::GenerateInvoiceToExtendRentedChannelCommand& generateinvoicetoextendrentedchannelcommand() const;
  ::io::stakenet::orderbook::protos::GenerateInvoiceToExtendRentedChannelCommand* release_generateinvoicetoextendrentedchannelcommand();
  ::io::stakenet::orderbook::protos::GenerateInvoiceToExtendRentedChannelCommand* mutable_generateinvoicetoextendrentedchannelcommand();
  void set_allocated_generateinvoicetoextendrentedchannelcommand(::io::stakenet::orderbook::protos::GenerateInvoiceToExtendRentedChannelCommand* generateinvoicetoextendrentedchannelcommand);
  private:
  const ::io::stakenet::orderbook::protos::GenerateInvoiceToExtendRentedChannelCommand& _internal_generateinvoicetoextendrentedchannelcommand() const;
  ::io::stakenet::orderbook::protos::GenerateInvoiceToExtendRentedChannelCommand* _internal_mutable_generateinvoicetoextendrentedchannelcommand();
  public:

  // .io.stakenet.orderbook.protos.ExtendRentedChannelTimeCommand extendRentedChannelTimeCommand = 24;
  bool has_extendrentedchanneltimecommand() const;
  private:
  bool _internal_has_extendrentedchanneltimecommand() const;
  public:
  void clear_extendrentedchanneltimecommand();
  const ::io::stakenet::orderbook::protos::ExtendRentedChannelTimeCommand& extendrentedchanneltimecommand() const;
  ::io::stakenet::orderbook::protos::ExtendRentedChannelTimeCommand* release_extendrentedchanneltimecommand();
  ::io::stakenet::orderbook::protos::ExtendRentedChannelTimeCommand* mutable_extendrentedchanneltimecommand();
  void set_allocated_extendrentedchanneltimecommand(::io::stakenet::orderbook::protos::ExtendRentedChannelTimeCommand* extendrentedchanneltimecommand);
  private:
  const ::io::stakenet::orderbook::protos::ExtendRentedChannelTimeCommand& _internal_extendrentedchanneltimecommand() const;
  ::io::stakenet::orderbook::protos::ExtendRentedChannelTimeCommand* _internal_mutable_extendrentedchanneltimecommand();
  public:

  // .io.stakenet.orderbook.protos.RegisterPublicKeyCommand registerPublicKeyCommand = 25;
  bool has_registerpublickeycommand() const;
  private:
  bool _internal_has_registerpublickeycommand() const;
  public:
  void clear_registerpublickeycommand();
  const ::io::stakenet::orderbook::protos::RegisterPublicKeyCommand& registerpublickeycommand() const;
  ::io::stakenet::orderbook::protos::RegisterPublicKeyCommand* release_registerpublickeycommand();
  ::io::stakenet::orderbook::protos::RegisterPublicKeyCommand* mutable_registerpublickeycommand();
  void set_allocated_registerpublickeycommand(::io::stakenet::orderbook::protos::RegisterPublicKeyCommand* registerpublickeycommand);
  private:
  const ::io::stakenet::orderbook::protos::RegisterPublicKeyCommand& _internal_registerpublickeycommand() const;
  ::io::stakenet::orderbook::protos::RegisterPublicKeyCommand* _internal_mutable_registerpublickeycommand();
  public:

  // .io.stakenet.orderbook.protos.RegisterPublicIdentifierCommand registerPublicIdentifierCommand = 26;
  bool has_registerpublicidentifiercommand() const;
  private:
  bool _internal_has_registerpublicidentifiercommand() const;
  public:
  void clear_registerpublicidentifiercommand();
  const ::io::stakenet::orderbook::protos::RegisterPublicIdentifierCommand& registerpublicidentifiercommand() const;
  ::io::stakenet::orderbook::protos::RegisterPublicIdentifierCommand* release_registerpublicidentifiercommand();
  ::io::stakenet::orderbook::protos::RegisterPublicIdentifierCommand* mutable_registerpublicidentifiercommand();
  void set_allocated_registerpublicidentifiercommand(::io::stakenet::orderbook::protos::RegisterPublicIdentifierCommand* registerpublicidentifiercommand);
  private:
  const ::io::stakenet::orderbook::protos::RegisterPublicIdentifierCommand& _internal_registerpublicidentifiercommand() const;
  ::io::stakenet::orderbook::protos::RegisterPublicIdentifierCommand* _internal_mutable_registerpublicidentifiercommand();
  public:

  // .io.stakenet.orderbook.protos.GetConnextPaymentInformationCommand getConnextPaymentInformationCommand = 27;
  bool has_getconnextpaymentinformationcommand() const;
  private:
  bool _internal_has_getconnextpaymentinformationcommand() const;
  public:
  void clear_getconnextpaymentinformationcommand();
  const ::io::stakenet::orderbook::protos::GetConnextPaymentInformationCommand& getconnextpaymentinformationcommand() const;
  ::io::stakenet::orderbook::protos::GetConnextPaymentInformationCommand* release_getconnextpaymentinformationcommand();
  ::io::stakenet::orderbook::protos::GetConnextPaymentInformationCommand* mutable_getconnextpaymentinformationcommand();
  void set_allocated_getconnextpaymentinformationcommand(::io::stakenet::orderbook::protos::GetConnextPaymentInformationCommand* getconnextpaymentinformationcommand);
  private:
  const ::io::stakenet::orderbook::protos::GetConnextPaymentInformationCommand& _internal_getconnextpaymentinformationcommand() const;
  ::io::stakenet::orderbook::protos::GetConnextPaymentInformationCommand* _internal_mutable_getconnextpaymentinformationcommand();
  public:

  // .io.stakenet.orderbook.protos.GeneratePaymentHashToRentChannelCommand generatePaymentHashToRentChannelCommand = 28;
  bool has_generatepaymenthashtorentchannelcommand() const;
  private:
  bool _internal_has_generatepaymenthashtorentchannelcommand() const;
  public:
  void clear_generatepaymenthashtorentchannelcommand();
  const ::io::stakenet::orderbook::protos::GeneratePaymentHashToRentChannelCommand& generatepaymenthashtorentchannelcommand() const;
  ::io::stakenet::orderbook::protos::GeneratePaymentHashToRentChannelCommand* release_generatepaymenthashtorentchannelcommand();
  ::io::stakenet::orderbook::protos::GeneratePaymentHashToRentChannelCommand* mutable_generatepaymenthashtorentchannelcommand();
  void set_allocated_generatepaymenthashtorentchannelcommand(::io::stakenet::orderbook::protos::GeneratePaymentHashToRentChannelCommand* generatepaymenthashtorentchannelcommand);
  private:
  const ::io::stakenet::orderbook::protos::GeneratePaymentHashToRentChannelCommand& _internal_generatepaymenthashtorentchannelcommand() const;
  ::io::stakenet::orderbook::protos::GeneratePaymentHashToRentChannelCommand* _internal_mutable_generatepaymenthashtorentchannelcommand();
  public:

  // .io.stakenet.orderbook.protos.GeneratePaymentHashToExtendConnextRentedChannelCommand generatePaymentHashToExtendConnextRentedChannelCommand = 29;
  bool has_generatepaymenthashtoextendconnextrentedchannelcommand() const;
  private:
  bool _internal_has_generatepaymenthashtoextendconnextrentedchannelcommand() const;
  public:
  void clear_generatepaymenthashtoextendconnextrentedchannelcommand();
  const ::io::stakenet::orderbook::protos::GeneratePaymentHashToExtendConnextRentedChannelCommand& generatepaymenthashtoextendconnextrentedchannelcommand() const;
  ::io::stakenet::orderbook::protos::GeneratePaymentHashToExtendConnextRentedChannelCommand* release_generatepaymenthashtoextendconnextrentedchannelcommand();
  ::io::stakenet::orderbook::protos::GeneratePaymentHashToExtendConnextRentedChannelCommand* mutable_generatepaymenthashtoextendconnextrentedchannelcommand();
  void set_allocated_generatepaymenthashtoextendconnextrentedchannelcommand(::io::stakenet::orderbook::protos::GeneratePaymentHashToExtendConnextRentedChannelCommand* generatepaymenthashtoextendconnextrentedchannelcommand);
  private:
  const ::io::stakenet::orderbook::protos::GeneratePaymentHashToExtendConnextRentedChannelCommand& _internal_generatepaymenthashtoextendconnextrentedchannelcommand() const;
  ::io::stakenet::orderbook::protos::GeneratePaymentHashToExtendConnextRentedChannelCommand* _internal_mutable_generatepaymenthashtoextendconnextrentedchannelcommand();
  public:

  // .io.stakenet.orderbook.protos.GetConnextChannelContractDeploymentFeeCommand getConnextChannelContractDeploymentFeeCommand = 30;
  bool has_getconnextchannelcontractdeploymentfeecommand() const;
  private:
  bool _internal_has_getconnextchannelcontractdeploymentfeecommand() const;
  public:
  void clear_getconnextchannelcontractdeploymentfeecommand();
  const ::io::stakenet::orderbook::protos::GetConnextChannelContractDeploymentFeeCommand& getconnextchannelcontractdeploymentfeecommand() const;
  ::io::stakenet::orderbook::protos::GetConnextChannelContractDeploymentFeeCommand* release_getconnextchannelcontractdeploymentfeecommand();
  ::io::stakenet::orderbook::protos::GetConnextChannelContractDeploymentFeeCommand* mutable_getconnextchannelcontractdeploymentfeecommand();
  void set_allocated_getconnextchannelcontractdeploymentfeecommand(::io::stakenet::orderbook::protos::GetConnextChannelContractDeploymentFeeCommand* getconnextchannelcontractdeploymentfeecommand);
  private:
  const ::io::stakenet::orderbook::protos::GetConnextChannelContractDeploymentFeeCommand& _internal_getconnextchannelcontractdeploymentfeecommand() const;
  ::io::stakenet::orderbook::protos::GetConnextChannelContractDeploymentFeeCommand* _internal_mutable_getconnextchannelcontractdeploymentfeecommand();
  public:

  // .io.stakenet.orderbook.protos.RegisterConnextChannelContractDeploymentFeeCommand registerConnextChannelContractDeploymentFeeCommand = 31;
  bool has_registerconnextchannelcontractdeploymentfeecommand() const;
  private:
  bool _internal_has_registerconnextchannelcontractdeploymentfeecommand() const;
  public:
  void clear_registerconnextchannelcontractdeploymentfeecommand();
  const ::io::stakenet::orderbook::protos::RegisterConnextChannelContractDeploymentFeeCommand& registerconnextchannelcontractdeploymentfeecommand() const;
  ::io::stakenet::orderbook::protos::RegisterConnextChannelContractDeploymentFeeCommand* release_registerconnextchannelcontractdeploymentfeecommand();
  ::io::stakenet::orderbook::protos::RegisterConnextChannelContractDeploymentFeeCommand* mutable_registerconnextchannelcontractdeploymentfeecommand();
  void set_allocated_registerconnextchannelcontractdeploymentfeecommand(::io::stakenet::orderbook::protos::RegisterConnextChannelContractDeploymentFeeCommand* registerconnextchannelcontractdeploymentfeecommand);
  private:
  const ::io::stakenet::orderbook::protos::RegisterConnextChannelContractDeploymentFeeCommand& _internal_registerconnextchannelcontractdeploymentfeecommand() const;
  ::io::stakenet::orderbook::protos::RegisterConnextChannelContractDeploymentFeeCommand* _internal_mutable_registerconnextchannelcontractdeploymentfeecommand();
  public:

  void clear_value();
  ValueCase value_case() const;
  // @@protoc_insertion_point(class_scope:io.stakenet.orderbook.protos.Command)
 private:
  class _Internal;
  void set_has_ping();
  void set_has_gettradingpairs();
  void set_has_subscribe();
  void set_has_unsubscribe();
  void set_has_getopenorders();
  void set_has_gethistorictrades();
  void set_has_getbarsprices();
  void set_has_placeorder();
  void set_has_gettradingorderbyid();
  void set_has_cancelorder();
  void set_has_sendordermessage();
  void set_has_cancelmatchedorder();
  void set_has_cleantradingpairorders();
  void set_has_getlndpaymentinvoicecommand();
  void set_has_generateinvoicetorentchannelcommand();
  void set_has_rentchannelcommand();
  void set_has_getchannelstatuscommand();
  void set_has_getfeetorentchannelcommand();
  void set_has_refundfeecommand();
  void set_has_getrefundableamountcommand();
  void set_has_getfeetoextendrentedchannelcommand();
  void set_has_generateinvoicetoextendrentedchannelcommand();
  void set_has_extendrentedchanneltimecommand();
  void set_has_registerpublickeycommand();
  void set_has_registerpublicidentifiercommand();
  void set_has_getconnextpaymentinformationcommand();
  void set_has_generatepaymenthashtorentchannelcommand();
  void set_has_generatepaymenthashtoextendconnextrentedchannelcommand();
  void set_has_getconnextchannelcontractdeploymentfeecommand();
  void set_has_registerconnextchannelcontractdeploymentfeecommand();

  inline bool has_value() const;
  inline void clear_has_value();

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr clientmessageid_;
  union ValueUnion {
    ValueUnion() {}
    ::io::stakenet::orderbook::protos::PingCommand* ping_;
    ::io::stakenet::orderbook::protos::GetTradingPairsCommand* gettradingpairs_;
    ::io::stakenet::orderbook::protos::SubscribeCommand* subscribe_;
    ::io::stakenet::orderbook::protos::UnsubscribeCommand* unsubscribe_;
    ::io::stakenet::orderbook::protos::GetOpenOrdersCommand* getopenorders_;
    ::io::stakenet::orderbook::protos::GetHistoricTradesCommand* gethistorictrades_;
    ::io::stakenet::orderbook::protos::GetBarsPricesCommand* getbarsprices_;
    ::io::stakenet::orderbook::protos::PlaceOrderCommand* placeorder_;
    ::io::stakenet::orderbook::protos::GetOpenOrderByIdCommand* gettradingorderbyid_;
    ::io::stakenet::orderbook::protos::CancelOpenOrderCommand* cancelorder_;
    ::io::stakenet::orderbook::protos::SendOrderMessageCommand* sendordermessage_;
    ::io::stakenet::orderbook::protos::CancelMatchedOrderCommand* cancelmatchedorder_;
    ::io::stakenet::orderbook::protos::CleanTradingPairOrdersCommand* cleantradingpairorders_;
    ::io::stakenet::orderbook::protos::GetLndPaymentInvoiceCommand* getlndpaymentinvoicecommand_;
    ::io::stakenet::orderbook::protos::GenerateInvoiceToRentChannelCommand* generateinvoicetorentchannelcommand_;
    ::io::stakenet::orderbook::protos::RentChannelCommand* rentchannelcommand_;
    ::io::stakenet::orderbook::protos::GetChannelStatusCommand* getchannelstatuscommand_;
    ::io::stakenet::orderbook::protos::GetFeeToRentChannelCommand* getfeetorentchannelcommand_;
    ::io::stakenet::orderbook::protos::RefundFeeCommand* refundfeecommand_;
    ::io::stakenet::orderbook::protos::GetRefundableAmountCommand* getrefundableamountcommand_;
    ::io::stakenet::orderbook::protos::GetFeeToExtendRentedChannelCommand* getfeetoextendrentedchannelcommand_;
    ::io::stakenet::orderbook::protos::GenerateInvoiceToExtendRentedChannelCommand* generateinvoicetoextendrentedchannelcommand_;
    ::io::stakenet::orderbook::protos::ExtendRentedChannelTimeCommand* extendrentedchanneltimecommand_;
    ::io::stakenet::orderbook::protos::RegisterPublicKeyCommand* registerpublickeycommand_;
    ::io::stakenet::orderbook::protos::RegisterPublicIdentifierCommand* registerpublicidentifiercommand_;
    ::io::stakenet::orderbook::protos::GetConnextPaymentInformationCommand* getconnextpaymentinformationcommand_;
    ::io::stakenet::orderbook::protos::GeneratePaymentHashToRentChannelCommand* generatepaymenthashtorentchannelcommand_;
    ::io::stakenet::orderbook::protos::GeneratePaymentHashToExtendConnextRentedChannelCommand* generatepaymenthashtoextendconnextrentedchannelcommand_;
    ::io::stakenet::orderbook::protos::GetConnextChannelContractDeploymentFeeCommand* getconnextchannelcontractdeploymentfeecommand_;
    ::io::stakenet::orderbook::protos::RegisterConnextChannelContractDeploymentFeeCommand* registerconnextchannelcontractdeploymentfeecommand_;
  } value_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 _oneof_case_[1];

  friend struct ::TableStruct_stakenet_2forderbook_2fapi_2eproto;
};
// -------------------------------------------------------------------

class Event_CommandResponse :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:io.stakenet.orderbook.protos.Event.CommandResponse) */ {
 public:
  Event_CommandResponse();
  virtual ~Event_CommandResponse();

  Event_CommandResponse(const Event_CommandResponse& from);
  Event_CommandResponse(Event_CommandResponse&& from) noexcept
    : Event_CommandResponse() {
    *this = ::std::move(from);
  }

  inline Event_CommandResponse& operator=(const Event_CommandResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline Event_CommandResponse& operator=(Event_CommandResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Event_CommandResponse& default_instance();

  enum ValueCase {
    kCommandFailed = 2,
    kPingResponse = 3,
    kGetTradingPairsResponse = 4,
    kSubscribeResponse = 5,
    kUnsubscribeResponse = 6,
    kGetOpenOrdersResponse = 7,
    kGetHistoricTradesResponse = 8,
    kGetBarsPricesResponse = 9,
    kPlaceOrderResponse = 10,
    kGetOpenOrderByIdResponse = 11,
    kCancelOrderResponse = 12,
    kCancelMatchedOrderResponse = 13,
    kSendOrderMessageResponse = 14,
    kCleanTradingPairOrdersResponse = 15,
    kGetLndPaymentInvoiceResponse = 16,
    kGenerateInvoiceToRentChannelResponse = 17,
    kRentChannelResponse = 18,
    kGetChannelStatusResponse = 19,
    kGetFeeToRentChannelResponse = 20,
    kRefundFeeResponse = 21,
    kGetRefundableAmountResponse = 22,
    kGetFeeToExtendRentedChannelResponse = 23,
    kGenerateInvoiceToExtendRentedChannelResponse = 24,
    kExtendRentedChannelTimeResponse = 25,
    kRegisterPublicKeyResponse = 26,
    kRegisterPublicIdentifierResponse = 27,
    kGetConnextPaymentInformationResponse = 28,
    kGeneratePaymentHashToRentChannelResponse = 29,
    kGeneratePaymentHashToExtendConnextRentedChannelResponse = 30,
    kGetConnextChannelContractDeploymentFeeResponse = 31,
    kRegisterConnextChannelContractDeploymentFeeResponse = 32,
    VALUE_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Event_CommandResponse* internal_default_instance() {
    return reinterpret_cast<const Event_CommandResponse*>(
               &_Event_CommandResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(Event_CommandResponse& a, Event_CommandResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(Event_CommandResponse* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Event_CommandResponse* New() const final {
    return CreateMaybeMessage<Event_CommandResponse>(nullptr);
  }

  Event_CommandResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Event_CommandResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Event_CommandResponse& from);
  void MergeFrom(const Event_CommandResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Event_CommandResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "io.stakenet.orderbook.protos.Event.CommandResponse";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_stakenet_2forderbook_2fapi_2eproto);
    return ::descriptor_table_stakenet_2forderbook_2fapi_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kClientMessageIdFieldNumber = 1,
    kCommandFailedFieldNumber = 2,
    kPingResponseFieldNumber = 3,
    kGetTradingPairsResponseFieldNumber = 4,
    kSubscribeResponseFieldNumber = 5,
    kUnsubscribeResponseFieldNumber = 6,
    kGetOpenOrdersResponseFieldNumber = 7,
    kGetHistoricTradesResponseFieldNumber = 8,
    kGetBarsPricesResponseFieldNumber = 9,
    kPlaceOrderResponseFieldNumber = 10,
    kGetOpenOrderByIdResponseFieldNumber = 11,
    kCancelOrderResponseFieldNumber = 12,
    kCancelMatchedOrderResponseFieldNumber = 13,
    kSendOrderMessageResponseFieldNumber = 14,
    kCleanTradingPairOrdersResponseFieldNumber = 15,
    kGetLndPaymentInvoiceResponseFieldNumber = 16,
    kGenerateInvoiceToRentChannelResponseFieldNumber = 17,
    kRentChannelResponseFieldNumber = 18,
    kGetChannelStatusResponseFieldNumber = 19,
    kGetFeeToRentChannelResponseFieldNumber = 20,
    kRefundFeeResponseFieldNumber = 21,
    kGetRefundableAmountResponseFieldNumber = 22,
    kGetFeeToExtendRentedChannelResponseFieldNumber = 23,
    kGenerateInvoiceToExtendRentedChannelResponseFieldNumber = 24,
    kExtendRentedChannelTimeResponseFieldNumber = 25,
    kRegisterPublicKeyResponseFieldNumber = 26,
    kRegisterPublicIdentifierResponseFieldNumber = 27,
    kGetConnextPaymentInformationResponseFieldNumber = 28,
    kGeneratePaymentHashToRentChannelResponseFieldNumber = 29,
    kGeneratePaymentHashToExtendConnextRentedChannelResponseFieldNumber = 30,
    kGetConnextChannelContractDeploymentFeeResponseFieldNumber = 31,
    kRegisterConnextChannelContractDeploymentFeeResponseFieldNumber = 32,
  };
  // string clientMessageId = 1;
  void clear_clientmessageid();
  const std::string& clientmessageid() const;
  void set_clientmessageid(const std::string& value);
  void set_clientmessageid(std::string&& value);
  void set_clientmessageid(const char* value);
  void set_clientmessageid(const char* value, size_t size);
  std::string* mutable_clientmessageid();
  std::string* release_clientmessageid();
  void set_allocated_clientmessageid(std::string* clientmessageid);
  private:
  const std::string& _internal_clientmessageid() const;
  void _internal_set_clientmessageid(const std::string& value);
  std::string* _internal_mutable_clientmessageid();
  public:

  // .io.stakenet.orderbook.protos.CommandFailed commandFailed = 2;
  bool has_commandfailed() const;
  private:
  bool _internal_has_commandfailed() const;
  public:
  void clear_commandfailed();
  const ::io::stakenet::orderbook::protos::CommandFailed& commandfailed() const;
  ::io::stakenet::orderbook::protos::CommandFailed* release_commandfailed();
  ::io::stakenet::orderbook::protos::CommandFailed* mutable_commandfailed();
  void set_allocated_commandfailed(::io::stakenet::orderbook::protos::CommandFailed* commandfailed);
  private:
  const ::io::stakenet::orderbook::protos::CommandFailed& _internal_commandfailed() const;
  ::io::stakenet::orderbook::protos::CommandFailed* _internal_mutable_commandfailed();
  public:

  // .io.stakenet.orderbook.protos.PingResponse pingResponse = 3;
  bool has_pingresponse() const;
  private:
  bool _internal_has_pingresponse() const;
  public:
  void clear_pingresponse();
  const ::io::stakenet::orderbook::protos::PingResponse& pingresponse() const;
  ::io::stakenet::orderbook::protos::PingResponse* release_pingresponse();
  ::io::stakenet::orderbook::protos::PingResponse* mutable_pingresponse();
  void set_allocated_pingresponse(::io::stakenet::orderbook::protos::PingResponse* pingresponse);
  private:
  const ::io::stakenet::orderbook::protos::PingResponse& _internal_pingresponse() const;
  ::io::stakenet::orderbook::protos::PingResponse* _internal_mutable_pingresponse();
  public:

  // .io.stakenet.orderbook.protos.GetTradingPairsResponse getTradingPairsResponse = 4;
  bool has_gettradingpairsresponse() const;
  private:
  bool _internal_has_gettradingpairsresponse() const;
  public:
  void clear_gettradingpairsresponse();
  const ::io::stakenet::orderbook::protos::GetTradingPairsResponse& gettradingpairsresponse() const;
  ::io::stakenet::orderbook::protos::GetTradingPairsResponse* release_gettradingpairsresponse();
  ::io::stakenet::orderbook::protos::GetTradingPairsResponse* mutable_gettradingpairsresponse();
  void set_allocated_gettradingpairsresponse(::io::stakenet::orderbook::protos::GetTradingPairsResponse* gettradingpairsresponse);
  private:
  const ::io::stakenet::orderbook::protos::GetTradingPairsResponse& _internal_gettradingpairsresponse() const;
  ::io::stakenet::orderbook::protos::GetTradingPairsResponse* _internal_mutable_gettradingpairsresponse();
  public:

  // .io.stakenet.orderbook.protos.SubscribeResponse subscribeResponse = 5;
  bool has_subscriberesponse() const;
  private:
  bool _internal_has_subscriberesponse() const;
  public:
  void clear_subscriberesponse();
  const ::io::stakenet::orderbook::protos::SubscribeResponse& subscriberesponse() const;
  ::io::stakenet::orderbook::protos::SubscribeResponse* release_subscriberesponse();
  ::io::stakenet::orderbook::protos::SubscribeResponse* mutable_subscriberesponse();
  void set_allocated_subscriberesponse(::io::stakenet::orderbook::protos::SubscribeResponse* subscriberesponse);
  private:
  const ::io::stakenet::orderbook::protos::SubscribeResponse& _internal_subscriberesponse() const;
  ::io::stakenet::orderbook::protos::SubscribeResponse* _internal_mutable_subscriberesponse();
  public:

  // .io.stakenet.orderbook.protos.UnsubscribeResponse unsubscribeResponse = 6;
  bool has_unsubscriberesponse() const;
  private:
  bool _internal_has_unsubscriberesponse() const;
  public:
  void clear_unsubscriberesponse();
  const ::io::stakenet::orderbook::protos::UnsubscribeResponse& unsubscriberesponse() const;
  ::io::stakenet::orderbook::protos::UnsubscribeResponse* release_unsubscriberesponse();
  ::io::stakenet::orderbook::protos::UnsubscribeResponse* mutable_unsubscriberesponse();
  void set_allocated_unsubscriberesponse(::io::stakenet::orderbook::protos::UnsubscribeResponse* unsubscriberesponse);
  private:
  const ::io::stakenet::orderbook::protos::UnsubscribeResponse& _internal_unsubscriberesponse() const;
  ::io::stakenet::orderbook::protos::UnsubscribeResponse* _internal_mutable_unsubscriberesponse();
  public:

  // .io.stakenet.orderbook.protos.GetOpenOrdersResponse getOpenOrdersResponse = 7;
  bool has_getopenordersresponse() const;
  private:
  bool _internal_has_getopenordersresponse() const;
  public:
  void clear_getopenordersresponse();
  const ::io::stakenet::orderbook::protos::GetOpenOrdersResponse& getopenordersresponse() const;
  ::io::stakenet::orderbook::protos::GetOpenOrdersResponse* release_getopenordersresponse();
  ::io::stakenet::orderbook::protos::GetOpenOrdersResponse* mutable_getopenordersresponse();
  void set_allocated_getopenordersresponse(::io::stakenet::orderbook::protos::GetOpenOrdersResponse* getopenordersresponse);
  private:
  const ::io::stakenet::orderbook::protos::GetOpenOrdersResponse& _internal_getopenordersresponse() const;
  ::io::stakenet::orderbook::protos::GetOpenOrdersResponse* _internal_mutable_getopenordersresponse();
  public:

  // .io.stakenet.orderbook.protos.GetHistoricTradesResponse getHistoricTradesResponse = 8;
  bool has_gethistorictradesresponse() const;
  private:
  bool _internal_has_gethistorictradesresponse() const;
  public:
  void clear_gethistorictradesresponse();
  const ::io::stakenet::orderbook::protos::GetHistoricTradesResponse& gethistorictradesresponse() const;
  ::io::stakenet::orderbook::protos::GetHistoricTradesResponse* release_gethistorictradesresponse();
  ::io::stakenet::orderbook::protos::GetHistoricTradesResponse* mutable_gethistorictradesresponse();
  void set_allocated_gethistorictradesresponse(::io::stakenet::orderbook::protos::GetHistoricTradesResponse* gethistorictradesresponse);
  private:
  const ::io::stakenet::orderbook::protos::GetHistoricTradesResponse& _internal_gethistorictradesresponse() const;
  ::io::stakenet::orderbook::protos::GetHistoricTradesResponse* _internal_mutable_gethistorictradesresponse();
  public:

  // .io.stakenet.orderbook.protos.GetBarsPricesResponse getBarsPricesResponse = 9;
  bool has_getbarspricesresponse() const;
  private:
  bool _internal_has_getbarspricesresponse() const;
  public:
  void clear_getbarspricesresponse();
  const ::io::stakenet::orderbook::protos::GetBarsPricesResponse& getbarspricesresponse() const;
  ::io::stakenet::orderbook::protos::GetBarsPricesResponse* release_getbarspricesresponse();
  ::io::stakenet::orderbook::protos::GetBarsPricesResponse* mutable_getbarspricesresponse();
  void set_allocated_getbarspricesresponse(::io::stakenet::orderbook::protos::GetBarsPricesResponse* getbarspricesresponse);
  private:
  const ::io::stakenet::orderbook::protos::GetBarsPricesResponse& _internal_getbarspricesresponse() const;
  ::io::stakenet::orderbook::protos::GetBarsPricesResponse* _internal_mutable_getbarspricesresponse();
  public:

  // .io.stakenet.orderbook.protos.PlaceOrderResponse placeOrderResponse = 10;
  bool has_placeorderresponse() const;
  private:
  bool _internal_has_placeorderresponse() const;
  public:
  void clear_placeorderresponse();
  const ::io::stakenet::orderbook::protos::PlaceOrderResponse& placeorderresponse() const;
  ::io::stakenet::orderbook::protos::PlaceOrderResponse* release_placeorderresponse();
  ::io::stakenet::orderbook::protos::PlaceOrderResponse* mutable_placeorderresponse();
  void set_allocated_placeorderresponse(::io::stakenet::orderbook::protos::PlaceOrderResponse* placeorderresponse);
  private:
  const ::io::stakenet::orderbook::protos::PlaceOrderResponse& _internal_placeorderresponse() const;
  ::io::stakenet::orderbook::protos::PlaceOrderResponse* _internal_mutable_placeorderresponse();
  public:

  // .io.stakenet.orderbook.protos.GetOpenOrderByIdResponse getOpenOrderByIdResponse = 11;
  bool has_getopenorderbyidresponse() const;
  private:
  bool _internal_has_getopenorderbyidresponse() const;
  public:
  void clear_getopenorderbyidresponse();
  const ::io::stakenet::orderbook::protos::GetOpenOrderByIdResponse& getopenorderbyidresponse() const;
  ::io::stakenet::orderbook::protos::GetOpenOrderByIdResponse* release_getopenorderbyidresponse();
  ::io::stakenet::orderbook::protos::GetOpenOrderByIdResponse* mutable_getopenorderbyidresponse();
  void set_allocated_getopenorderbyidresponse(::io::stakenet::orderbook::protos::GetOpenOrderByIdResponse* getopenorderbyidresponse);
  private:
  const ::io::stakenet::orderbook::protos::GetOpenOrderByIdResponse& _internal_getopenorderbyidresponse() const;
  ::io::stakenet::orderbook::protos::GetOpenOrderByIdResponse* _internal_mutable_getopenorderbyidresponse();
  public:

  // .io.stakenet.orderbook.protos.CancelOpenOrderResponse cancelOrderResponse = 12;
  bool has_cancelorderresponse() const;
  private:
  bool _internal_has_cancelorderresponse() const;
  public:
  void clear_cancelorderresponse();
  const ::io::stakenet::orderbook::protos::CancelOpenOrderResponse& cancelorderresponse() const;
  ::io::stakenet::orderbook::protos::CancelOpenOrderResponse* release_cancelorderresponse();
  ::io::stakenet::orderbook::protos::CancelOpenOrderResponse* mutable_cancelorderresponse();
  void set_allocated_cancelorderresponse(::io::stakenet::orderbook::protos::CancelOpenOrderResponse* cancelorderresponse);
  private:
  const ::io::stakenet::orderbook::protos::CancelOpenOrderResponse& _internal_cancelorderresponse() const;
  ::io::stakenet::orderbook::protos::CancelOpenOrderResponse* _internal_mutable_cancelorderresponse();
  public:

  // .io.stakenet.orderbook.protos.CancelMatchedOrderResponse cancelMatchedOrderResponse = 13;
  bool has_cancelmatchedorderresponse() const;
  private:
  bool _internal_has_cancelmatchedorderresponse() const;
  public:
  void clear_cancelmatchedorderresponse();
  const ::io::stakenet::orderbook::protos::CancelMatchedOrderResponse& cancelmatchedorderresponse() const;
  ::io::stakenet::orderbook::protos::CancelMatchedOrderResponse* release_cancelmatchedorderresponse();
  ::io::stakenet::orderbook::protos::CancelMatchedOrderResponse* mutable_cancelmatchedorderresponse();
  void set_allocated_cancelmatchedorderresponse(::io::stakenet::orderbook::protos::CancelMatchedOrderResponse* cancelmatchedorderresponse);
  private:
  const ::io::stakenet::orderbook::protos::CancelMatchedOrderResponse& _internal_cancelmatchedorderresponse() const;
  ::io::stakenet::orderbook::protos::CancelMatchedOrderResponse* _internal_mutable_cancelmatchedorderresponse();
  public:

  // .io.stakenet.orderbook.protos.SendOrderMessageResponse sendOrderMessageResponse = 14;
  bool has_sendordermessageresponse() const;
  private:
  bool _internal_has_sendordermessageresponse() const;
  public:
  void clear_sendordermessageresponse();
  const ::io::stakenet::orderbook::protos::SendOrderMessageResponse& sendordermessageresponse() const;
  ::io::stakenet::orderbook::protos::SendOrderMessageResponse* release_sendordermessageresponse();
  ::io::stakenet::orderbook::protos::SendOrderMessageResponse* mutable_sendordermessageresponse();
  void set_allocated_sendordermessageresponse(::io::stakenet::orderbook::protos::SendOrderMessageResponse* sendordermessageresponse);
  private:
  const ::io::stakenet::orderbook::protos::SendOrderMessageResponse& _internal_sendordermessageresponse() const;
  ::io::stakenet::orderbook::protos::SendOrderMessageResponse* _internal_mutable_sendordermessageresponse();
  public:

  // .io.stakenet.orderbook.protos.CleanTradingPairOrdersResponse cleanTradingPairOrdersResponse = 15;
  bool has_cleantradingpairordersresponse() const;
  private:
  bool _internal_has_cleantradingpairordersresponse() const;
  public:
  void clear_cleantradingpairordersresponse();
  const ::io::stakenet::orderbook::protos::CleanTradingPairOrdersResponse& cleantradingpairordersresponse() const;
  ::io::stakenet::orderbook::protos::CleanTradingPairOrdersResponse* release_cleantradingpairordersresponse();
  ::io::stakenet::orderbook::protos::CleanTradingPairOrdersResponse* mutable_cleantradingpairordersresponse();
  void set_allocated_cleantradingpairordersresponse(::io::stakenet::orderbook::protos::CleanTradingPairOrdersResponse* cleantradingpairordersresponse);
  private:
  const ::io::stakenet::orderbook::protos::CleanTradingPairOrdersResponse& _internal_cleantradingpairordersresponse() const;
  ::io::stakenet::orderbook::protos::CleanTradingPairOrdersResponse* _internal_mutable_cleantradingpairordersresponse();
  public:

  // .io.stakenet.orderbook.protos.GetLndPaymentInvoiceResponse getLndPaymentInvoiceResponse = 16;
  bool has_getlndpaymentinvoiceresponse() const;
  private:
  bool _internal_has_getlndpaymentinvoiceresponse() const;
  public:
  void clear_getlndpaymentinvoiceresponse();
  const ::io::stakenet::orderbook::protos::GetLndPaymentInvoiceResponse& getlndpaymentinvoiceresponse() const;
  ::io::stakenet::orderbook::protos::GetLndPaymentInvoiceResponse* release_getlndpaymentinvoiceresponse();
  ::io::stakenet::orderbook::protos::GetLndPaymentInvoiceResponse* mutable_getlndpaymentinvoiceresponse();
  void set_allocated_getlndpaymentinvoiceresponse(::io::stakenet::orderbook::protos::GetLndPaymentInvoiceResponse* getlndpaymentinvoiceresponse);
  private:
  const ::io::stakenet::orderbook::protos::GetLndPaymentInvoiceResponse& _internal_getlndpaymentinvoiceresponse() const;
  ::io::stakenet::orderbook::protos::GetLndPaymentInvoiceResponse* _internal_mutable_getlndpaymentinvoiceresponse();
  public:

  // .io.stakenet.orderbook.protos.GenerateInvoiceToRentChannelResponse generateInvoiceToRentChannelResponse = 17;
  bool has_generateinvoicetorentchannelresponse() const;
  private:
  bool _internal_has_generateinvoicetorentchannelresponse() const;
  public:
  void clear_generateinvoicetorentchannelresponse();
  const ::io::stakenet::orderbook::protos::GenerateInvoiceToRentChannelResponse& generateinvoicetorentchannelresponse() const;
  ::io::stakenet::orderbook::protos::GenerateInvoiceToRentChannelResponse* release_generateinvoicetorentchannelresponse();
  ::io::stakenet::orderbook::protos::GenerateInvoiceToRentChannelResponse* mutable_generateinvoicetorentchannelresponse();
  void set_allocated_generateinvoicetorentchannelresponse(::io::stakenet::orderbook::protos::GenerateInvoiceToRentChannelResponse* generateinvoicetorentchannelresponse);
  private:
  const ::io::stakenet::orderbook::protos::GenerateInvoiceToRentChannelResponse& _internal_generateinvoicetorentchannelresponse() const;
  ::io::stakenet::orderbook::protos::GenerateInvoiceToRentChannelResponse* _internal_mutable_generateinvoicetorentchannelresponse();
  public:

  // .io.stakenet.orderbook.protos.RentChannelResponse rentChannelResponse = 18;
  bool has_rentchannelresponse() const;
  private:
  bool _internal_has_rentchannelresponse() const;
  public:
  void clear_rentchannelresponse();
  const ::io::stakenet::orderbook::protos::RentChannelResponse& rentchannelresponse() const;
  ::io::stakenet::orderbook::protos::RentChannelResponse* release_rentchannelresponse();
  ::io::stakenet::orderbook::protos::RentChannelResponse* mutable_rentchannelresponse();
  void set_allocated_rentchannelresponse(::io::stakenet::orderbook::protos::RentChannelResponse* rentchannelresponse);
  private:
  const ::io::stakenet::orderbook::protos::RentChannelResponse& _internal_rentchannelresponse() const;
  ::io::stakenet::orderbook::protos::RentChannelResponse* _internal_mutable_rentchannelresponse();
  public:

  // .io.stakenet.orderbook.protos.GetChannelStatusResponse getChannelStatusResponse = 19;
  bool has_getchannelstatusresponse() const;
  private:
  bool _internal_has_getchannelstatusresponse() const;
  public:
  void clear_getchannelstatusresponse();
  const ::io::stakenet::orderbook::protos::GetChannelStatusResponse& getchannelstatusresponse() const;
  ::io::stakenet::orderbook::protos::GetChannelStatusResponse* release_getchannelstatusresponse();
  ::io::stakenet::orderbook::protos::GetChannelStatusResponse* mutable_getchannelstatusresponse();
  void set_allocated_getchannelstatusresponse(::io::stakenet::orderbook::protos::GetChannelStatusResponse* getchannelstatusresponse);
  private:
  const ::io::stakenet::orderbook::protos::GetChannelStatusResponse& _internal_getchannelstatusresponse() const;
  ::io::stakenet::orderbook::protos::GetChannelStatusResponse* _internal_mutable_getchannelstatusresponse();
  public:

  // .io.stakenet.orderbook.protos.GetFeeToRentChannelResponse getFeeToRentChannelResponse = 20;
  bool has_getfeetorentchannelresponse() const;
  private:
  bool _internal_has_getfeetorentchannelresponse() const;
  public:
  void clear_getfeetorentchannelresponse();
  const ::io::stakenet::orderbook::protos::GetFeeToRentChannelResponse& getfeetorentchannelresponse() const;
  ::io::stakenet::orderbook::protos::GetFeeToRentChannelResponse* release_getfeetorentchannelresponse();
  ::io::stakenet::orderbook::protos::GetFeeToRentChannelResponse* mutable_getfeetorentchannelresponse();
  void set_allocated_getfeetorentchannelresponse(::io::stakenet::orderbook::protos::GetFeeToRentChannelResponse* getfeetorentchannelresponse);
  private:
  const ::io::stakenet::orderbook::protos::GetFeeToRentChannelResponse& _internal_getfeetorentchannelresponse() const;
  ::io::stakenet::orderbook::protos::GetFeeToRentChannelResponse* _internal_mutable_getfeetorentchannelresponse();
  public:

  // .io.stakenet.orderbook.protos.RefundFeeResponse refundFeeResponse = 21;
  bool has_refundfeeresponse() const;
  private:
  bool _internal_has_refundfeeresponse() const;
  public:
  void clear_refundfeeresponse();
  const ::io::stakenet::orderbook::protos::RefundFeeResponse& refundfeeresponse() const;
  ::io::stakenet::orderbook::protos::RefundFeeResponse* release_refundfeeresponse();
  ::io::stakenet::orderbook::protos::RefundFeeResponse* mutable_refundfeeresponse();
  void set_allocated_refundfeeresponse(::io::stakenet::orderbook::protos::RefundFeeResponse* refundfeeresponse);
  private:
  const ::io::stakenet::orderbook::protos::RefundFeeResponse& _internal_refundfeeresponse() const;
  ::io::stakenet::orderbook::protos::RefundFeeResponse* _internal_mutable_refundfeeresponse();
  public:

  // .io.stakenet.orderbook.protos.GetRefundableAmountResponse getRefundableAmountResponse = 22;
  bool has_getrefundableamountresponse() const;
  private:
  bool _internal_has_getrefundableamountresponse() const;
  public:
  void clear_getrefundableamountresponse();
  const ::io::stakenet::orderbook::protos::GetRefundableAmountResponse& getrefundableamountresponse() const;
  ::io::stakenet::orderbook::protos::GetRefundableAmountResponse* release_getrefundableamountresponse();
  ::io::stakenet::orderbook::protos::GetRefundableAmountResponse* mutable_getrefundableamountresponse();
  void set_allocated_getrefundableamountresponse(::io::stakenet::orderbook::protos::GetRefundableAmountResponse* getrefundableamountresponse);
  private:
  const ::io::stakenet::orderbook::protos::GetRefundableAmountResponse& _internal_getrefundableamountresponse() const;
  ::io::stakenet::orderbook::protos::GetRefundableAmountResponse* _internal_mutable_getrefundableamountresponse();
  public:

  // .io.stakenet.orderbook.protos.GetFeeToExtendRentedChannelResponse getFeeToExtendRentedChannelResponse = 23;
  bool has_getfeetoextendrentedchannelresponse() const;
  private:
  bool _internal_has_getfeetoextendrentedchannelresponse() const;
  public:
  void clear_getfeetoextendrentedchannelresponse();
  const ::io::stakenet::orderbook::protos::GetFeeToExtendRentedChannelResponse& getfeetoextendrentedchannelresponse() const;
  ::io::stakenet::orderbook::protos::GetFeeToExtendRentedChannelResponse* release_getfeetoextendrentedchannelresponse();
  ::io::stakenet::orderbook::protos::GetFeeToExtendRentedChannelResponse* mutable_getfeetoextendrentedchannelresponse();
  void set_allocated_getfeetoextendrentedchannelresponse(::io::stakenet::orderbook::protos::GetFeeToExtendRentedChannelResponse* getfeetoextendrentedchannelresponse);
  private:
  const ::io::stakenet::orderbook::protos::GetFeeToExtendRentedChannelResponse& _internal_getfeetoextendrentedchannelresponse() const;
  ::io::stakenet::orderbook::protos::GetFeeToExtendRentedChannelResponse* _internal_mutable_getfeetoextendrentedchannelresponse();
  public:

  // .io.stakenet.orderbook.protos.GenerateInvoiceToExtendRentedChannelResponse generateInvoiceToExtendRentedChannelResponse = 24;
  bool has_generateinvoicetoextendrentedchannelresponse() const;
  private:
  bool _internal_has_generateinvoicetoextendrentedchannelresponse() const;
  public:
  void clear_generateinvoicetoextendrentedchannelresponse();
  const ::io::stakenet::orderbook::protos::GenerateInvoiceToExtendRentedChannelResponse& generateinvoicetoextendrentedchannelresponse() const;
  ::io::stakenet::orderbook::protos::GenerateInvoiceToExtendRentedChannelResponse* release_generateinvoicetoextendrentedchannelresponse();
  ::io::stakenet::orderbook::protos::GenerateInvoiceToExtendRentedChannelResponse* mutable_generateinvoicetoextendrentedchannelresponse();
  void set_allocated_generateinvoicetoextendrentedchannelresponse(::io::stakenet::orderbook::protos::GenerateInvoiceToExtendRentedChannelResponse* generateinvoicetoextendrentedchannelresponse);
  private:
  const ::io::stakenet::orderbook::protos::GenerateInvoiceToExtendRentedChannelResponse& _internal_generateinvoicetoextendrentedchannelresponse() const;
  ::io::stakenet::orderbook::protos::GenerateInvoiceToExtendRentedChannelResponse* _internal_mutable_generateinvoicetoextendrentedchannelresponse();
  public:

  // .io.stakenet.orderbook.protos.ExtendRentedChannelTimeResponse extendRentedChannelTimeResponse = 25;
  bool has_extendrentedchanneltimeresponse() const;
  private:
  bool _internal_has_extendrentedchanneltimeresponse() const;
  public:
  void clear_extendrentedchanneltimeresponse();
  const ::io::stakenet::orderbook::protos::ExtendRentedChannelTimeResponse& extendrentedchanneltimeresponse() const;
  ::io::stakenet::orderbook::protos::ExtendRentedChannelTimeResponse* release_extendrentedchanneltimeresponse();
  ::io::stakenet::orderbook::protos::ExtendRentedChannelTimeResponse* mutable_extendrentedchanneltimeresponse();
  void set_allocated_extendrentedchanneltimeresponse(::io::stakenet::orderbook::protos::ExtendRentedChannelTimeResponse* extendrentedchanneltimeresponse);
  private:
  const ::io::stakenet::orderbook::protos::ExtendRentedChannelTimeResponse& _internal_extendrentedchanneltimeresponse() const;
  ::io::stakenet::orderbook::protos::ExtendRentedChannelTimeResponse* _internal_mutable_extendrentedchanneltimeresponse();
  public:

  // .io.stakenet.orderbook.protos.RegisterPublicKeyResponse registerPublicKeyResponse = 26;
  bool has_registerpublickeyresponse() const;
  private:
  bool _internal_has_registerpublickeyresponse() const;
  public:
  void clear_registerpublickeyresponse();
  const ::io::stakenet::orderbook::protos::RegisterPublicKeyResponse& registerpublickeyresponse() const;
  ::io::stakenet::orderbook::protos::RegisterPublicKeyResponse* release_registerpublickeyresponse();
  ::io::stakenet::orderbook::protos::RegisterPublicKeyResponse* mutable_registerpublickeyresponse();
  void set_allocated_registerpublickeyresponse(::io::stakenet::orderbook::protos::RegisterPublicKeyResponse* registerpublickeyresponse);
  private:
  const ::io::stakenet::orderbook::protos::RegisterPublicKeyResponse& _internal_registerpublickeyresponse() const;
  ::io::stakenet::orderbook::protos::RegisterPublicKeyResponse* _internal_mutable_registerpublickeyresponse();
  public:

  // .io.stakenet.orderbook.protos.RegisterPublicIdentifierResponse registerPublicIdentifierResponse = 27;
  bool has_registerpublicidentifierresponse() const;
  private:
  bool _internal_has_registerpublicidentifierresponse() const;
  public:
  void clear_registerpublicidentifierresponse();
  const ::io::stakenet::orderbook::protos::RegisterPublicIdentifierResponse& registerpublicidentifierresponse() const;
  ::io::stakenet::orderbook::protos::RegisterPublicIdentifierResponse* release_registerpublicidentifierresponse();
  ::io::stakenet::orderbook::protos::RegisterPublicIdentifierResponse* mutable_registerpublicidentifierresponse();
  void set_allocated_registerpublicidentifierresponse(::io::stakenet::orderbook::protos::RegisterPublicIdentifierResponse* registerpublicidentifierresponse);
  private:
  const ::io::stakenet::orderbook::protos::RegisterPublicIdentifierResponse& _internal_registerpublicidentifierresponse() const;
  ::io::stakenet::orderbook::protos::RegisterPublicIdentifierResponse* _internal_mutable_registerpublicidentifierresponse();
  public:

  // .io.stakenet.orderbook.protos.GetConnextPaymentInformationResponse getConnextPaymentInformationResponse = 28;
  bool has_getconnextpaymentinformationresponse() const;
  private:
  bool _internal_has_getconnextpaymentinformationresponse() const;
  public:
  void clear_getconnextpaymentinformationresponse();
  const ::io::stakenet::orderbook::protos::GetConnextPaymentInformationResponse& getconnextpaymentinformationresponse() const;
  ::io::stakenet::orderbook::protos::GetConnextPaymentInformationResponse* release_getconnextpaymentinformationresponse();
  ::io::stakenet::orderbook::protos::GetConnextPaymentInformationResponse* mutable_getconnextpaymentinformationresponse();
  void set_allocated_getconnextpaymentinformationresponse(::io::stakenet::orderbook::protos::GetConnextPaymentInformationResponse* getconnextpaymentinformationresponse);
  private:
  const ::io::stakenet::orderbook::protos::GetConnextPaymentInformationResponse& _internal_getconnextpaymentinformationresponse() const;
  ::io::stakenet::orderbook::protos::GetConnextPaymentInformationResponse* _internal_mutable_getconnextpaymentinformationresponse();
  public:

  // .io.stakenet.orderbook.protos.GeneratePaymentHashToRentChannelResponse generatePaymentHashToRentChannelResponse = 29;
  bool has_generatepaymenthashtorentchannelresponse() const;
  private:
  bool _internal_has_generatepaymenthashtorentchannelresponse() const;
  public:
  void clear_generatepaymenthashtorentchannelresponse();
  const ::io::stakenet::orderbook::protos::GeneratePaymentHashToRentChannelResponse& generatepaymenthashtorentchannelresponse() const;
  ::io::stakenet::orderbook::protos::GeneratePaymentHashToRentChannelResponse* release_generatepaymenthashtorentchannelresponse();
  ::io::stakenet::orderbook::protos::GeneratePaymentHashToRentChannelResponse* mutable_generatepaymenthashtorentchannelresponse();
  void set_allocated_generatepaymenthashtorentchannelresponse(::io::stakenet::orderbook::protos::GeneratePaymentHashToRentChannelResponse* generatepaymenthashtorentchannelresponse);
  private:
  const ::io::stakenet::orderbook::protos::GeneratePaymentHashToRentChannelResponse& _internal_generatepaymenthashtorentchannelresponse() const;
  ::io::stakenet::orderbook::protos::GeneratePaymentHashToRentChannelResponse* _internal_mutable_generatepaymenthashtorentchannelresponse();
  public:

  // .io.stakenet.orderbook.protos.GeneratePaymentHashToExtendConnextRentedChannelResponse generatePaymentHashToExtendConnextRentedChannelResponse = 30;
  bool has_generatepaymenthashtoextendconnextrentedchannelresponse() const;
  private:
  bool _internal_has_generatepaymenthashtoextendconnextrentedchannelresponse() const;
  public:
  void clear_generatepaymenthashtoextendconnextrentedchannelresponse();
  const ::io::stakenet::orderbook::protos::GeneratePaymentHashToExtendConnextRentedChannelResponse& generatepaymenthashtoextendconnextrentedchannelresponse() const;
  ::io::stakenet::orderbook::protos::GeneratePaymentHashToExtendConnextRentedChannelResponse* release_generatepaymenthashtoextendconnextrentedchannelresponse();
  ::io::stakenet::orderbook::protos::GeneratePaymentHashToExtendConnextRentedChannelResponse* mutable_generatepaymenthashtoextendconnextrentedchannelresponse();
  void set_allocated_generatepaymenthashtoextendconnextrentedchannelresponse(::io::stakenet::orderbook::protos::GeneratePaymentHashToExtendConnextRentedChannelResponse* generatepaymenthashtoextendconnextrentedchannelresponse);
  private:
  const ::io::stakenet::orderbook::protos::GeneratePaymentHashToExtendConnextRentedChannelResponse& _internal_generatepaymenthashtoextendconnextrentedchannelresponse() const;
  ::io::stakenet::orderbook::protos::GeneratePaymentHashToExtendConnextRentedChannelResponse* _internal_mutable_generatepaymenthashtoextendconnextrentedchannelresponse();
  public:

  // .io.stakenet.orderbook.protos.GetConnextChannelContractDeploymentFeeResponse getConnextChannelContractDeploymentFeeResponse = 31;
  bool has_getconnextchannelcontractdeploymentfeeresponse() const;
  private:
  bool _internal_has_getconnextchannelcontractdeploymentfeeresponse() const;
  public:
  void clear_getconnextchannelcontractdeploymentfeeresponse();
  const ::io::stakenet::orderbook::protos::GetConnextChannelContractDeploymentFeeResponse& getconnextchannelcontractdeploymentfeeresponse() const;
  ::io::stakenet::orderbook::protos::GetConnextChannelContractDeploymentFeeResponse* release_getconnextchannelcontractdeploymentfeeresponse();
  ::io::stakenet::orderbook::protos::GetConnextChannelContractDeploymentFeeResponse* mutable_getconnextchannelcontractdeploymentfeeresponse();
  void set_allocated_getconnextchannelcontractdeploymentfeeresponse(::io::stakenet::orderbook::protos::GetConnextChannelContractDeploymentFeeResponse* getconnextchannelcontractdeploymentfeeresponse);
  private:
  const ::io::stakenet::orderbook::protos::GetConnextChannelContractDeploymentFeeResponse& _internal_getconnextchannelcontractdeploymentfeeresponse() const;
  ::io::stakenet::orderbook::protos::GetConnextChannelContractDeploymentFeeResponse* _internal_mutable_getconnextchannelcontractdeploymentfeeresponse();
  public:

  // .io.stakenet.orderbook.protos.RegisterConnextChannelContractDeploymentFeeResponse registerConnextChannelContractDeploymentFeeResponse = 32;
  bool has_registerconnextchannelcontractdeploymentfeeresponse() const;
  private:
  bool _internal_has_registerconnextchannelcontractdeploymentfeeresponse() const;
  public:
  void clear_registerconnextchannelcontractdeploymentfeeresponse();
  const ::io::stakenet::orderbook::protos::RegisterConnextChannelContractDeploymentFeeResponse& registerconnextchannelcontractdeploymentfeeresponse() const;
  ::io::stakenet::orderbook::protos::RegisterConnextChannelContractDeploymentFeeResponse* release_registerconnextchannelcontractdeploymentfeeresponse();
  ::io::stakenet::orderbook::protos::RegisterConnextChannelContractDeploymentFeeResponse* mutable_registerconnextchannelcontractdeploymentfeeresponse();
  void set_allocated_registerconnextchannelcontractdeploymentfeeresponse(::io::stakenet::orderbook::protos::RegisterConnextChannelContractDeploymentFeeResponse* registerconnextchannelcontractdeploymentfeeresponse);
  private:
  const ::io::stakenet::orderbook::protos::RegisterConnextChannelContractDeploymentFeeResponse& _internal_registerconnextchannelcontractdeploymentfeeresponse() const;
  ::io::stakenet::orderbook::protos::RegisterConnextChannelContractDeploymentFeeResponse* _internal_mutable_registerconnextchannelcontractdeploymentfeeresponse();
  public:

  void clear_value();
  ValueCase value_case() const;
  // @@protoc_insertion_point(class_scope:io.stakenet.orderbook.protos.Event.CommandResponse)
 private:
  class _Internal;
  void set_has_commandfailed();
  void set_has_pingresponse();
  void set_has_gettradingpairsresponse();
  void set_has_subscriberesponse();
  void set_has_unsubscriberesponse();
  void set_has_getopenordersresponse();
  void set_has_gethistorictradesresponse();
  void set_has_getbarspricesresponse();
  void set_has_placeorderresponse();
  void set_has_getopenorderbyidresponse();
  void set_has_cancelorderresponse();
  void set_has_cancelmatchedorderresponse();
  void set_has_sendordermessageresponse();
  void set_has_cleantradingpairordersresponse();
  void set_has_getlndpaymentinvoiceresponse();
  void set_has_generateinvoicetorentchannelresponse();
  void set_has_rentchannelresponse();
  void set_has_getchannelstatusresponse();
  void set_has_getfeetorentchannelresponse();
  void set_has_refundfeeresponse();
  void set_has_getrefundableamountresponse();
  void set_has_getfeetoextendrentedchannelresponse();
  void set_has_generateinvoicetoextendrentedchannelresponse();
  void set_has_extendrentedchanneltimeresponse();
  void set_has_registerpublickeyresponse();
  void set_has_registerpublicidentifierresponse();
  void set_has_getconnextpaymentinformationresponse();
  void set_has_generatepaymenthashtorentchannelresponse();
  void set_has_generatepaymenthashtoextendconnextrentedchannelresponse();
  void set_has_getconnextchannelcontractdeploymentfeeresponse();
  void set_has_registerconnextchannelcontractdeploymentfeeresponse();

  inline bool has_value() const;
  inline void clear_has_value();

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr clientmessageid_;
  union ValueUnion {
    ValueUnion() {}
    ::io::stakenet::orderbook::protos::CommandFailed* commandfailed_;
    ::io::stakenet::orderbook::protos::PingResponse* pingresponse_;
    ::io::stakenet::orderbook::protos::GetTradingPairsResponse* gettradingpairsresponse_;
    ::io::stakenet::orderbook::protos::SubscribeResponse* subscriberesponse_;
    ::io::stakenet::orderbook::protos::UnsubscribeResponse* unsubscriberesponse_;
    ::io::stakenet::orderbook::protos::GetOpenOrdersResponse* getopenordersresponse_;
    ::io::stakenet::orderbook::protos::GetHistoricTradesResponse* gethistorictradesresponse_;
    ::io::stakenet::orderbook::protos::GetBarsPricesResponse* getbarspricesresponse_;
    ::io::stakenet::orderbook::protos::PlaceOrderResponse* placeorderresponse_;
    ::io::stakenet::orderbook::protos::GetOpenOrderByIdResponse* getopenorderbyidresponse_;
    ::io::stakenet::orderbook::protos::CancelOpenOrderResponse* cancelorderresponse_;
    ::io::stakenet::orderbook::protos::CancelMatchedOrderResponse* cancelmatchedorderresponse_;
    ::io::stakenet::orderbook::protos::SendOrderMessageResponse* sendordermessageresponse_;
    ::io::stakenet::orderbook::protos::CleanTradingPairOrdersResponse* cleantradingpairordersresponse_;
    ::io::stakenet::orderbook::protos::GetLndPaymentInvoiceResponse* getlndpaymentinvoiceresponse_;
    ::io::stakenet::orderbook::protos::GenerateInvoiceToRentChannelResponse* generateinvoicetorentchannelresponse_;
    ::io::stakenet::orderbook::protos::RentChannelResponse* rentchannelresponse_;
    ::io::stakenet::orderbook::protos::GetChannelStatusResponse* getchannelstatusresponse_;
    ::io::stakenet::orderbook::protos::GetFeeToRentChannelResponse* getfeetorentchannelresponse_;
    ::io::stakenet::orderbook::protos::RefundFeeResponse* refundfeeresponse_;
    ::io::stakenet::orderbook::protos::GetRefundableAmountResponse* getrefundableamountresponse_;
    ::io::stakenet::orderbook::protos::GetFeeToExtendRentedChannelResponse* getfeetoextendrentedchannelresponse_;
    ::io::stakenet::orderbook::protos::GenerateInvoiceToExtendRentedChannelResponse* generateinvoicetoextendrentedchannelresponse_;
    ::io::stakenet::orderbook::protos::ExtendRentedChannelTimeResponse* extendrentedchanneltimeresponse_;
    ::io::stakenet::orderbook::protos::RegisterPublicKeyResponse* registerpublickeyresponse_;
    ::io::stakenet::orderbook::protos::RegisterPublicIdentifierResponse* registerpublicidentifierresponse_;
    ::io::stakenet::orderbook::protos::GetConnextPaymentInformationResponse* getconnextpaymentinformationresponse_;
    ::io::stakenet::orderbook::protos::GeneratePaymentHashToRentChannelResponse* generatepaymenthashtorentchannelresponse_;
    ::io::stakenet::orderbook::protos::GeneratePaymentHashToExtendConnextRentedChannelResponse* generatepaymenthashtoextendconnextrentedchannelresponse_;
    ::io::stakenet::orderbook::protos::GetConnextChannelContractDeploymentFeeResponse* getconnextchannelcontractdeploymentfeeresponse_;
    ::io::stakenet::orderbook::protos::RegisterConnextChannelContractDeploymentFeeResponse* registerconnextchannelcontractdeploymentfeeresponse_;
  } value_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 _oneof_case_[1];

  friend struct ::TableStruct_stakenet_2forderbook_2fapi_2eproto;
};
// -------------------------------------------------------------------

class Event_ServerEvent :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:io.stakenet.orderbook.protos.Event.ServerEvent) */ {
 public:
  Event_ServerEvent();
  virtual ~Event_ServerEvent();

  Event_ServerEvent(const Event_ServerEvent& from);
  Event_ServerEvent(Event_ServerEvent&& from) noexcept
    : Event_ServerEvent() {
    *this = ::std::move(from);
  }

  inline Event_ServerEvent& operator=(const Event_ServerEvent& from) {
    CopyFrom(from);
    return *this;
  }
  inline Event_ServerEvent& operator=(Event_ServerEvent&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Event_ServerEvent& default_instance();

  enum ValueCase {
    kMyOrderMatched = 1,
    kMyMatchedOrderCanceled = 2,
    kOrderPlaced = 3,
    kOrderCanceled = 4,
    kOrdersMatched = 5,
    kNewOrderMessage = 6,
    kSwapSuccess = 7,
    kSwapFailure = 8,
    kMaintenanceInProgress = 9,
    kMaintenanceCompleted = 10,
    VALUE_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Event_ServerEvent* internal_default_instance() {
    return reinterpret_cast<const Event_ServerEvent*>(
               &_Event_ServerEvent_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(Event_ServerEvent& a, Event_ServerEvent& b) {
    a.Swap(&b);
  }
  inline void Swap(Event_ServerEvent* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Event_ServerEvent* New() const final {
    return CreateMaybeMessage<Event_ServerEvent>(nullptr);
  }

  Event_ServerEvent* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Event_ServerEvent>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Event_ServerEvent& from);
  void MergeFrom(const Event_ServerEvent& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Event_ServerEvent* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "io.stakenet.orderbook.protos.Event.ServerEvent";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_stakenet_2forderbook_2fapi_2eproto);
    return ::descriptor_table_stakenet_2forderbook_2fapi_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMyOrderMatchedFieldNumber = 1,
    kMyMatchedOrderCanceledFieldNumber = 2,
    kOrderPlacedFieldNumber = 3,
    kOrderCanceledFieldNumber = 4,
    kOrdersMatchedFieldNumber = 5,
    kNewOrderMessageFieldNumber = 6,
    kSwapSuccessFieldNumber = 7,
    kSwapFailureFieldNumber = 8,
    kMaintenanceInProgressFieldNumber = 9,
    kMaintenanceCompletedFieldNumber = 10,
  };
  // .io.stakenet.orderbook.protos.MyOrderMatched myOrderMatched = 1;
  bool has_myordermatched() const;
  private:
  bool _internal_has_myordermatched() const;
  public:
  void clear_myordermatched();
  const ::io::stakenet::orderbook::protos::MyOrderMatched& myordermatched() const;
  ::io::stakenet::orderbook::protos::MyOrderMatched* release_myordermatched();
  ::io::stakenet::orderbook::protos::MyOrderMatched* mutable_myordermatched();
  void set_allocated_myordermatched(::io::stakenet::orderbook::protos::MyOrderMatched* myordermatched);
  private:
  const ::io::stakenet::orderbook::protos::MyOrderMatched& _internal_myordermatched() const;
  ::io::stakenet::orderbook::protos::MyOrderMatched* _internal_mutable_myordermatched();
  public:

  // .io.stakenet.orderbook.protos.MyMatchedOrderCanceled myMatchedOrderCanceled = 2;
  bool has_mymatchedordercanceled() const;
  private:
  bool _internal_has_mymatchedordercanceled() const;
  public:
  void clear_mymatchedordercanceled();
  const ::io::stakenet::orderbook::protos::MyMatchedOrderCanceled& mymatchedordercanceled() const;
  ::io::stakenet::orderbook::protos::MyMatchedOrderCanceled* release_mymatchedordercanceled();
  ::io::stakenet::orderbook::protos::MyMatchedOrderCanceled* mutable_mymatchedordercanceled();
  void set_allocated_mymatchedordercanceled(::io::stakenet::orderbook::protos::MyMatchedOrderCanceled* mymatchedordercanceled);
  private:
  const ::io::stakenet::orderbook::protos::MyMatchedOrderCanceled& _internal_mymatchedordercanceled() const;
  ::io::stakenet::orderbook::protos::MyMatchedOrderCanceled* _internal_mutable_mymatchedordercanceled();
  public:

  // .io.stakenet.orderbook.protos.OrderPlaced orderPlaced = 3;
  bool has_orderplaced() const;
  private:
  bool _internal_has_orderplaced() const;
  public:
  void clear_orderplaced();
  const ::io::stakenet::orderbook::protos::OrderPlaced& orderplaced() const;
  ::io::stakenet::orderbook::protos::OrderPlaced* release_orderplaced();
  ::io::stakenet::orderbook::protos::OrderPlaced* mutable_orderplaced();
  void set_allocated_orderplaced(::io::stakenet::orderbook::protos::OrderPlaced* orderplaced);
  private:
  const ::io::stakenet::orderbook::protos::OrderPlaced& _internal_orderplaced() const;
  ::io::stakenet::orderbook::protos::OrderPlaced* _internal_mutable_orderplaced();
  public:

  // .io.stakenet.orderbook.protos.OrderCanceled orderCanceled = 4;
  bool has_ordercanceled() const;
  private:
  bool _internal_has_ordercanceled() const;
  public:
  void clear_ordercanceled();
  const ::io::stakenet::orderbook::protos::OrderCanceled& ordercanceled() const;
  ::io::stakenet::orderbook::protos::OrderCanceled* release_ordercanceled();
  ::io::stakenet::orderbook::protos::OrderCanceled* mutable_ordercanceled();
  void set_allocated_ordercanceled(::io::stakenet::orderbook::protos::OrderCanceled* ordercanceled);
  private:
  const ::io::stakenet::orderbook::protos::OrderCanceled& _internal_ordercanceled() const;
  ::io::stakenet::orderbook::protos::OrderCanceled* _internal_mutable_ordercanceled();
  public:

  // .io.stakenet.orderbook.protos.OrdersMatched ordersMatched = 5;
  bool has_ordersmatched() const;
  private:
  bool _internal_has_ordersmatched() const;
  public:
  void clear_ordersmatched();
  const ::io::stakenet::orderbook::protos::OrdersMatched& ordersmatched() const;
  ::io::stakenet::orderbook::protos::OrdersMatched* release_ordersmatched();
  ::io::stakenet::orderbook::protos::OrdersMatched* mutable_ordersmatched();
  void set_allocated_ordersmatched(::io::stakenet::orderbook::protos::OrdersMatched* ordersmatched);
  private:
  const ::io::stakenet::orderbook::protos::OrdersMatched& _internal_ordersmatched() const;
  ::io::stakenet::orderbook::protos::OrdersMatched* _internal_mutable_ordersmatched();
  public:

  // .io.stakenet.orderbook.protos.NewOrderMessage newOrderMessage = 6;
  bool has_newordermessage() const;
  private:
  bool _internal_has_newordermessage() const;
  public:
  void clear_newordermessage();
  const ::io::stakenet::orderbook::protos::NewOrderMessage& newordermessage() const;
  ::io::stakenet::orderbook::protos::NewOrderMessage* release_newordermessage();
  ::io::stakenet::orderbook::protos::NewOrderMessage* mutable_newordermessage();
  void set_allocated_newordermessage(::io::stakenet::orderbook::protos::NewOrderMessage* newordermessage);
  private:
  const ::io::stakenet::orderbook::protos::NewOrderMessage& _internal_newordermessage() const;
  ::io::stakenet::orderbook::protos::NewOrderMessage* _internal_mutable_newordermessage();
  public:

  // .io.stakenet.orderbook.protos.SwapSuccess swapSuccess = 7;
  bool has_swapsuccess() const;
  private:
  bool _internal_has_swapsuccess() const;
  public:
  void clear_swapsuccess();
  const ::io::stakenet::orderbook::protos::SwapSuccess& swapsuccess() const;
  ::io::stakenet::orderbook::protos::SwapSuccess* release_swapsuccess();
  ::io::stakenet::orderbook::protos::SwapSuccess* mutable_swapsuccess();
  void set_allocated_swapsuccess(::io::stakenet::orderbook::protos::SwapSuccess* swapsuccess);
  private:
  const ::io::stakenet::orderbook::protos::SwapSuccess& _internal_swapsuccess() const;
  ::io::stakenet::orderbook::protos::SwapSuccess* _internal_mutable_swapsuccess();
  public:

  // .io.stakenet.orderbook.protos.SwapFailure swapFailure = 8;
  bool has_swapfailure() const;
  private:
  bool _internal_has_swapfailure() const;
  public:
  void clear_swapfailure();
  const ::io::stakenet::orderbook::protos::SwapFailure& swapfailure() const;
  ::io::stakenet::orderbook::protos::SwapFailure* release_swapfailure();
  ::io::stakenet::orderbook::protos::SwapFailure* mutable_swapfailure();
  void set_allocated_swapfailure(::io::stakenet::orderbook::protos::SwapFailure* swapfailure);
  private:
  const ::io::stakenet::orderbook::protos::SwapFailure& _internal_swapfailure() const;
  ::io::stakenet::orderbook::protos::SwapFailure* _internal_mutable_swapfailure();
  public:

  // .io.stakenet.orderbook.protos.MaintenanceInProgress maintenanceInProgress = 9;
  bool has_maintenanceinprogress() const;
  private:
  bool _internal_has_maintenanceinprogress() const;
  public:
  void clear_maintenanceinprogress();
  const ::io::stakenet::orderbook::protos::MaintenanceInProgress& maintenanceinprogress() const;
  ::io::stakenet::orderbook::protos::MaintenanceInProgress* release_maintenanceinprogress();
  ::io::stakenet::orderbook::protos::MaintenanceInProgress* mutable_maintenanceinprogress();
  void set_allocated_maintenanceinprogress(::io::stakenet::orderbook::protos::MaintenanceInProgress* maintenanceinprogress);
  private:
  const ::io::stakenet::orderbook::protos::MaintenanceInProgress& _internal_maintenanceinprogress() const;
  ::io::stakenet::orderbook::protos::MaintenanceInProgress* _internal_mutable_maintenanceinprogress();
  public:

  // .io.stakenet.orderbook.protos.MaintenanceCompleted maintenanceCompleted = 10;
  bool has_maintenancecompleted() const;
  private:
  bool _internal_has_maintenancecompleted() const;
  public:
  void clear_maintenancecompleted();
  const ::io::stakenet::orderbook::protos::MaintenanceCompleted& maintenancecompleted() const;
  ::io::stakenet::orderbook::protos::MaintenanceCompleted* release_maintenancecompleted();
  ::io::stakenet::orderbook::protos::MaintenanceCompleted* mutable_maintenancecompleted();
  void set_allocated_maintenancecompleted(::io::stakenet::orderbook::protos::MaintenanceCompleted* maintenancecompleted);
  private:
  const ::io::stakenet::orderbook::protos::MaintenanceCompleted& _internal_maintenancecompleted() const;
  ::io::stakenet::orderbook::protos::MaintenanceCompleted* _internal_mutable_maintenancecompleted();
  public:

  void clear_value();
  ValueCase value_case() const;
  // @@protoc_insertion_point(class_scope:io.stakenet.orderbook.protos.Event.ServerEvent)
 private:
  class _Internal;
  void set_has_myordermatched();
  void set_has_mymatchedordercanceled();
  void set_has_orderplaced();
  void set_has_ordercanceled();
  void set_has_ordersmatched();
  void set_has_newordermessage();
  void set_has_swapsuccess();
  void set_has_swapfailure();
  void set_has_maintenanceinprogress();
  void set_has_maintenancecompleted();

  inline bool has_value() const;
  inline void clear_has_value();

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  union ValueUnion {
    ValueUnion() {}
    ::io::stakenet::orderbook::protos::MyOrderMatched* myordermatched_;
    ::io::stakenet::orderbook::protos::MyMatchedOrderCanceled* mymatchedordercanceled_;
    ::io::stakenet::orderbook::protos::OrderPlaced* orderplaced_;
    ::io::stakenet::orderbook::protos::OrderCanceled* ordercanceled_;
    ::io::stakenet::orderbook::protos::OrdersMatched* ordersmatched_;
    ::io::stakenet::orderbook::protos::NewOrderMessage* newordermessage_;
    ::io::stakenet::orderbook::protos::SwapSuccess* swapsuccess_;
    ::io::stakenet::orderbook::protos::SwapFailure* swapfailure_;
    ::io::stakenet::orderbook::protos::MaintenanceInProgress* maintenanceinprogress_;
    ::io::stakenet::orderbook::protos::MaintenanceCompleted* maintenancecompleted_;
  } value_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 _oneof_case_[1];

  friend struct ::TableStruct_stakenet_2forderbook_2fapi_2eproto;
};
// -------------------------------------------------------------------

class Event :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:io.stakenet.orderbook.protos.Event) */ {
 public:
  Event();
  virtual ~Event();

  Event(const Event& from);
  Event(Event&& from) noexcept
    : Event() {
    *this = ::std::move(from);
  }

  inline Event& operator=(const Event& from) {
    CopyFrom(from);
    return *this;
  }
  inline Event& operator=(Event&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Event& default_instance();

  enum ValueCase {
    kResponse = 2,
    kEvent = 3,
    VALUE_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Event* internal_default_instance() {
    return reinterpret_cast<const Event*>(
               &_Event_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(Event& a, Event& b) {
    a.Swap(&b);
  }
  inline void Swap(Event* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Event* New() const final {
    return CreateMaybeMessage<Event>(nullptr);
  }

  Event* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Event>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Event& from);
  void MergeFrom(const Event& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Event* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "io.stakenet.orderbook.protos.Event";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_stakenet_2forderbook_2fapi_2eproto);
    return ::descriptor_table_stakenet_2forderbook_2fapi_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef Event_CommandResponse CommandResponse;
  typedef Event_ServerEvent ServerEvent;

  // accessors -------------------------------------------------------

  enum : int {
    kMessageCounterFieldNumber = 1,
    kResponseFieldNumber = 2,
    kEventFieldNumber = 3,
  };
  // int64 messageCounter = 1;
  void clear_messagecounter();
  ::PROTOBUF_NAMESPACE_ID::int64 messagecounter() const;
  void set_messagecounter(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_messagecounter() const;
  void _internal_set_messagecounter(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // .io.stakenet.orderbook.protos.Event.CommandResponse response = 2;
  bool has_response() const;
  private:
  bool _internal_has_response() const;
  public:
  void clear_response();
  const ::io::stakenet::orderbook::protos::Event_CommandResponse& response() const;
  ::io::stakenet::orderbook::protos::Event_CommandResponse* release_response();
  ::io::stakenet::orderbook::protos::Event_CommandResponse* mutable_response();
  void set_allocated_response(::io::stakenet::orderbook::protos::Event_CommandResponse* response);
  private:
  const ::io::stakenet::orderbook::protos::Event_CommandResponse& _internal_response() const;
  ::io::stakenet::orderbook::protos::Event_CommandResponse* _internal_mutable_response();
  public:

  // .io.stakenet.orderbook.protos.Event.ServerEvent event = 3;
  bool has_event() const;
  private:
  bool _internal_has_event() const;
  public:
  void clear_event();
  const ::io::stakenet::orderbook::protos::Event_ServerEvent& event() const;
  ::io::stakenet::orderbook::protos::Event_ServerEvent* release_event();
  ::io::stakenet::orderbook::protos::Event_ServerEvent* mutable_event();
  void set_allocated_event(::io::stakenet::orderbook::protos::Event_ServerEvent* event);
  private:
  const ::io::stakenet::orderbook::protos::Event_ServerEvent& _internal_event() const;
  ::io::stakenet::orderbook::protos::Event_ServerEvent* _internal_mutable_event();
  public:

  void clear_value();
  ValueCase value_case() const;
  // @@protoc_insertion_point(class_scope:io.stakenet.orderbook.protos.Event)
 private:
  class _Internal;
  void set_has_response();
  void set_has_event();

  inline bool has_value() const;
  inline void clear_has_value();

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::int64 messagecounter_;
  union ValueUnion {
    ValueUnion() {}
    ::io::stakenet::orderbook::protos::Event_CommandResponse* response_;
    ::io::stakenet::orderbook::protos::Event_ServerEvent* event_;
  } value_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 _oneof_case_[1];

  friend struct ::TableStruct_stakenet_2forderbook_2fapi_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Command

// string clientMessageId = 1;
inline void Command::clear_clientmessageid() {
  clientmessageid_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& Command::clientmessageid() const {
  // @@protoc_insertion_point(field_get:io.stakenet.orderbook.protos.Command.clientMessageId)
  return _internal_clientmessageid();
}
inline void Command::set_clientmessageid(const std::string& value) {
  _internal_set_clientmessageid(value);
  // @@protoc_insertion_point(field_set:io.stakenet.orderbook.protos.Command.clientMessageId)
}
inline std::string* Command::mutable_clientmessageid() {
  // @@protoc_insertion_point(field_mutable:io.stakenet.orderbook.protos.Command.clientMessageId)
  return _internal_mutable_clientmessageid();
}
inline const std::string& Command::_internal_clientmessageid() const {
  return clientmessageid_.GetNoArena();
}
inline void Command::_internal_set_clientmessageid(const std::string& value) {
  
  clientmessageid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void Command::set_clientmessageid(std::string&& value) {
  
  clientmessageid_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:io.stakenet.orderbook.protos.Command.clientMessageId)
}
inline void Command::set_clientmessageid(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  clientmessageid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:io.stakenet.orderbook.protos.Command.clientMessageId)
}
inline void Command::set_clientmessageid(const char* value, size_t size) {
  
  clientmessageid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:io.stakenet.orderbook.protos.Command.clientMessageId)
}
inline std::string* Command::_internal_mutable_clientmessageid() {
  
  return clientmessageid_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* Command::release_clientmessageid() {
  // @@protoc_insertion_point(field_release:io.stakenet.orderbook.protos.Command.clientMessageId)
  
  return clientmessageid_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void Command::set_allocated_clientmessageid(std::string* clientmessageid) {
  if (clientmessageid != nullptr) {
    
  } else {
    
  }
  clientmessageid_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), clientmessageid);
  // @@protoc_insertion_point(field_set_allocated:io.stakenet.orderbook.protos.Command.clientMessageId)
}

// .io.stakenet.orderbook.protos.PingCommand ping = 2;
inline bool Command::_internal_has_ping() const {
  return value_case() == kPing;
}
inline bool Command::has_ping() const {
  return _internal_has_ping();
}
inline void Command::set_has_ping() {
  _oneof_case_[0] = kPing;
}
inline ::io::stakenet::orderbook::protos::PingCommand* Command::release_ping() {
  // @@protoc_insertion_point(field_release:io.stakenet.orderbook.protos.Command.ping)
  if (_internal_has_ping()) {
    clear_has_value();
      ::io::stakenet::orderbook::protos::PingCommand* temp = value_.ping_;
    value_.ping_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::io::stakenet::orderbook::protos::PingCommand& Command::_internal_ping() const {
  return _internal_has_ping()
      ? *value_.ping_
      : *reinterpret_cast< ::io::stakenet::orderbook::protos::PingCommand*>(&::io::stakenet::orderbook::protos::_PingCommand_default_instance_);
}
inline const ::io::stakenet::orderbook::protos::PingCommand& Command::ping() const {
  // @@protoc_insertion_point(field_get:io.stakenet.orderbook.protos.Command.ping)
  return _internal_ping();
}
inline ::io::stakenet::orderbook::protos::PingCommand* Command::_internal_mutable_ping() {
  if (!_internal_has_ping()) {
    clear_value();
    set_has_ping();
    value_.ping_ = CreateMaybeMessage< ::io::stakenet::orderbook::protos::PingCommand >(
        GetArenaNoVirtual());
  }
  return value_.ping_;
}
inline ::io::stakenet::orderbook::protos::PingCommand* Command::mutable_ping() {
  // @@protoc_insertion_point(field_mutable:io.stakenet.orderbook.protos.Command.ping)
  return _internal_mutable_ping();
}

// .io.stakenet.orderbook.protos.GetTradingPairsCommand getTradingPairs = 3;
inline bool Command::_internal_has_gettradingpairs() const {
  return value_case() == kGetTradingPairs;
}
inline bool Command::has_gettradingpairs() const {
  return _internal_has_gettradingpairs();
}
inline void Command::set_has_gettradingpairs() {
  _oneof_case_[0] = kGetTradingPairs;
}
inline ::io::stakenet::orderbook::protos::GetTradingPairsCommand* Command::release_gettradingpairs() {
  // @@protoc_insertion_point(field_release:io.stakenet.orderbook.protos.Command.getTradingPairs)
  if (_internal_has_gettradingpairs()) {
    clear_has_value();
      ::io::stakenet::orderbook::protos::GetTradingPairsCommand* temp = value_.gettradingpairs_;
    value_.gettradingpairs_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::io::stakenet::orderbook::protos::GetTradingPairsCommand& Command::_internal_gettradingpairs() const {
  return _internal_has_gettradingpairs()
      ? *value_.gettradingpairs_
      : *reinterpret_cast< ::io::stakenet::orderbook::protos::GetTradingPairsCommand*>(&::io::stakenet::orderbook::protos::_GetTradingPairsCommand_default_instance_);
}
inline const ::io::stakenet::orderbook::protos::GetTradingPairsCommand& Command::gettradingpairs() const {
  // @@protoc_insertion_point(field_get:io.stakenet.orderbook.protos.Command.getTradingPairs)
  return _internal_gettradingpairs();
}
inline ::io::stakenet::orderbook::protos::GetTradingPairsCommand* Command::_internal_mutable_gettradingpairs() {
  if (!_internal_has_gettradingpairs()) {
    clear_value();
    set_has_gettradingpairs();
    value_.gettradingpairs_ = CreateMaybeMessage< ::io::stakenet::orderbook::protos::GetTradingPairsCommand >(
        GetArenaNoVirtual());
  }
  return value_.gettradingpairs_;
}
inline ::io::stakenet::orderbook::protos::GetTradingPairsCommand* Command::mutable_gettradingpairs() {
  // @@protoc_insertion_point(field_mutable:io.stakenet.orderbook.protos.Command.getTradingPairs)
  return _internal_mutable_gettradingpairs();
}

// .io.stakenet.orderbook.protos.SubscribeCommand subscribe = 4;
inline bool Command::_internal_has_subscribe() const {
  return value_case() == kSubscribe;
}
inline bool Command::has_subscribe() const {
  return _internal_has_subscribe();
}
inline void Command::set_has_subscribe() {
  _oneof_case_[0] = kSubscribe;
}
inline ::io::stakenet::orderbook::protos::SubscribeCommand* Command::release_subscribe() {
  // @@protoc_insertion_point(field_release:io.stakenet.orderbook.protos.Command.subscribe)
  if (_internal_has_subscribe()) {
    clear_has_value();
      ::io::stakenet::orderbook::protos::SubscribeCommand* temp = value_.subscribe_;
    value_.subscribe_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::io::stakenet::orderbook::protos::SubscribeCommand& Command::_internal_subscribe() const {
  return _internal_has_subscribe()
      ? *value_.subscribe_
      : *reinterpret_cast< ::io::stakenet::orderbook::protos::SubscribeCommand*>(&::io::stakenet::orderbook::protos::_SubscribeCommand_default_instance_);
}
inline const ::io::stakenet::orderbook::protos::SubscribeCommand& Command::subscribe() const {
  // @@protoc_insertion_point(field_get:io.stakenet.orderbook.protos.Command.subscribe)
  return _internal_subscribe();
}
inline ::io::stakenet::orderbook::protos::SubscribeCommand* Command::_internal_mutable_subscribe() {
  if (!_internal_has_subscribe()) {
    clear_value();
    set_has_subscribe();
    value_.subscribe_ = CreateMaybeMessage< ::io::stakenet::orderbook::protos::SubscribeCommand >(
        GetArenaNoVirtual());
  }
  return value_.subscribe_;
}
inline ::io::stakenet::orderbook::protos::SubscribeCommand* Command::mutable_subscribe() {
  // @@protoc_insertion_point(field_mutable:io.stakenet.orderbook.protos.Command.subscribe)
  return _internal_mutable_subscribe();
}

// .io.stakenet.orderbook.protos.UnsubscribeCommand unsubscribe = 5;
inline bool Command::_internal_has_unsubscribe() const {
  return value_case() == kUnsubscribe;
}
inline bool Command::has_unsubscribe() const {
  return _internal_has_unsubscribe();
}
inline void Command::set_has_unsubscribe() {
  _oneof_case_[0] = kUnsubscribe;
}
inline ::io::stakenet::orderbook::protos::UnsubscribeCommand* Command::release_unsubscribe() {
  // @@protoc_insertion_point(field_release:io.stakenet.orderbook.protos.Command.unsubscribe)
  if (_internal_has_unsubscribe()) {
    clear_has_value();
      ::io::stakenet::orderbook::protos::UnsubscribeCommand* temp = value_.unsubscribe_;
    value_.unsubscribe_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::io::stakenet::orderbook::protos::UnsubscribeCommand& Command::_internal_unsubscribe() const {
  return _internal_has_unsubscribe()
      ? *value_.unsubscribe_
      : *reinterpret_cast< ::io::stakenet::orderbook::protos::UnsubscribeCommand*>(&::io::stakenet::orderbook::protos::_UnsubscribeCommand_default_instance_);
}
inline const ::io::stakenet::orderbook::protos::UnsubscribeCommand& Command::unsubscribe() const {
  // @@protoc_insertion_point(field_get:io.stakenet.orderbook.protos.Command.unsubscribe)
  return _internal_unsubscribe();
}
inline ::io::stakenet::orderbook::protos::UnsubscribeCommand* Command::_internal_mutable_unsubscribe() {
  if (!_internal_has_unsubscribe()) {
    clear_value();
    set_has_unsubscribe();
    value_.unsubscribe_ = CreateMaybeMessage< ::io::stakenet::orderbook::protos::UnsubscribeCommand >(
        GetArenaNoVirtual());
  }
  return value_.unsubscribe_;
}
inline ::io::stakenet::orderbook::protos::UnsubscribeCommand* Command::mutable_unsubscribe() {
  // @@protoc_insertion_point(field_mutable:io.stakenet.orderbook.protos.Command.unsubscribe)
  return _internal_mutable_unsubscribe();
}

// .io.stakenet.orderbook.protos.GetOpenOrdersCommand getOpenOrders = 6;
inline bool Command::_internal_has_getopenorders() const {
  return value_case() == kGetOpenOrders;
}
inline bool Command::has_getopenorders() const {
  return _internal_has_getopenorders();
}
inline void Command::set_has_getopenorders() {
  _oneof_case_[0] = kGetOpenOrders;
}
inline ::io::stakenet::orderbook::protos::GetOpenOrdersCommand* Command::release_getopenorders() {
  // @@protoc_insertion_point(field_release:io.stakenet.orderbook.protos.Command.getOpenOrders)
  if (_internal_has_getopenorders()) {
    clear_has_value();
      ::io::stakenet::orderbook::protos::GetOpenOrdersCommand* temp = value_.getopenorders_;
    value_.getopenorders_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::io::stakenet::orderbook::protos::GetOpenOrdersCommand& Command::_internal_getopenorders() const {
  return _internal_has_getopenorders()
      ? *value_.getopenorders_
      : *reinterpret_cast< ::io::stakenet::orderbook::protos::GetOpenOrdersCommand*>(&::io::stakenet::orderbook::protos::_GetOpenOrdersCommand_default_instance_);
}
inline const ::io::stakenet::orderbook::protos::GetOpenOrdersCommand& Command::getopenorders() const {
  // @@protoc_insertion_point(field_get:io.stakenet.orderbook.protos.Command.getOpenOrders)
  return _internal_getopenorders();
}
inline ::io::stakenet::orderbook::protos::GetOpenOrdersCommand* Command::_internal_mutable_getopenorders() {
  if (!_internal_has_getopenorders()) {
    clear_value();
    set_has_getopenorders();
    value_.getopenorders_ = CreateMaybeMessage< ::io::stakenet::orderbook::protos::GetOpenOrdersCommand >(
        GetArenaNoVirtual());
  }
  return value_.getopenorders_;
}
inline ::io::stakenet::orderbook::protos::GetOpenOrdersCommand* Command::mutable_getopenorders() {
  // @@protoc_insertion_point(field_mutable:io.stakenet.orderbook.protos.Command.getOpenOrders)
  return _internal_mutable_getopenorders();
}

// .io.stakenet.orderbook.protos.GetHistoricTradesCommand getHistoricTrades = 7;
inline bool Command::_internal_has_gethistorictrades() const {
  return value_case() == kGetHistoricTrades;
}
inline bool Command::has_gethistorictrades() const {
  return _internal_has_gethistorictrades();
}
inline void Command::set_has_gethistorictrades() {
  _oneof_case_[0] = kGetHistoricTrades;
}
inline ::io::stakenet::orderbook::protos::GetHistoricTradesCommand* Command::release_gethistorictrades() {
  // @@protoc_insertion_point(field_release:io.stakenet.orderbook.protos.Command.getHistoricTrades)
  if (_internal_has_gethistorictrades()) {
    clear_has_value();
      ::io::stakenet::orderbook::protos::GetHistoricTradesCommand* temp = value_.gethistorictrades_;
    value_.gethistorictrades_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::io::stakenet::orderbook::protos::GetHistoricTradesCommand& Command::_internal_gethistorictrades() const {
  return _internal_has_gethistorictrades()
      ? *value_.gethistorictrades_
      : *reinterpret_cast< ::io::stakenet::orderbook::protos::GetHistoricTradesCommand*>(&::io::stakenet::orderbook::protos::_GetHistoricTradesCommand_default_instance_);
}
inline const ::io::stakenet::orderbook::protos::GetHistoricTradesCommand& Command::gethistorictrades() const {
  // @@protoc_insertion_point(field_get:io.stakenet.orderbook.protos.Command.getHistoricTrades)
  return _internal_gethistorictrades();
}
inline ::io::stakenet::orderbook::protos::GetHistoricTradesCommand* Command::_internal_mutable_gethistorictrades() {
  if (!_internal_has_gethistorictrades()) {
    clear_value();
    set_has_gethistorictrades();
    value_.gethistorictrades_ = CreateMaybeMessage< ::io::stakenet::orderbook::protos::GetHistoricTradesCommand >(
        GetArenaNoVirtual());
  }
  return value_.gethistorictrades_;
}
inline ::io::stakenet::orderbook::protos::GetHistoricTradesCommand* Command::mutable_gethistorictrades() {
  // @@protoc_insertion_point(field_mutable:io.stakenet.orderbook.protos.Command.getHistoricTrades)
  return _internal_mutable_gethistorictrades();
}

// .io.stakenet.orderbook.protos.GetBarsPricesCommand getBarsPrices = 8;
inline bool Command::_internal_has_getbarsprices() const {
  return value_case() == kGetBarsPrices;
}
inline bool Command::has_getbarsprices() const {
  return _internal_has_getbarsprices();
}
inline void Command::set_has_getbarsprices() {
  _oneof_case_[0] = kGetBarsPrices;
}
inline ::io::stakenet::orderbook::protos::GetBarsPricesCommand* Command::release_getbarsprices() {
  // @@protoc_insertion_point(field_release:io.stakenet.orderbook.protos.Command.getBarsPrices)
  if (_internal_has_getbarsprices()) {
    clear_has_value();
      ::io::stakenet::orderbook::protos::GetBarsPricesCommand* temp = value_.getbarsprices_;
    value_.getbarsprices_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::io::stakenet::orderbook::protos::GetBarsPricesCommand& Command::_internal_getbarsprices() const {
  return _internal_has_getbarsprices()
      ? *value_.getbarsprices_
      : *reinterpret_cast< ::io::stakenet::orderbook::protos::GetBarsPricesCommand*>(&::io::stakenet::orderbook::protos::_GetBarsPricesCommand_default_instance_);
}
inline const ::io::stakenet::orderbook::protos::GetBarsPricesCommand& Command::getbarsprices() const {
  // @@protoc_insertion_point(field_get:io.stakenet.orderbook.protos.Command.getBarsPrices)
  return _internal_getbarsprices();
}
inline ::io::stakenet::orderbook::protos::GetBarsPricesCommand* Command::_internal_mutable_getbarsprices() {
  if (!_internal_has_getbarsprices()) {
    clear_value();
    set_has_getbarsprices();
    value_.getbarsprices_ = CreateMaybeMessage< ::io::stakenet::orderbook::protos::GetBarsPricesCommand >(
        GetArenaNoVirtual());
  }
  return value_.getbarsprices_;
}
inline ::io::stakenet::orderbook::protos::GetBarsPricesCommand* Command::mutable_getbarsprices() {
  // @@protoc_insertion_point(field_mutable:io.stakenet.orderbook.protos.Command.getBarsPrices)
  return _internal_mutable_getbarsprices();
}

// .io.stakenet.orderbook.protos.PlaceOrderCommand placeOrder = 9;
inline bool Command::_internal_has_placeorder() const {
  return value_case() == kPlaceOrder;
}
inline bool Command::has_placeorder() const {
  return _internal_has_placeorder();
}
inline void Command::set_has_placeorder() {
  _oneof_case_[0] = kPlaceOrder;
}
inline ::io::stakenet::orderbook::protos::PlaceOrderCommand* Command::release_placeorder() {
  // @@protoc_insertion_point(field_release:io.stakenet.orderbook.protos.Command.placeOrder)
  if (_internal_has_placeorder()) {
    clear_has_value();
      ::io::stakenet::orderbook::protos::PlaceOrderCommand* temp = value_.placeorder_;
    value_.placeorder_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::io::stakenet::orderbook::protos::PlaceOrderCommand& Command::_internal_placeorder() const {
  return _internal_has_placeorder()
      ? *value_.placeorder_
      : *reinterpret_cast< ::io::stakenet::orderbook::protos::PlaceOrderCommand*>(&::io::stakenet::orderbook::protos::_PlaceOrderCommand_default_instance_);
}
inline const ::io::stakenet::orderbook::protos::PlaceOrderCommand& Command::placeorder() const {
  // @@protoc_insertion_point(field_get:io.stakenet.orderbook.protos.Command.placeOrder)
  return _internal_placeorder();
}
inline ::io::stakenet::orderbook::protos::PlaceOrderCommand* Command::_internal_mutable_placeorder() {
  if (!_internal_has_placeorder()) {
    clear_value();
    set_has_placeorder();
    value_.placeorder_ = CreateMaybeMessage< ::io::stakenet::orderbook::protos::PlaceOrderCommand >(
        GetArenaNoVirtual());
  }
  return value_.placeorder_;
}
inline ::io::stakenet::orderbook::protos::PlaceOrderCommand* Command::mutable_placeorder() {
  // @@protoc_insertion_point(field_mutable:io.stakenet.orderbook.protos.Command.placeOrder)
  return _internal_mutable_placeorder();
}

// .io.stakenet.orderbook.protos.GetOpenOrderByIdCommand getTradingOrderById = 10;
inline bool Command::_internal_has_gettradingorderbyid() const {
  return value_case() == kGetTradingOrderById;
}
inline bool Command::has_gettradingorderbyid() const {
  return _internal_has_gettradingorderbyid();
}
inline void Command::set_has_gettradingorderbyid() {
  _oneof_case_[0] = kGetTradingOrderById;
}
inline ::io::stakenet::orderbook::protos::GetOpenOrderByIdCommand* Command::release_gettradingorderbyid() {
  // @@protoc_insertion_point(field_release:io.stakenet.orderbook.protos.Command.getTradingOrderById)
  if (_internal_has_gettradingorderbyid()) {
    clear_has_value();
      ::io::stakenet::orderbook::protos::GetOpenOrderByIdCommand* temp = value_.gettradingorderbyid_;
    value_.gettradingorderbyid_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::io::stakenet::orderbook::protos::GetOpenOrderByIdCommand& Command::_internal_gettradingorderbyid() const {
  return _internal_has_gettradingorderbyid()
      ? *value_.gettradingorderbyid_
      : *reinterpret_cast< ::io::stakenet::orderbook::protos::GetOpenOrderByIdCommand*>(&::io::stakenet::orderbook::protos::_GetOpenOrderByIdCommand_default_instance_);
}
inline const ::io::stakenet::orderbook::protos::GetOpenOrderByIdCommand& Command::gettradingorderbyid() const {
  // @@protoc_insertion_point(field_get:io.stakenet.orderbook.protos.Command.getTradingOrderById)
  return _internal_gettradingorderbyid();
}
inline ::io::stakenet::orderbook::protos::GetOpenOrderByIdCommand* Command::_internal_mutable_gettradingorderbyid() {
  if (!_internal_has_gettradingorderbyid()) {
    clear_value();
    set_has_gettradingorderbyid();
    value_.gettradingorderbyid_ = CreateMaybeMessage< ::io::stakenet::orderbook::protos::GetOpenOrderByIdCommand >(
        GetArenaNoVirtual());
  }
  return value_.gettradingorderbyid_;
}
inline ::io::stakenet::orderbook::protos::GetOpenOrderByIdCommand* Command::mutable_gettradingorderbyid() {
  // @@protoc_insertion_point(field_mutable:io.stakenet.orderbook.protos.Command.getTradingOrderById)
  return _internal_mutable_gettradingorderbyid();
}

// .io.stakenet.orderbook.protos.CancelOpenOrderCommand cancelOrder = 11;
inline bool Command::_internal_has_cancelorder() const {
  return value_case() == kCancelOrder;
}
inline bool Command::has_cancelorder() const {
  return _internal_has_cancelorder();
}
inline void Command::set_has_cancelorder() {
  _oneof_case_[0] = kCancelOrder;
}
inline ::io::stakenet::orderbook::protos::CancelOpenOrderCommand* Command::release_cancelorder() {
  // @@protoc_insertion_point(field_release:io.stakenet.orderbook.protos.Command.cancelOrder)
  if (_internal_has_cancelorder()) {
    clear_has_value();
      ::io::stakenet::orderbook::protos::CancelOpenOrderCommand* temp = value_.cancelorder_;
    value_.cancelorder_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::io::stakenet::orderbook::protos::CancelOpenOrderCommand& Command::_internal_cancelorder() const {
  return _internal_has_cancelorder()
      ? *value_.cancelorder_
      : *reinterpret_cast< ::io::stakenet::orderbook::protos::CancelOpenOrderCommand*>(&::io::stakenet::orderbook::protos::_CancelOpenOrderCommand_default_instance_);
}
inline const ::io::stakenet::orderbook::protos::CancelOpenOrderCommand& Command::cancelorder() const {
  // @@protoc_insertion_point(field_get:io.stakenet.orderbook.protos.Command.cancelOrder)
  return _internal_cancelorder();
}
inline ::io::stakenet::orderbook::protos::CancelOpenOrderCommand* Command::_internal_mutable_cancelorder() {
  if (!_internal_has_cancelorder()) {
    clear_value();
    set_has_cancelorder();
    value_.cancelorder_ = CreateMaybeMessage< ::io::stakenet::orderbook::protos::CancelOpenOrderCommand >(
        GetArenaNoVirtual());
  }
  return value_.cancelorder_;
}
inline ::io::stakenet::orderbook::protos::CancelOpenOrderCommand* Command::mutable_cancelorder() {
  // @@protoc_insertion_point(field_mutable:io.stakenet.orderbook.protos.Command.cancelOrder)
  return _internal_mutable_cancelorder();
}

// .io.stakenet.orderbook.protos.SendOrderMessageCommand sendOrderMessage = 12;
inline bool Command::_internal_has_sendordermessage() const {
  return value_case() == kSendOrderMessage;
}
inline bool Command::has_sendordermessage() const {
  return _internal_has_sendordermessage();
}
inline void Command::set_has_sendordermessage() {
  _oneof_case_[0] = kSendOrderMessage;
}
inline ::io::stakenet::orderbook::protos::SendOrderMessageCommand* Command::release_sendordermessage() {
  // @@protoc_insertion_point(field_release:io.stakenet.orderbook.protos.Command.sendOrderMessage)
  if (_internal_has_sendordermessage()) {
    clear_has_value();
      ::io::stakenet::orderbook::protos::SendOrderMessageCommand* temp = value_.sendordermessage_;
    value_.sendordermessage_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::io::stakenet::orderbook::protos::SendOrderMessageCommand& Command::_internal_sendordermessage() const {
  return _internal_has_sendordermessage()
      ? *value_.sendordermessage_
      : *reinterpret_cast< ::io::stakenet::orderbook::protos::SendOrderMessageCommand*>(&::io::stakenet::orderbook::protos::_SendOrderMessageCommand_default_instance_);
}
inline const ::io::stakenet::orderbook::protos::SendOrderMessageCommand& Command::sendordermessage() const {
  // @@protoc_insertion_point(field_get:io.stakenet.orderbook.protos.Command.sendOrderMessage)
  return _internal_sendordermessage();
}
inline ::io::stakenet::orderbook::protos::SendOrderMessageCommand* Command::_internal_mutable_sendordermessage() {
  if (!_internal_has_sendordermessage()) {
    clear_value();
    set_has_sendordermessage();
    value_.sendordermessage_ = CreateMaybeMessage< ::io::stakenet::orderbook::protos::SendOrderMessageCommand >(
        GetArenaNoVirtual());
  }
  return value_.sendordermessage_;
}
inline ::io::stakenet::orderbook::protos::SendOrderMessageCommand* Command::mutable_sendordermessage() {
  // @@protoc_insertion_point(field_mutable:io.stakenet.orderbook.protos.Command.sendOrderMessage)
  return _internal_mutable_sendordermessage();
}

// .io.stakenet.orderbook.protos.CancelMatchedOrderCommand cancelMatchedOrder = 13;
inline bool Command::_internal_has_cancelmatchedorder() const {
  return value_case() == kCancelMatchedOrder;
}
inline bool Command::has_cancelmatchedorder() const {
  return _internal_has_cancelmatchedorder();
}
inline void Command::set_has_cancelmatchedorder() {
  _oneof_case_[0] = kCancelMatchedOrder;
}
inline ::io::stakenet::orderbook::protos::CancelMatchedOrderCommand* Command::release_cancelmatchedorder() {
  // @@protoc_insertion_point(field_release:io.stakenet.orderbook.protos.Command.cancelMatchedOrder)
  if (_internal_has_cancelmatchedorder()) {
    clear_has_value();
      ::io::stakenet::orderbook::protos::CancelMatchedOrderCommand* temp = value_.cancelmatchedorder_;
    value_.cancelmatchedorder_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::io::stakenet::orderbook::protos::CancelMatchedOrderCommand& Command::_internal_cancelmatchedorder() const {
  return _internal_has_cancelmatchedorder()
      ? *value_.cancelmatchedorder_
      : *reinterpret_cast< ::io::stakenet::orderbook::protos::CancelMatchedOrderCommand*>(&::io::stakenet::orderbook::protos::_CancelMatchedOrderCommand_default_instance_);
}
inline const ::io::stakenet::orderbook::protos::CancelMatchedOrderCommand& Command::cancelmatchedorder() const {
  // @@protoc_insertion_point(field_get:io.stakenet.orderbook.protos.Command.cancelMatchedOrder)
  return _internal_cancelmatchedorder();
}
inline ::io::stakenet::orderbook::protos::CancelMatchedOrderCommand* Command::_internal_mutable_cancelmatchedorder() {
  if (!_internal_has_cancelmatchedorder()) {
    clear_value();
    set_has_cancelmatchedorder();
    value_.cancelmatchedorder_ = CreateMaybeMessage< ::io::stakenet::orderbook::protos::CancelMatchedOrderCommand >(
        GetArenaNoVirtual());
  }
  return value_.cancelmatchedorder_;
}
inline ::io::stakenet::orderbook::protos::CancelMatchedOrderCommand* Command::mutable_cancelmatchedorder() {
  // @@protoc_insertion_point(field_mutable:io.stakenet.orderbook.protos.Command.cancelMatchedOrder)
  return _internal_mutable_cancelmatchedorder();
}

// .io.stakenet.orderbook.protos.CleanTradingPairOrdersCommand cleanTradingPairOrders = 14;
inline bool Command::_internal_has_cleantradingpairorders() const {
  return value_case() == kCleanTradingPairOrders;
}
inline bool Command::has_cleantradingpairorders() const {
  return _internal_has_cleantradingpairorders();
}
inline void Command::set_has_cleantradingpairorders() {
  _oneof_case_[0] = kCleanTradingPairOrders;
}
inline ::io::stakenet::orderbook::protos::CleanTradingPairOrdersCommand* Command::release_cleantradingpairorders() {
  // @@protoc_insertion_point(field_release:io.stakenet.orderbook.protos.Command.cleanTradingPairOrders)
  if (_internal_has_cleantradingpairorders()) {
    clear_has_value();
      ::io::stakenet::orderbook::protos::CleanTradingPairOrdersCommand* temp = value_.cleantradingpairorders_;
    value_.cleantradingpairorders_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::io::stakenet::orderbook::protos::CleanTradingPairOrdersCommand& Command::_internal_cleantradingpairorders() const {
  return _internal_has_cleantradingpairorders()
      ? *value_.cleantradingpairorders_
      : *reinterpret_cast< ::io::stakenet::orderbook::protos::CleanTradingPairOrdersCommand*>(&::io::stakenet::orderbook::protos::_CleanTradingPairOrdersCommand_default_instance_);
}
inline const ::io::stakenet::orderbook::protos::CleanTradingPairOrdersCommand& Command::cleantradingpairorders() const {
  // @@protoc_insertion_point(field_get:io.stakenet.orderbook.protos.Command.cleanTradingPairOrders)
  return _internal_cleantradingpairorders();
}
inline ::io::stakenet::orderbook::protos::CleanTradingPairOrdersCommand* Command::_internal_mutable_cleantradingpairorders() {
  if (!_internal_has_cleantradingpairorders()) {
    clear_value();
    set_has_cleantradingpairorders();
    value_.cleantradingpairorders_ = CreateMaybeMessage< ::io::stakenet::orderbook::protos::CleanTradingPairOrdersCommand >(
        GetArenaNoVirtual());
  }
  return value_.cleantradingpairorders_;
}
inline ::io::stakenet::orderbook::protos::CleanTradingPairOrdersCommand* Command::mutable_cleantradingpairorders() {
  // @@protoc_insertion_point(field_mutable:io.stakenet.orderbook.protos.Command.cleanTradingPairOrders)
  return _internal_mutable_cleantradingpairorders();
}

// .io.stakenet.orderbook.protos.GetLndPaymentInvoiceCommand getLndPaymentInvoiceCommand = 15;
inline bool Command::_internal_has_getlndpaymentinvoicecommand() const {
  return value_case() == kGetLndPaymentInvoiceCommand;
}
inline bool Command::has_getlndpaymentinvoicecommand() const {
  return _internal_has_getlndpaymentinvoicecommand();
}
inline void Command::set_has_getlndpaymentinvoicecommand() {
  _oneof_case_[0] = kGetLndPaymentInvoiceCommand;
}
inline ::io::stakenet::orderbook::protos::GetLndPaymentInvoiceCommand* Command::release_getlndpaymentinvoicecommand() {
  // @@protoc_insertion_point(field_release:io.stakenet.orderbook.protos.Command.getLndPaymentInvoiceCommand)
  if (_internal_has_getlndpaymentinvoicecommand()) {
    clear_has_value();
      ::io::stakenet::orderbook::protos::GetLndPaymentInvoiceCommand* temp = value_.getlndpaymentinvoicecommand_;
    value_.getlndpaymentinvoicecommand_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::io::stakenet::orderbook::protos::GetLndPaymentInvoiceCommand& Command::_internal_getlndpaymentinvoicecommand() const {
  return _internal_has_getlndpaymentinvoicecommand()
      ? *value_.getlndpaymentinvoicecommand_
      : *reinterpret_cast< ::io::stakenet::orderbook::protos::GetLndPaymentInvoiceCommand*>(&::io::stakenet::orderbook::protos::_GetLndPaymentInvoiceCommand_default_instance_);
}
inline const ::io::stakenet::orderbook::protos::GetLndPaymentInvoiceCommand& Command::getlndpaymentinvoicecommand() const {
  // @@protoc_insertion_point(field_get:io.stakenet.orderbook.protos.Command.getLndPaymentInvoiceCommand)
  return _internal_getlndpaymentinvoicecommand();
}
inline ::io::stakenet::orderbook::protos::GetLndPaymentInvoiceCommand* Command::_internal_mutable_getlndpaymentinvoicecommand() {
  if (!_internal_has_getlndpaymentinvoicecommand()) {
    clear_value();
    set_has_getlndpaymentinvoicecommand();
    value_.getlndpaymentinvoicecommand_ = CreateMaybeMessage< ::io::stakenet::orderbook::protos::GetLndPaymentInvoiceCommand >(
        GetArenaNoVirtual());
  }
  return value_.getlndpaymentinvoicecommand_;
}
inline ::io::stakenet::orderbook::protos::GetLndPaymentInvoiceCommand* Command::mutable_getlndpaymentinvoicecommand() {
  // @@protoc_insertion_point(field_mutable:io.stakenet.orderbook.protos.Command.getLndPaymentInvoiceCommand)
  return _internal_mutable_getlndpaymentinvoicecommand();
}

// .io.stakenet.orderbook.protos.GenerateInvoiceToRentChannelCommand generateInvoiceToRentChannelCommand = 16;
inline bool Command::_internal_has_generateinvoicetorentchannelcommand() const {
  return value_case() == kGenerateInvoiceToRentChannelCommand;
}
inline bool Command::has_generateinvoicetorentchannelcommand() const {
  return _internal_has_generateinvoicetorentchannelcommand();
}
inline void Command::set_has_generateinvoicetorentchannelcommand() {
  _oneof_case_[0] = kGenerateInvoiceToRentChannelCommand;
}
inline ::io::stakenet::orderbook::protos::GenerateInvoiceToRentChannelCommand* Command::release_generateinvoicetorentchannelcommand() {
  // @@protoc_insertion_point(field_release:io.stakenet.orderbook.protos.Command.generateInvoiceToRentChannelCommand)
  if (_internal_has_generateinvoicetorentchannelcommand()) {
    clear_has_value();
      ::io::stakenet::orderbook::protos::GenerateInvoiceToRentChannelCommand* temp = value_.generateinvoicetorentchannelcommand_;
    value_.generateinvoicetorentchannelcommand_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::io::stakenet::orderbook::protos::GenerateInvoiceToRentChannelCommand& Command::_internal_generateinvoicetorentchannelcommand() const {
  return _internal_has_generateinvoicetorentchannelcommand()
      ? *value_.generateinvoicetorentchannelcommand_
      : *reinterpret_cast< ::io::stakenet::orderbook::protos::GenerateInvoiceToRentChannelCommand*>(&::io::stakenet::orderbook::protos::_GenerateInvoiceToRentChannelCommand_default_instance_);
}
inline const ::io::stakenet::orderbook::protos::GenerateInvoiceToRentChannelCommand& Command::generateinvoicetorentchannelcommand() const {
  // @@protoc_insertion_point(field_get:io.stakenet.orderbook.protos.Command.generateInvoiceToRentChannelCommand)
  return _internal_generateinvoicetorentchannelcommand();
}
inline ::io::stakenet::orderbook::protos::GenerateInvoiceToRentChannelCommand* Command::_internal_mutable_generateinvoicetorentchannelcommand() {
  if (!_internal_has_generateinvoicetorentchannelcommand()) {
    clear_value();
    set_has_generateinvoicetorentchannelcommand();
    value_.generateinvoicetorentchannelcommand_ = CreateMaybeMessage< ::io::stakenet::orderbook::protos::GenerateInvoiceToRentChannelCommand >(
        GetArenaNoVirtual());
  }
  return value_.generateinvoicetorentchannelcommand_;
}
inline ::io::stakenet::orderbook::protos::GenerateInvoiceToRentChannelCommand* Command::mutable_generateinvoicetorentchannelcommand() {
  // @@protoc_insertion_point(field_mutable:io.stakenet.orderbook.protos.Command.generateInvoiceToRentChannelCommand)
  return _internal_mutable_generateinvoicetorentchannelcommand();
}

// .io.stakenet.orderbook.protos.RentChannelCommand rentChannelCommand = 17;
inline bool Command::_internal_has_rentchannelcommand() const {
  return value_case() == kRentChannelCommand;
}
inline bool Command::has_rentchannelcommand() const {
  return _internal_has_rentchannelcommand();
}
inline void Command::set_has_rentchannelcommand() {
  _oneof_case_[0] = kRentChannelCommand;
}
inline ::io::stakenet::orderbook::protos::RentChannelCommand* Command::release_rentchannelcommand() {
  // @@protoc_insertion_point(field_release:io.stakenet.orderbook.protos.Command.rentChannelCommand)
  if (_internal_has_rentchannelcommand()) {
    clear_has_value();
      ::io::stakenet::orderbook::protos::RentChannelCommand* temp = value_.rentchannelcommand_;
    value_.rentchannelcommand_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::io::stakenet::orderbook::protos::RentChannelCommand& Command::_internal_rentchannelcommand() const {
  return _internal_has_rentchannelcommand()
      ? *value_.rentchannelcommand_
      : *reinterpret_cast< ::io::stakenet::orderbook::protos::RentChannelCommand*>(&::io::stakenet::orderbook::protos::_RentChannelCommand_default_instance_);
}
inline const ::io::stakenet::orderbook::protos::RentChannelCommand& Command::rentchannelcommand() const {
  // @@protoc_insertion_point(field_get:io.stakenet.orderbook.protos.Command.rentChannelCommand)
  return _internal_rentchannelcommand();
}
inline ::io::stakenet::orderbook::protos::RentChannelCommand* Command::_internal_mutable_rentchannelcommand() {
  if (!_internal_has_rentchannelcommand()) {
    clear_value();
    set_has_rentchannelcommand();
    value_.rentchannelcommand_ = CreateMaybeMessage< ::io::stakenet::orderbook::protos::RentChannelCommand >(
        GetArenaNoVirtual());
  }
  return value_.rentchannelcommand_;
}
inline ::io::stakenet::orderbook::protos::RentChannelCommand* Command::mutable_rentchannelcommand() {
  // @@protoc_insertion_point(field_mutable:io.stakenet.orderbook.protos.Command.rentChannelCommand)
  return _internal_mutable_rentchannelcommand();
}

// .io.stakenet.orderbook.protos.GetChannelStatusCommand getChannelStatusCommand = 18;
inline bool Command::_internal_has_getchannelstatuscommand() const {
  return value_case() == kGetChannelStatusCommand;
}
inline bool Command::has_getchannelstatuscommand() const {
  return _internal_has_getchannelstatuscommand();
}
inline void Command::set_has_getchannelstatuscommand() {
  _oneof_case_[0] = kGetChannelStatusCommand;
}
inline ::io::stakenet::orderbook::protos::GetChannelStatusCommand* Command::release_getchannelstatuscommand() {
  // @@protoc_insertion_point(field_release:io.stakenet.orderbook.protos.Command.getChannelStatusCommand)
  if (_internal_has_getchannelstatuscommand()) {
    clear_has_value();
      ::io::stakenet::orderbook::protos::GetChannelStatusCommand* temp = value_.getchannelstatuscommand_;
    value_.getchannelstatuscommand_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::io::stakenet::orderbook::protos::GetChannelStatusCommand& Command::_internal_getchannelstatuscommand() const {
  return _internal_has_getchannelstatuscommand()
      ? *value_.getchannelstatuscommand_
      : *reinterpret_cast< ::io::stakenet::orderbook::protos::GetChannelStatusCommand*>(&::io::stakenet::orderbook::protos::_GetChannelStatusCommand_default_instance_);
}
inline const ::io::stakenet::orderbook::protos::GetChannelStatusCommand& Command::getchannelstatuscommand() const {
  // @@protoc_insertion_point(field_get:io.stakenet.orderbook.protos.Command.getChannelStatusCommand)
  return _internal_getchannelstatuscommand();
}
inline ::io::stakenet::orderbook::protos::GetChannelStatusCommand* Command::_internal_mutable_getchannelstatuscommand() {
  if (!_internal_has_getchannelstatuscommand()) {
    clear_value();
    set_has_getchannelstatuscommand();
    value_.getchannelstatuscommand_ = CreateMaybeMessage< ::io::stakenet::orderbook::protos::GetChannelStatusCommand >(
        GetArenaNoVirtual());
  }
  return value_.getchannelstatuscommand_;
}
inline ::io::stakenet::orderbook::protos::GetChannelStatusCommand* Command::mutable_getchannelstatuscommand() {
  // @@protoc_insertion_point(field_mutable:io.stakenet.orderbook.protos.Command.getChannelStatusCommand)
  return _internal_mutable_getchannelstatuscommand();
}

// .io.stakenet.orderbook.protos.GetFeeToRentChannelCommand getFeeToRentChannelCommand = 19;
inline bool Command::_internal_has_getfeetorentchannelcommand() const {
  return value_case() == kGetFeeToRentChannelCommand;
}
inline bool Command::has_getfeetorentchannelcommand() const {
  return _internal_has_getfeetorentchannelcommand();
}
inline void Command::set_has_getfeetorentchannelcommand() {
  _oneof_case_[0] = kGetFeeToRentChannelCommand;
}
inline ::io::stakenet::orderbook::protos::GetFeeToRentChannelCommand* Command::release_getfeetorentchannelcommand() {
  // @@protoc_insertion_point(field_release:io.stakenet.orderbook.protos.Command.getFeeToRentChannelCommand)
  if (_internal_has_getfeetorentchannelcommand()) {
    clear_has_value();
      ::io::stakenet::orderbook::protos::GetFeeToRentChannelCommand* temp = value_.getfeetorentchannelcommand_;
    value_.getfeetorentchannelcommand_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::io::stakenet::orderbook::protos::GetFeeToRentChannelCommand& Command::_internal_getfeetorentchannelcommand() const {
  return _internal_has_getfeetorentchannelcommand()
      ? *value_.getfeetorentchannelcommand_
      : *reinterpret_cast< ::io::stakenet::orderbook::protos::GetFeeToRentChannelCommand*>(&::io::stakenet::orderbook::protos::_GetFeeToRentChannelCommand_default_instance_);
}
inline const ::io::stakenet::orderbook::protos::GetFeeToRentChannelCommand& Command::getfeetorentchannelcommand() const {
  // @@protoc_insertion_point(field_get:io.stakenet.orderbook.protos.Command.getFeeToRentChannelCommand)
  return _internal_getfeetorentchannelcommand();
}
inline ::io::stakenet::orderbook::protos::GetFeeToRentChannelCommand* Command::_internal_mutable_getfeetorentchannelcommand() {
  if (!_internal_has_getfeetorentchannelcommand()) {
    clear_value();
    set_has_getfeetorentchannelcommand();
    value_.getfeetorentchannelcommand_ = CreateMaybeMessage< ::io::stakenet::orderbook::protos::GetFeeToRentChannelCommand >(
        GetArenaNoVirtual());
  }
  return value_.getfeetorentchannelcommand_;
}
inline ::io::stakenet::orderbook::protos::GetFeeToRentChannelCommand* Command::mutable_getfeetorentchannelcommand() {
  // @@protoc_insertion_point(field_mutable:io.stakenet.orderbook.protos.Command.getFeeToRentChannelCommand)
  return _internal_mutable_getfeetorentchannelcommand();
}

// .io.stakenet.orderbook.protos.RefundFeeCommand refundFeeCommand = 20;
inline bool Command::_internal_has_refundfeecommand() const {
  return value_case() == kRefundFeeCommand;
}
inline bool Command::has_refundfeecommand() const {
  return _internal_has_refundfeecommand();
}
inline void Command::set_has_refundfeecommand() {
  _oneof_case_[0] = kRefundFeeCommand;
}
inline ::io::stakenet::orderbook::protos::RefundFeeCommand* Command::release_refundfeecommand() {
  // @@protoc_insertion_point(field_release:io.stakenet.orderbook.protos.Command.refundFeeCommand)
  if (_internal_has_refundfeecommand()) {
    clear_has_value();
      ::io::stakenet::orderbook::protos::RefundFeeCommand* temp = value_.refundfeecommand_;
    value_.refundfeecommand_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::io::stakenet::orderbook::protos::RefundFeeCommand& Command::_internal_refundfeecommand() const {
  return _internal_has_refundfeecommand()
      ? *value_.refundfeecommand_
      : *reinterpret_cast< ::io::stakenet::orderbook::protos::RefundFeeCommand*>(&::io::stakenet::orderbook::protos::_RefundFeeCommand_default_instance_);
}
inline const ::io::stakenet::orderbook::protos::RefundFeeCommand& Command::refundfeecommand() const {
  // @@protoc_insertion_point(field_get:io.stakenet.orderbook.protos.Command.refundFeeCommand)
  return _internal_refundfeecommand();
}
inline ::io::stakenet::orderbook::protos::RefundFeeCommand* Command::_internal_mutable_refundfeecommand() {
  if (!_internal_has_refundfeecommand()) {
    clear_value();
    set_has_refundfeecommand();
    value_.refundfeecommand_ = CreateMaybeMessage< ::io::stakenet::orderbook::protos::RefundFeeCommand >(
        GetArenaNoVirtual());
  }
  return value_.refundfeecommand_;
}
inline ::io::stakenet::orderbook::protos::RefundFeeCommand* Command::mutable_refundfeecommand() {
  // @@protoc_insertion_point(field_mutable:io.stakenet.orderbook.protos.Command.refundFeeCommand)
  return _internal_mutable_refundfeecommand();
}

// .io.stakenet.orderbook.protos.GetRefundableAmountCommand getRefundableAmountCommand = 21;
inline bool Command::_internal_has_getrefundableamountcommand() const {
  return value_case() == kGetRefundableAmountCommand;
}
inline bool Command::has_getrefundableamountcommand() const {
  return _internal_has_getrefundableamountcommand();
}
inline void Command::set_has_getrefundableamountcommand() {
  _oneof_case_[0] = kGetRefundableAmountCommand;
}
inline ::io::stakenet::orderbook::protos::GetRefundableAmountCommand* Command::release_getrefundableamountcommand() {
  // @@protoc_insertion_point(field_release:io.stakenet.orderbook.protos.Command.getRefundableAmountCommand)
  if (_internal_has_getrefundableamountcommand()) {
    clear_has_value();
      ::io::stakenet::orderbook::protos::GetRefundableAmountCommand* temp = value_.getrefundableamountcommand_;
    value_.getrefundableamountcommand_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::io::stakenet::orderbook::protos::GetRefundableAmountCommand& Command::_internal_getrefundableamountcommand() const {
  return _internal_has_getrefundableamountcommand()
      ? *value_.getrefundableamountcommand_
      : *reinterpret_cast< ::io::stakenet::orderbook::protos::GetRefundableAmountCommand*>(&::io::stakenet::orderbook::protos::_GetRefundableAmountCommand_default_instance_);
}
inline const ::io::stakenet::orderbook::protos::GetRefundableAmountCommand& Command::getrefundableamountcommand() const {
  // @@protoc_insertion_point(field_get:io.stakenet.orderbook.protos.Command.getRefundableAmountCommand)
  return _internal_getrefundableamountcommand();
}
inline ::io::stakenet::orderbook::protos::GetRefundableAmountCommand* Command::_internal_mutable_getrefundableamountcommand() {
  if (!_internal_has_getrefundableamountcommand()) {
    clear_value();
    set_has_getrefundableamountcommand();
    value_.getrefundableamountcommand_ = CreateMaybeMessage< ::io::stakenet::orderbook::protos::GetRefundableAmountCommand >(
        GetArenaNoVirtual());
  }
  return value_.getrefundableamountcommand_;
}
inline ::io::stakenet::orderbook::protos::GetRefundableAmountCommand* Command::mutable_getrefundableamountcommand() {
  // @@protoc_insertion_point(field_mutable:io.stakenet.orderbook.protos.Command.getRefundableAmountCommand)
  return _internal_mutable_getrefundableamountcommand();
}

// .io.stakenet.orderbook.protos.GetFeeToExtendRentedChannelCommand getFeeToExtendRentedChannelCommand = 22;
inline bool Command::_internal_has_getfeetoextendrentedchannelcommand() const {
  return value_case() == kGetFeeToExtendRentedChannelCommand;
}
inline bool Command::has_getfeetoextendrentedchannelcommand() const {
  return _internal_has_getfeetoextendrentedchannelcommand();
}
inline void Command::set_has_getfeetoextendrentedchannelcommand() {
  _oneof_case_[0] = kGetFeeToExtendRentedChannelCommand;
}
inline ::io::stakenet::orderbook::protos::GetFeeToExtendRentedChannelCommand* Command::release_getfeetoextendrentedchannelcommand() {
  // @@protoc_insertion_point(field_release:io.stakenet.orderbook.protos.Command.getFeeToExtendRentedChannelCommand)
  if (_internal_has_getfeetoextendrentedchannelcommand()) {
    clear_has_value();
      ::io::stakenet::orderbook::protos::GetFeeToExtendRentedChannelCommand* temp = value_.getfeetoextendrentedchannelcommand_;
    value_.getfeetoextendrentedchannelcommand_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::io::stakenet::orderbook::protos::GetFeeToExtendRentedChannelCommand& Command::_internal_getfeetoextendrentedchannelcommand() const {
  return _internal_has_getfeetoextendrentedchannelcommand()
      ? *value_.getfeetoextendrentedchannelcommand_
      : *reinterpret_cast< ::io::stakenet::orderbook::protos::GetFeeToExtendRentedChannelCommand*>(&::io::stakenet::orderbook::protos::_GetFeeToExtendRentedChannelCommand_default_instance_);
}
inline const ::io::stakenet::orderbook::protos::GetFeeToExtendRentedChannelCommand& Command::getfeetoextendrentedchannelcommand() const {
  // @@protoc_insertion_point(field_get:io.stakenet.orderbook.protos.Command.getFeeToExtendRentedChannelCommand)
  return _internal_getfeetoextendrentedchannelcommand();
}
inline ::io::stakenet::orderbook::protos::GetFeeToExtendRentedChannelCommand* Command::_internal_mutable_getfeetoextendrentedchannelcommand() {
  if (!_internal_has_getfeetoextendrentedchannelcommand()) {
    clear_value();
    set_has_getfeetoextendrentedchannelcommand();
    value_.getfeetoextendrentedchannelcommand_ = CreateMaybeMessage< ::io::stakenet::orderbook::protos::GetFeeToExtendRentedChannelCommand >(
        GetArenaNoVirtual());
  }
  return value_.getfeetoextendrentedchannelcommand_;
}
inline ::io::stakenet::orderbook::protos::GetFeeToExtendRentedChannelCommand* Command::mutable_getfeetoextendrentedchannelcommand() {
  // @@protoc_insertion_point(field_mutable:io.stakenet.orderbook.protos.Command.getFeeToExtendRentedChannelCommand)
  return _internal_mutable_getfeetoextendrentedchannelcommand();
}

// .io.stakenet.orderbook.protos.GenerateInvoiceToExtendRentedChannelCommand generateInvoiceToExtendRentedChannelCommand = 23;
inline bool Command::_internal_has_generateinvoicetoextendrentedchannelcommand() const {
  return value_case() == kGenerateInvoiceToExtendRentedChannelCommand;
}
inline bool Command::has_generateinvoicetoextendrentedchannelcommand() const {
  return _internal_has_generateinvoicetoextendrentedchannelcommand();
}
inline void Command::set_has_generateinvoicetoextendrentedchannelcommand() {
  _oneof_case_[0] = kGenerateInvoiceToExtendRentedChannelCommand;
}
inline ::io::stakenet::orderbook::protos::GenerateInvoiceToExtendRentedChannelCommand* Command::release_generateinvoicetoextendrentedchannelcommand() {
  // @@protoc_insertion_point(field_release:io.stakenet.orderbook.protos.Command.generateInvoiceToExtendRentedChannelCommand)
  if (_internal_has_generateinvoicetoextendrentedchannelcommand()) {
    clear_has_value();
      ::io::stakenet::orderbook::protos::GenerateInvoiceToExtendRentedChannelCommand* temp = value_.generateinvoicetoextendrentedchannelcommand_;
    value_.generateinvoicetoextendrentedchannelcommand_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::io::stakenet::orderbook::protos::GenerateInvoiceToExtendRentedChannelCommand& Command::_internal_generateinvoicetoextendrentedchannelcommand() const {
  return _internal_has_generateinvoicetoextendrentedchannelcommand()
      ? *value_.generateinvoicetoextendrentedchannelcommand_
      : *reinterpret_cast< ::io::stakenet::orderbook::protos::GenerateInvoiceToExtendRentedChannelCommand*>(&::io::stakenet::orderbook::protos::_GenerateInvoiceToExtendRentedChannelCommand_default_instance_);
}
inline const ::io::stakenet::orderbook::protos::GenerateInvoiceToExtendRentedChannelCommand& Command::generateinvoicetoextendrentedchannelcommand() const {
  // @@protoc_insertion_point(field_get:io.stakenet.orderbook.protos.Command.generateInvoiceToExtendRentedChannelCommand)
  return _internal_generateinvoicetoextendrentedchannelcommand();
}
inline ::io::stakenet::orderbook::protos::GenerateInvoiceToExtendRentedChannelCommand* Command::_internal_mutable_generateinvoicetoextendrentedchannelcommand() {
  if (!_internal_has_generateinvoicetoextendrentedchannelcommand()) {
    clear_value();
    set_has_generateinvoicetoextendrentedchannelcommand();
    value_.generateinvoicetoextendrentedchannelcommand_ = CreateMaybeMessage< ::io::stakenet::orderbook::protos::GenerateInvoiceToExtendRentedChannelCommand >(
        GetArenaNoVirtual());
  }
  return value_.generateinvoicetoextendrentedchannelcommand_;
}
inline ::io::stakenet::orderbook::protos::GenerateInvoiceToExtendRentedChannelCommand* Command::mutable_generateinvoicetoextendrentedchannelcommand() {
  // @@protoc_insertion_point(field_mutable:io.stakenet.orderbook.protos.Command.generateInvoiceToExtendRentedChannelCommand)
  return _internal_mutable_generateinvoicetoextendrentedchannelcommand();
}

// .io.stakenet.orderbook.protos.ExtendRentedChannelTimeCommand extendRentedChannelTimeCommand = 24;
inline bool Command::_internal_has_extendrentedchanneltimecommand() const {
  return value_case() == kExtendRentedChannelTimeCommand;
}
inline bool Command::has_extendrentedchanneltimecommand() const {
  return _internal_has_extendrentedchanneltimecommand();
}
inline void Command::set_has_extendrentedchanneltimecommand() {
  _oneof_case_[0] = kExtendRentedChannelTimeCommand;
}
inline ::io::stakenet::orderbook::protos::ExtendRentedChannelTimeCommand* Command::release_extendrentedchanneltimecommand() {
  // @@protoc_insertion_point(field_release:io.stakenet.orderbook.protos.Command.extendRentedChannelTimeCommand)
  if (_internal_has_extendrentedchanneltimecommand()) {
    clear_has_value();
      ::io::stakenet::orderbook::protos::ExtendRentedChannelTimeCommand* temp = value_.extendrentedchanneltimecommand_;
    value_.extendrentedchanneltimecommand_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::io::stakenet::orderbook::protos::ExtendRentedChannelTimeCommand& Command::_internal_extendrentedchanneltimecommand() const {
  return _internal_has_extendrentedchanneltimecommand()
      ? *value_.extendrentedchanneltimecommand_
      : *reinterpret_cast< ::io::stakenet::orderbook::protos::ExtendRentedChannelTimeCommand*>(&::io::stakenet::orderbook::protos::_ExtendRentedChannelTimeCommand_default_instance_);
}
inline const ::io::stakenet::orderbook::protos::ExtendRentedChannelTimeCommand& Command::extendrentedchanneltimecommand() const {
  // @@protoc_insertion_point(field_get:io.stakenet.orderbook.protos.Command.extendRentedChannelTimeCommand)
  return _internal_extendrentedchanneltimecommand();
}
inline ::io::stakenet::orderbook::protos::ExtendRentedChannelTimeCommand* Command::_internal_mutable_extendrentedchanneltimecommand() {
  if (!_internal_has_extendrentedchanneltimecommand()) {
    clear_value();
    set_has_extendrentedchanneltimecommand();
    value_.extendrentedchanneltimecommand_ = CreateMaybeMessage< ::io::stakenet::orderbook::protos::ExtendRentedChannelTimeCommand >(
        GetArenaNoVirtual());
  }
  return value_.extendrentedchanneltimecommand_;
}
inline ::io::stakenet::orderbook::protos::ExtendRentedChannelTimeCommand* Command::mutable_extendrentedchanneltimecommand() {
  // @@protoc_insertion_point(field_mutable:io.stakenet.orderbook.protos.Command.extendRentedChannelTimeCommand)
  return _internal_mutable_extendrentedchanneltimecommand();
}

// .io.stakenet.orderbook.protos.RegisterPublicKeyCommand registerPublicKeyCommand = 25;
inline bool Command::_internal_has_registerpublickeycommand() const {
  return value_case() == kRegisterPublicKeyCommand;
}
inline bool Command::has_registerpublickeycommand() const {
  return _internal_has_registerpublickeycommand();
}
inline void Command::set_has_registerpublickeycommand() {
  _oneof_case_[0] = kRegisterPublicKeyCommand;
}
inline ::io::stakenet::orderbook::protos::RegisterPublicKeyCommand* Command::release_registerpublickeycommand() {
  // @@protoc_insertion_point(field_release:io.stakenet.orderbook.protos.Command.registerPublicKeyCommand)
  if (_internal_has_registerpublickeycommand()) {
    clear_has_value();
      ::io::stakenet::orderbook::protos::RegisterPublicKeyCommand* temp = value_.registerpublickeycommand_;
    value_.registerpublickeycommand_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::io::stakenet::orderbook::protos::RegisterPublicKeyCommand& Command::_internal_registerpublickeycommand() const {
  return _internal_has_registerpublickeycommand()
      ? *value_.registerpublickeycommand_
      : *reinterpret_cast< ::io::stakenet::orderbook::protos::RegisterPublicKeyCommand*>(&::io::stakenet::orderbook::protos::_RegisterPublicKeyCommand_default_instance_);
}
inline const ::io::stakenet::orderbook::protos::RegisterPublicKeyCommand& Command::registerpublickeycommand() const {
  // @@protoc_insertion_point(field_get:io.stakenet.orderbook.protos.Command.registerPublicKeyCommand)
  return _internal_registerpublickeycommand();
}
inline ::io::stakenet::orderbook::protos::RegisterPublicKeyCommand* Command::_internal_mutable_registerpublickeycommand() {
  if (!_internal_has_registerpublickeycommand()) {
    clear_value();
    set_has_registerpublickeycommand();
    value_.registerpublickeycommand_ = CreateMaybeMessage< ::io::stakenet::orderbook::protos::RegisterPublicKeyCommand >(
        GetArenaNoVirtual());
  }
  return value_.registerpublickeycommand_;
}
inline ::io::stakenet::orderbook::protos::RegisterPublicKeyCommand* Command::mutable_registerpublickeycommand() {
  // @@protoc_insertion_point(field_mutable:io.stakenet.orderbook.protos.Command.registerPublicKeyCommand)
  return _internal_mutable_registerpublickeycommand();
}

// .io.stakenet.orderbook.protos.RegisterPublicIdentifierCommand registerPublicIdentifierCommand = 26;
inline bool Command::_internal_has_registerpublicidentifiercommand() const {
  return value_case() == kRegisterPublicIdentifierCommand;
}
inline bool Command::has_registerpublicidentifiercommand() const {
  return _internal_has_registerpublicidentifiercommand();
}
inline void Command::set_has_registerpublicidentifiercommand() {
  _oneof_case_[0] = kRegisterPublicIdentifierCommand;
}
inline ::io::stakenet::orderbook::protos::RegisterPublicIdentifierCommand* Command::release_registerpublicidentifiercommand() {
  // @@protoc_insertion_point(field_release:io.stakenet.orderbook.protos.Command.registerPublicIdentifierCommand)
  if (_internal_has_registerpublicidentifiercommand()) {
    clear_has_value();
      ::io::stakenet::orderbook::protos::RegisterPublicIdentifierCommand* temp = value_.registerpublicidentifiercommand_;
    value_.registerpublicidentifiercommand_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::io::stakenet::orderbook::protos::RegisterPublicIdentifierCommand& Command::_internal_registerpublicidentifiercommand() const {
  return _internal_has_registerpublicidentifiercommand()
      ? *value_.registerpublicidentifiercommand_
      : *reinterpret_cast< ::io::stakenet::orderbook::protos::RegisterPublicIdentifierCommand*>(&::io::stakenet::orderbook::protos::_RegisterPublicIdentifierCommand_default_instance_);
}
inline const ::io::stakenet::orderbook::protos::RegisterPublicIdentifierCommand& Command::registerpublicidentifiercommand() const {
  // @@protoc_insertion_point(field_get:io.stakenet.orderbook.protos.Command.registerPublicIdentifierCommand)
  return _internal_registerpublicidentifiercommand();
}
inline ::io::stakenet::orderbook::protos::RegisterPublicIdentifierCommand* Command::_internal_mutable_registerpublicidentifiercommand() {
  if (!_internal_has_registerpublicidentifiercommand()) {
    clear_value();
    set_has_registerpublicidentifiercommand();
    value_.registerpublicidentifiercommand_ = CreateMaybeMessage< ::io::stakenet::orderbook::protos::RegisterPublicIdentifierCommand >(
        GetArenaNoVirtual());
  }
  return value_.registerpublicidentifiercommand_;
}
inline ::io::stakenet::orderbook::protos::RegisterPublicIdentifierCommand* Command::mutable_registerpublicidentifiercommand() {
  // @@protoc_insertion_point(field_mutable:io.stakenet.orderbook.protos.Command.registerPublicIdentifierCommand)
  return _internal_mutable_registerpublicidentifiercommand();
}

// .io.stakenet.orderbook.protos.GetConnextPaymentInformationCommand getConnextPaymentInformationCommand = 27;
inline bool Command::_internal_has_getconnextpaymentinformationcommand() const {
  return value_case() == kGetConnextPaymentInformationCommand;
}
inline bool Command::has_getconnextpaymentinformationcommand() const {
  return _internal_has_getconnextpaymentinformationcommand();
}
inline void Command::set_has_getconnextpaymentinformationcommand() {
  _oneof_case_[0] = kGetConnextPaymentInformationCommand;
}
inline ::io::stakenet::orderbook::protos::GetConnextPaymentInformationCommand* Command::release_getconnextpaymentinformationcommand() {
  // @@protoc_insertion_point(field_release:io.stakenet.orderbook.protos.Command.getConnextPaymentInformationCommand)
  if (_internal_has_getconnextpaymentinformationcommand()) {
    clear_has_value();
      ::io::stakenet::orderbook::protos::GetConnextPaymentInformationCommand* temp = value_.getconnextpaymentinformationcommand_;
    value_.getconnextpaymentinformationcommand_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::io::stakenet::orderbook::protos::GetConnextPaymentInformationCommand& Command::_internal_getconnextpaymentinformationcommand() const {
  return _internal_has_getconnextpaymentinformationcommand()
      ? *value_.getconnextpaymentinformationcommand_
      : *reinterpret_cast< ::io::stakenet::orderbook::protos::GetConnextPaymentInformationCommand*>(&::io::stakenet::orderbook::protos::_GetConnextPaymentInformationCommand_default_instance_);
}
inline const ::io::stakenet::orderbook::protos::GetConnextPaymentInformationCommand& Command::getconnextpaymentinformationcommand() const {
  // @@protoc_insertion_point(field_get:io.stakenet.orderbook.protos.Command.getConnextPaymentInformationCommand)
  return _internal_getconnextpaymentinformationcommand();
}
inline ::io::stakenet::orderbook::protos::GetConnextPaymentInformationCommand* Command::_internal_mutable_getconnextpaymentinformationcommand() {
  if (!_internal_has_getconnextpaymentinformationcommand()) {
    clear_value();
    set_has_getconnextpaymentinformationcommand();
    value_.getconnextpaymentinformationcommand_ = CreateMaybeMessage< ::io::stakenet::orderbook::protos::GetConnextPaymentInformationCommand >(
        GetArenaNoVirtual());
  }
  return value_.getconnextpaymentinformationcommand_;
}
inline ::io::stakenet::orderbook::protos::GetConnextPaymentInformationCommand* Command::mutable_getconnextpaymentinformationcommand() {
  // @@protoc_insertion_point(field_mutable:io.stakenet.orderbook.protos.Command.getConnextPaymentInformationCommand)
  return _internal_mutable_getconnextpaymentinformationcommand();
}

// .io.stakenet.orderbook.protos.GeneratePaymentHashToRentChannelCommand generatePaymentHashToRentChannelCommand = 28;
inline bool Command::_internal_has_generatepaymenthashtorentchannelcommand() const {
  return value_case() == kGeneratePaymentHashToRentChannelCommand;
}
inline bool Command::has_generatepaymenthashtorentchannelcommand() const {
  return _internal_has_generatepaymenthashtorentchannelcommand();
}
inline void Command::set_has_generatepaymenthashtorentchannelcommand() {
  _oneof_case_[0] = kGeneratePaymentHashToRentChannelCommand;
}
inline ::io::stakenet::orderbook::protos::GeneratePaymentHashToRentChannelCommand* Command::release_generatepaymenthashtorentchannelcommand() {
  // @@protoc_insertion_point(field_release:io.stakenet.orderbook.protos.Command.generatePaymentHashToRentChannelCommand)
  if (_internal_has_generatepaymenthashtorentchannelcommand()) {
    clear_has_value();
      ::io::stakenet::orderbook::protos::GeneratePaymentHashToRentChannelCommand* temp = value_.generatepaymenthashtorentchannelcommand_;
    value_.generatepaymenthashtorentchannelcommand_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::io::stakenet::orderbook::protos::GeneratePaymentHashToRentChannelCommand& Command::_internal_generatepaymenthashtorentchannelcommand() const {
  return _internal_has_generatepaymenthashtorentchannelcommand()
      ? *value_.generatepaymenthashtorentchannelcommand_
      : *reinterpret_cast< ::io::stakenet::orderbook::protos::GeneratePaymentHashToRentChannelCommand*>(&::io::stakenet::orderbook::protos::_GeneratePaymentHashToRentChannelCommand_default_instance_);
}
inline const ::io::stakenet::orderbook::protos::GeneratePaymentHashToRentChannelCommand& Command::generatepaymenthashtorentchannelcommand() const {
  // @@protoc_insertion_point(field_get:io.stakenet.orderbook.protos.Command.generatePaymentHashToRentChannelCommand)
  return _internal_generatepaymenthashtorentchannelcommand();
}
inline ::io::stakenet::orderbook::protos::GeneratePaymentHashToRentChannelCommand* Command::_internal_mutable_generatepaymenthashtorentchannelcommand() {
  if (!_internal_has_generatepaymenthashtorentchannelcommand()) {
    clear_value();
    set_has_generatepaymenthashtorentchannelcommand();
    value_.generatepaymenthashtorentchannelcommand_ = CreateMaybeMessage< ::io::stakenet::orderbook::protos::GeneratePaymentHashToRentChannelCommand >(
        GetArenaNoVirtual());
  }
  return value_.generatepaymenthashtorentchannelcommand_;
}
inline ::io::stakenet::orderbook::protos::GeneratePaymentHashToRentChannelCommand* Command::mutable_generatepaymenthashtorentchannelcommand() {
  // @@protoc_insertion_point(field_mutable:io.stakenet.orderbook.protos.Command.generatePaymentHashToRentChannelCommand)
  return _internal_mutable_generatepaymenthashtorentchannelcommand();
}

// .io.stakenet.orderbook.protos.GeneratePaymentHashToExtendConnextRentedChannelCommand generatePaymentHashToExtendConnextRentedChannelCommand = 29;
inline bool Command::_internal_has_generatepaymenthashtoextendconnextrentedchannelcommand() const {
  return value_case() == kGeneratePaymentHashToExtendConnextRentedChannelCommand;
}
inline bool Command::has_generatepaymenthashtoextendconnextrentedchannelcommand() const {
  return _internal_has_generatepaymenthashtoextendconnextrentedchannelcommand();
}
inline void Command::set_has_generatepaymenthashtoextendconnextrentedchannelcommand() {
  _oneof_case_[0] = kGeneratePaymentHashToExtendConnextRentedChannelCommand;
}
inline ::io::stakenet::orderbook::protos::GeneratePaymentHashToExtendConnextRentedChannelCommand* Command::release_generatepaymenthashtoextendconnextrentedchannelcommand() {
  // @@protoc_insertion_point(field_release:io.stakenet.orderbook.protos.Command.generatePaymentHashToExtendConnextRentedChannelCommand)
  if (_internal_has_generatepaymenthashtoextendconnextrentedchannelcommand()) {
    clear_has_value();
      ::io::stakenet::orderbook::protos::GeneratePaymentHashToExtendConnextRentedChannelCommand* temp = value_.generatepaymenthashtoextendconnextrentedchannelcommand_;
    value_.generatepaymenthashtoextendconnextrentedchannelcommand_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::io::stakenet::orderbook::protos::GeneratePaymentHashToExtendConnextRentedChannelCommand& Command::_internal_generatepaymenthashtoextendconnextrentedchannelcommand() const {
  return _internal_has_generatepaymenthashtoextendconnextrentedchannelcommand()
      ? *value_.generatepaymenthashtoextendconnextrentedchannelcommand_
      : *reinterpret_cast< ::io::stakenet::orderbook::protos::GeneratePaymentHashToExtendConnextRentedChannelCommand*>(&::io::stakenet::orderbook::protos::_GeneratePaymentHashToExtendConnextRentedChannelCommand_default_instance_);
}
inline const ::io::stakenet::orderbook::protos::GeneratePaymentHashToExtendConnextRentedChannelCommand& Command::generatepaymenthashtoextendconnextrentedchannelcommand() const {
  // @@protoc_insertion_point(field_get:io.stakenet.orderbook.protos.Command.generatePaymentHashToExtendConnextRentedChannelCommand)
  return _internal_generatepaymenthashtoextendconnextrentedchannelcommand();
}
inline ::io::stakenet::orderbook::protos::GeneratePaymentHashToExtendConnextRentedChannelCommand* Command::_internal_mutable_generatepaymenthashtoextendconnextrentedchannelcommand() {
  if (!_internal_has_generatepaymenthashtoextendconnextrentedchannelcommand()) {
    clear_value();
    set_has_generatepaymenthashtoextendconnextrentedchannelcommand();
    value_.generatepaymenthashtoextendconnextrentedchannelcommand_ = CreateMaybeMessage< ::io::stakenet::orderbook::protos::GeneratePaymentHashToExtendConnextRentedChannelCommand >(
        GetArenaNoVirtual());
  }
  return value_.generatepaymenthashtoextendconnextrentedchannelcommand_;
}
inline ::io::stakenet::orderbook::protos::GeneratePaymentHashToExtendConnextRentedChannelCommand* Command::mutable_generatepaymenthashtoextendconnextrentedchannelcommand() {
  // @@protoc_insertion_point(field_mutable:io.stakenet.orderbook.protos.Command.generatePaymentHashToExtendConnextRentedChannelCommand)
  return _internal_mutable_generatepaymenthashtoextendconnextrentedchannelcommand();
}

// .io.stakenet.orderbook.protos.GetConnextChannelContractDeploymentFeeCommand getConnextChannelContractDeploymentFeeCommand = 30;
inline bool Command::_internal_has_getconnextchannelcontractdeploymentfeecommand() const {
  return value_case() == kGetConnextChannelContractDeploymentFeeCommand;
}
inline bool Command::has_getconnextchannelcontractdeploymentfeecommand() const {
  return _internal_has_getconnextchannelcontractdeploymentfeecommand();
}
inline void Command::set_has_getconnextchannelcontractdeploymentfeecommand() {
  _oneof_case_[0] = kGetConnextChannelContractDeploymentFeeCommand;
}
inline ::io::stakenet::orderbook::protos::GetConnextChannelContractDeploymentFeeCommand* Command::release_getconnextchannelcontractdeploymentfeecommand() {
  // @@protoc_insertion_point(field_release:io.stakenet.orderbook.protos.Command.getConnextChannelContractDeploymentFeeCommand)
  if (_internal_has_getconnextchannelcontractdeploymentfeecommand()) {
    clear_has_value();
      ::io::stakenet::orderbook::protos::GetConnextChannelContractDeploymentFeeCommand* temp = value_.getconnextchannelcontractdeploymentfeecommand_;
    value_.getconnextchannelcontractdeploymentfeecommand_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::io::stakenet::orderbook::protos::GetConnextChannelContractDeploymentFeeCommand& Command::_internal_getconnextchannelcontractdeploymentfeecommand() const {
  return _internal_has_getconnextchannelcontractdeploymentfeecommand()
      ? *value_.getconnextchannelcontractdeploymentfeecommand_
      : *reinterpret_cast< ::io::stakenet::orderbook::protos::GetConnextChannelContractDeploymentFeeCommand*>(&::io::stakenet::orderbook::protos::_GetConnextChannelContractDeploymentFeeCommand_default_instance_);
}
inline const ::io::stakenet::orderbook::protos::GetConnextChannelContractDeploymentFeeCommand& Command::getconnextchannelcontractdeploymentfeecommand() const {
  // @@protoc_insertion_point(field_get:io.stakenet.orderbook.protos.Command.getConnextChannelContractDeploymentFeeCommand)
  return _internal_getconnextchannelcontractdeploymentfeecommand();
}
inline ::io::stakenet::orderbook::protos::GetConnextChannelContractDeploymentFeeCommand* Command::_internal_mutable_getconnextchannelcontractdeploymentfeecommand() {
  if (!_internal_has_getconnextchannelcontractdeploymentfeecommand()) {
    clear_value();
    set_has_getconnextchannelcontractdeploymentfeecommand();
    value_.getconnextchannelcontractdeploymentfeecommand_ = CreateMaybeMessage< ::io::stakenet::orderbook::protos::GetConnextChannelContractDeploymentFeeCommand >(
        GetArenaNoVirtual());
  }
  return value_.getconnextchannelcontractdeploymentfeecommand_;
}
inline ::io::stakenet::orderbook::protos::GetConnextChannelContractDeploymentFeeCommand* Command::mutable_getconnextchannelcontractdeploymentfeecommand() {
  // @@protoc_insertion_point(field_mutable:io.stakenet.orderbook.protos.Command.getConnextChannelContractDeploymentFeeCommand)
  return _internal_mutable_getconnextchannelcontractdeploymentfeecommand();
}

// .io.stakenet.orderbook.protos.RegisterConnextChannelContractDeploymentFeeCommand registerConnextChannelContractDeploymentFeeCommand = 31;
inline bool Command::_internal_has_registerconnextchannelcontractdeploymentfeecommand() const {
  return value_case() == kRegisterConnextChannelContractDeploymentFeeCommand;
}
inline bool Command::has_registerconnextchannelcontractdeploymentfeecommand() const {
  return _internal_has_registerconnextchannelcontractdeploymentfeecommand();
}
inline void Command::set_has_registerconnextchannelcontractdeploymentfeecommand() {
  _oneof_case_[0] = kRegisterConnextChannelContractDeploymentFeeCommand;
}
inline ::io::stakenet::orderbook::protos::RegisterConnextChannelContractDeploymentFeeCommand* Command::release_registerconnextchannelcontractdeploymentfeecommand() {
  // @@protoc_insertion_point(field_release:io.stakenet.orderbook.protos.Command.registerConnextChannelContractDeploymentFeeCommand)
  if (_internal_has_registerconnextchannelcontractdeploymentfeecommand()) {
    clear_has_value();
      ::io::stakenet::orderbook::protos::RegisterConnextChannelContractDeploymentFeeCommand* temp = value_.registerconnextchannelcontractdeploymentfeecommand_;
    value_.registerconnextchannelcontractdeploymentfeecommand_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::io::stakenet::orderbook::protos::RegisterConnextChannelContractDeploymentFeeCommand& Command::_internal_registerconnextchannelcontractdeploymentfeecommand() const {
  return _internal_has_registerconnextchannelcontractdeploymentfeecommand()
      ? *value_.registerconnextchannelcontractdeploymentfeecommand_
      : *reinterpret_cast< ::io::stakenet::orderbook::protos::RegisterConnextChannelContractDeploymentFeeCommand*>(&::io::stakenet::orderbook::protos::_RegisterConnextChannelContractDeploymentFeeCommand_default_instance_);
}
inline const ::io::stakenet::orderbook::protos::RegisterConnextChannelContractDeploymentFeeCommand& Command::registerconnextchannelcontractdeploymentfeecommand() const {
  // @@protoc_insertion_point(field_get:io.stakenet.orderbook.protos.Command.registerConnextChannelContractDeploymentFeeCommand)
  return _internal_registerconnextchannelcontractdeploymentfeecommand();
}
inline ::io::stakenet::orderbook::protos::RegisterConnextChannelContractDeploymentFeeCommand* Command::_internal_mutable_registerconnextchannelcontractdeploymentfeecommand() {
  if (!_internal_has_registerconnextchannelcontractdeploymentfeecommand()) {
    clear_value();
    set_has_registerconnextchannelcontractdeploymentfeecommand();
    value_.registerconnextchannelcontractdeploymentfeecommand_ = CreateMaybeMessage< ::io::stakenet::orderbook::protos::RegisterConnextChannelContractDeploymentFeeCommand >(
        GetArenaNoVirtual());
  }
  return value_.registerconnextchannelcontractdeploymentfeecommand_;
}
inline ::io::stakenet::orderbook::protos::RegisterConnextChannelContractDeploymentFeeCommand* Command::mutable_registerconnextchannelcontractdeploymentfeecommand() {
  // @@protoc_insertion_point(field_mutable:io.stakenet.orderbook.protos.Command.registerConnextChannelContractDeploymentFeeCommand)
  return _internal_mutable_registerconnextchannelcontractdeploymentfeecommand();
}

inline bool Command::has_value() const {
  return value_case() != VALUE_NOT_SET;
}
inline void Command::clear_has_value() {
  _oneof_case_[0] = VALUE_NOT_SET;
}
inline Command::ValueCase Command::value_case() const {
  return Command::ValueCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// Event_CommandResponse

// string clientMessageId = 1;
inline void Event_CommandResponse::clear_clientmessageid() {
  clientmessageid_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& Event_CommandResponse::clientmessageid() const {
  // @@protoc_insertion_point(field_get:io.stakenet.orderbook.protos.Event.CommandResponse.clientMessageId)
  return _internal_clientmessageid();
}
inline void Event_CommandResponse::set_clientmessageid(const std::string& value) {
  _internal_set_clientmessageid(value);
  // @@protoc_insertion_point(field_set:io.stakenet.orderbook.protos.Event.CommandResponse.clientMessageId)
}
inline std::string* Event_CommandResponse::mutable_clientmessageid() {
  // @@protoc_insertion_point(field_mutable:io.stakenet.orderbook.protos.Event.CommandResponse.clientMessageId)
  return _internal_mutable_clientmessageid();
}
inline const std::string& Event_CommandResponse::_internal_clientmessageid() const {
  return clientmessageid_.GetNoArena();
}
inline void Event_CommandResponse::_internal_set_clientmessageid(const std::string& value) {
  
  clientmessageid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void Event_CommandResponse::set_clientmessageid(std::string&& value) {
  
  clientmessageid_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:io.stakenet.orderbook.protos.Event.CommandResponse.clientMessageId)
}
inline void Event_CommandResponse::set_clientmessageid(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  clientmessageid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:io.stakenet.orderbook.protos.Event.CommandResponse.clientMessageId)
}
inline void Event_CommandResponse::set_clientmessageid(const char* value, size_t size) {
  
  clientmessageid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:io.stakenet.orderbook.protos.Event.CommandResponse.clientMessageId)
}
inline std::string* Event_CommandResponse::_internal_mutable_clientmessageid() {
  
  return clientmessageid_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* Event_CommandResponse::release_clientmessageid() {
  // @@protoc_insertion_point(field_release:io.stakenet.orderbook.protos.Event.CommandResponse.clientMessageId)
  
  return clientmessageid_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void Event_CommandResponse::set_allocated_clientmessageid(std::string* clientmessageid) {
  if (clientmessageid != nullptr) {
    
  } else {
    
  }
  clientmessageid_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), clientmessageid);
  // @@protoc_insertion_point(field_set_allocated:io.stakenet.orderbook.protos.Event.CommandResponse.clientMessageId)
}

// .io.stakenet.orderbook.protos.CommandFailed commandFailed = 2;
inline bool Event_CommandResponse::_internal_has_commandfailed() const {
  return value_case() == kCommandFailed;
}
inline bool Event_CommandResponse::has_commandfailed() const {
  return _internal_has_commandfailed();
}
inline void Event_CommandResponse::set_has_commandfailed() {
  _oneof_case_[0] = kCommandFailed;
}
inline ::io::stakenet::orderbook::protos::CommandFailed* Event_CommandResponse::release_commandfailed() {
  // @@protoc_insertion_point(field_release:io.stakenet.orderbook.protos.Event.CommandResponse.commandFailed)
  if (_internal_has_commandfailed()) {
    clear_has_value();
      ::io::stakenet::orderbook::protos::CommandFailed* temp = value_.commandfailed_;
    value_.commandfailed_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::io::stakenet::orderbook::protos::CommandFailed& Event_CommandResponse::_internal_commandfailed() const {
  return _internal_has_commandfailed()
      ? *value_.commandfailed_
      : *reinterpret_cast< ::io::stakenet::orderbook::protos::CommandFailed*>(&::io::stakenet::orderbook::protos::_CommandFailed_default_instance_);
}
inline const ::io::stakenet::orderbook::protos::CommandFailed& Event_CommandResponse::commandfailed() const {
  // @@protoc_insertion_point(field_get:io.stakenet.orderbook.protos.Event.CommandResponse.commandFailed)
  return _internal_commandfailed();
}
inline ::io::stakenet::orderbook::protos::CommandFailed* Event_CommandResponse::_internal_mutable_commandfailed() {
  if (!_internal_has_commandfailed()) {
    clear_value();
    set_has_commandfailed();
    value_.commandfailed_ = CreateMaybeMessage< ::io::stakenet::orderbook::protos::CommandFailed >(
        GetArenaNoVirtual());
  }
  return value_.commandfailed_;
}
inline ::io::stakenet::orderbook::protos::CommandFailed* Event_CommandResponse::mutable_commandfailed() {
  // @@protoc_insertion_point(field_mutable:io.stakenet.orderbook.protos.Event.CommandResponse.commandFailed)
  return _internal_mutable_commandfailed();
}

// .io.stakenet.orderbook.protos.PingResponse pingResponse = 3;
inline bool Event_CommandResponse::_internal_has_pingresponse() const {
  return value_case() == kPingResponse;
}
inline bool Event_CommandResponse::has_pingresponse() const {
  return _internal_has_pingresponse();
}
inline void Event_CommandResponse::set_has_pingresponse() {
  _oneof_case_[0] = kPingResponse;
}
inline ::io::stakenet::orderbook::protos::PingResponse* Event_CommandResponse::release_pingresponse() {
  // @@protoc_insertion_point(field_release:io.stakenet.orderbook.protos.Event.CommandResponse.pingResponse)
  if (_internal_has_pingresponse()) {
    clear_has_value();
      ::io::stakenet::orderbook::protos::PingResponse* temp = value_.pingresponse_;
    value_.pingresponse_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::io::stakenet::orderbook::protos::PingResponse& Event_CommandResponse::_internal_pingresponse() const {
  return _internal_has_pingresponse()
      ? *value_.pingresponse_
      : *reinterpret_cast< ::io::stakenet::orderbook::protos::PingResponse*>(&::io::stakenet::orderbook::protos::_PingResponse_default_instance_);
}
inline const ::io::stakenet::orderbook::protos::PingResponse& Event_CommandResponse::pingresponse() const {
  // @@protoc_insertion_point(field_get:io.stakenet.orderbook.protos.Event.CommandResponse.pingResponse)
  return _internal_pingresponse();
}
inline ::io::stakenet::orderbook::protos::PingResponse* Event_CommandResponse::_internal_mutable_pingresponse() {
  if (!_internal_has_pingresponse()) {
    clear_value();
    set_has_pingresponse();
    value_.pingresponse_ = CreateMaybeMessage< ::io::stakenet::orderbook::protos::PingResponse >(
        GetArenaNoVirtual());
  }
  return value_.pingresponse_;
}
inline ::io::stakenet::orderbook::protos::PingResponse* Event_CommandResponse::mutable_pingresponse() {
  // @@protoc_insertion_point(field_mutable:io.stakenet.orderbook.protos.Event.CommandResponse.pingResponse)
  return _internal_mutable_pingresponse();
}

// .io.stakenet.orderbook.protos.GetTradingPairsResponse getTradingPairsResponse = 4;
inline bool Event_CommandResponse::_internal_has_gettradingpairsresponse() const {
  return value_case() == kGetTradingPairsResponse;
}
inline bool Event_CommandResponse::has_gettradingpairsresponse() const {
  return _internal_has_gettradingpairsresponse();
}
inline void Event_CommandResponse::set_has_gettradingpairsresponse() {
  _oneof_case_[0] = kGetTradingPairsResponse;
}
inline ::io::stakenet::orderbook::protos::GetTradingPairsResponse* Event_CommandResponse::release_gettradingpairsresponse() {
  // @@protoc_insertion_point(field_release:io.stakenet.orderbook.protos.Event.CommandResponse.getTradingPairsResponse)
  if (_internal_has_gettradingpairsresponse()) {
    clear_has_value();
      ::io::stakenet::orderbook::protos::GetTradingPairsResponse* temp = value_.gettradingpairsresponse_;
    value_.gettradingpairsresponse_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::io::stakenet::orderbook::protos::GetTradingPairsResponse& Event_CommandResponse::_internal_gettradingpairsresponse() const {
  return _internal_has_gettradingpairsresponse()
      ? *value_.gettradingpairsresponse_
      : *reinterpret_cast< ::io::stakenet::orderbook::protos::GetTradingPairsResponse*>(&::io::stakenet::orderbook::protos::_GetTradingPairsResponse_default_instance_);
}
inline const ::io::stakenet::orderbook::protos::GetTradingPairsResponse& Event_CommandResponse::gettradingpairsresponse() const {
  // @@protoc_insertion_point(field_get:io.stakenet.orderbook.protos.Event.CommandResponse.getTradingPairsResponse)
  return _internal_gettradingpairsresponse();
}
inline ::io::stakenet::orderbook::protos::GetTradingPairsResponse* Event_CommandResponse::_internal_mutable_gettradingpairsresponse() {
  if (!_internal_has_gettradingpairsresponse()) {
    clear_value();
    set_has_gettradingpairsresponse();
    value_.gettradingpairsresponse_ = CreateMaybeMessage< ::io::stakenet::orderbook::protos::GetTradingPairsResponse >(
        GetArenaNoVirtual());
  }
  return value_.gettradingpairsresponse_;
}
inline ::io::stakenet::orderbook::protos::GetTradingPairsResponse* Event_CommandResponse::mutable_gettradingpairsresponse() {
  // @@protoc_insertion_point(field_mutable:io.stakenet.orderbook.protos.Event.CommandResponse.getTradingPairsResponse)
  return _internal_mutable_gettradingpairsresponse();
}

// .io.stakenet.orderbook.protos.SubscribeResponse subscribeResponse = 5;
inline bool Event_CommandResponse::_internal_has_subscriberesponse() const {
  return value_case() == kSubscribeResponse;
}
inline bool Event_CommandResponse::has_subscriberesponse() const {
  return _internal_has_subscriberesponse();
}
inline void Event_CommandResponse::set_has_subscriberesponse() {
  _oneof_case_[0] = kSubscribeResponse;
}
inline ::io::stakenet::orderbook::protos::SubscribeResponse* Event_CommandResponse::release_subscriberesponse() {
  // @@protoc_insertion_point(field_release:io.stakenet.orderbook.protos.Event.CommandResponse.subscribeResponse)
  if (_internal_has_subscriberesponse()) {
    clear_has_value();
      ::io::stakenet::orderbook::protos::SubscribeResponse* temp = value_.subscriberesponse_;
    value_.subscriberesponse_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::io::stakenet::orderbook::protos::SubscribeResponse& Event_CommandResponse::_internal_subscriberesponse() const {
  return _internal_has_subscriberesponse()
      ? *value_.subscriberesponse_
      : *reinterpret_cast< ::io::stakenet::orderbook::protos::SubscribeResponse*>(&::io::stakenet::orderbook::protos::_SubscribeResponse_default_instance_);
}
inline const ::io::stakenet::orderbook::protos::SubscribeResponse& Event_CommandResponse::subscriberesponse() const {
  // @@protoc_insertion_point(field_get:io.stakenet.orderbook.protos.Event.CommandResponse.subscribeResponse)
  return _internal_subscriberesponse();
}
inline ::io::stakenet::orderbook::protos::SubscribeResponse* Event_CommandResponse::_internal_mutable_subscriberesponse() {
  if (!_internal_has_subscriberesponse()) {
    clear_value();
    set_has_subscriberesponse();
    value_.subscriberesponse_ = CreateMaybeMessage< ::io::stakenet::orderbook::protos::SubscribeResponse >(
        GetArenaNoVirtual());
  }
  return value_.subscriberesponse_;
}
inline ::io::stakenet::orderbook::protos::SubscribeResponse* Event_CommandResponse::mutable_subscriberesponse() {
  // @@protoc_insertion_point(field_mutable:io.stakenet.orderbook.protos.Event.CommandResponse.subscribeResponse)
  return _internal_mutable_subscriberesponse();
}

// .io.stakenet.orderbook.protos.UnsubscribeResponse unsubscribeResponse = 6;
inline bool Event_CommandResponse::_internal_has_unsubscriberesponse() const {
  return value_case() == kUnsubscribeResponse;
}
inline bool Event_CommandResponse::has_unsubscriberesponse() const {
  return _internal_has_unsubscriberesponse();
}
inline void Event_CommandResponse::set_has_unsubscriberesponse() {
  _oneof_case_[0] = kUnsubscribeResponse;
}
inline ::io::stakenet::orderbook::protos::UnsubscribeResponse* Event_CommandResponse::release_unsubscriberesponse() {
  // @@protoc_insertion_point(field_release:io.stakenet.orderbook.protos.Event.CommandResponse.unsubscribeResponse)
  if (_internal_has_unsubscriberesponse()) {
    clear_has_value();
      ::io::stakenet::orderbook::protos::UnsubscribeResponse* temp = value_.unsubscriberesponse_;
    value_.unsubscriberesponse_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::io::stakenet::orderbook::protos::UnsubscribeResponse& Event_CommandResponse::_internal_unsubscriberesponse() const {
  return _internal_has_unsubscriberesponse()
      ? *value_.unsubscriberesponse_
      : *reinterpret_cast< ::io::stakenet::orderbook::protos::UnsubscribeResponse*>(&::io::stakenet::orderbook::protos::_UnsubscribeResponse_default_instance_);
}
inline const ::io::stakenet::orderbook::protos::UnsubscribeResponse& Event_CommandResponse::unsubscriberesponse() const {
  // @@protoc_insertion_point(field_get:io.stakenet.orderbook.protos.Event.CommandResponse.unsubscribeResponse)
  return _internal_unsubscriberesponse();
}
inline ::io::stakenet::orderbook::protos::UnsubscribeResponse* Event_CommandResponse::_internal_mutable_unsubscriberesponse() {
  if (!_internal_has_unsubscriberesponse()) {
    clear_value();
    set_has_unsubscriberesponse();
    value_.unsubscriberesponse_ = CreateMaybeMessage< ::io::stakenet::orderbook::protos::UnsubscribeResponse >(
        GetArenaNoVirtual());
  }
  return value_.unsubscriberesponse_;
}
inline ::io::stakenet::orderbook::protos::UnsubscribeResponse* Event_CommandResponse::mutable_unsubscriberesponse() {
  // @@protoc_insertion_point(field_mutable:io.stakenet.orderbook.protos.Event.CommandResponse.unsubscribeResponse)
  return _internal_mutable_unsubscriberesponse();
}

// .io.stakenet.orderbook.protos.GetOpenOrdersResponse getOpenOrdersResponse = 7;
inline bool Event_CommandResponse::_internal_has_getopenordersresponse() const {
  return value_case() == kGetOpenOrdersResponse;
}
inline bool Event_CommandResponse::has_getopenordersresponse() const {
  return _internal_has_getopenordersresponse();
}
inline void Event_CommandResponse::set_has_getopenordersresponse() {
  _oneof_case_[0] = kGetOpenOrdersResponse;
}
inline ::io::stakenet::orderbook::protos::GetOpenOrdersResponse* Event_CommandResponse::release_getopenordersresponse() {
  // @@protoc_insertion_point(field_release:io.stakenet.orderbook.protos.Event.CommandResponse.getOpenOrdersResponse)
  if (_internal_has_getopenordersresponse()) {
    clear_has_value();
      ::io::stakenet::orderbook::protos::GetOpenOrdersResponse* temp = value_.getopenordersresponse_;
    value_.getopenordersresponse_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::io::stakenet::orderbook::protos::GetOpenOrdersResponse& Event_CommandResponse::_internal_getopenordersresponse() const {
  return _internal_has_getopenordersresponse()
      ? *value_.getopenordersresponse_
      : *reinterpret_cast< ::io::stakenet::orderbook::protos::GetOpenOrdersResponse*>(&::io::stakenet::orderbook::protos::_GetOpenOrdersResponse_default_instance_);
}
inline const ::io::stakenet::orderbook::protos::GetOpenOrdersResponse& Event_CommandResponse::getopenordersresponse() const {
  // @@protoc_insertion_point(field_get:io.stakenet.orderbook.protos.Event.CommandResponse.getOpenOrdersResponse)
  return _internal_getopenordersresponse();
}
inline ::io::stakenet::orderbook::protos::GetOpenOrdersResponse* Event_CommandResponse::_internal_mutable_getopenordersresponse() {
  if (!_internal_has_getopenordersresponse()) {
    clear_value();
    set_has_getopenordersresponse();
    value_.getopenordersresponse_ = CreateMaybeMessage< ::io::stakenet::orderbook::protos::GetOpenOrdersResponse >(
        GetArenaNoVirtual());
  }
  return value_.getopenordersresponse_;
}
inline ::io::stakenet::orderbook::protos::GetOpenOrdersResponse* Event_CommandResponse::mutable_getopenordersresponse() {
  // @@protoc_insertion_point(field_mutable:io.stakenet.orderbook.protos.Event.CommandResponse.getOpenOrdersResponse)
  return _internal_mutable_getopenordersresponse();
}

// .io.stakenet.orderbook.protos.GetHistoricTradesResponse getHistoricTradesResponse = 8;
inline bool Event_CommandResponse::_internal_has_gethistorictradesresponse() const {
  return value_case() == kGetHistoricTradesResponse;
}
inline bool Event_CommandResponse::has_gethistorictradesresponse() const {
  return _internal_has_gethistorictradesresponse();
}
inline void Event_CommandResponse::set_has_gethistorictradesresponse() {
  _oneof_case_[0] = kGetHistoricTradesResponse;
}
inline ::io::stakenet::orderbook::protos::GetHistoricTradesResponse* Event_CommandResponse::release_gethistorictradesresponse() {
  // @@protoc_insertion_point(field_release:io.stakenet.orderbook.protos.Event.CommandResponse.getHistoricTradesResponse)
  if (_internal_has_gethistorictradesresponse()) {
    clear_has_value();
      ::io::stakenet::orderbook::protos::GetHistoricTradesResponse* temp = value_.gethistorictradesresponse_;
    value_.gethistorictradesresponse_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::io::stakenet::orderbook::protos::GetHistoricTradesResponse& Event_CommandResponse::_internal_gethistorictradesresponse() const {
  return _internal_has_gethistorictradesresponse()
      ? *value_.gethistorictradesresponse_
      : *reinterpret_cast< ::io::stakenet::orderbook::protos::GetHistoricTradesResponse*>(&::io::stakenet::orderbook::protos::_GetHistoricTradesResponse_default_instance_);
}
inline const ::io::stakenet::orderbook::protos::GetHistoricTradesResponse& Event_CommandResponse::gethistorictradesresponse() const {
  // @@protoc_insertion_point(field_get:io.stakenet.orderbook.protos.Event.CommandResponse.getHistoricTradesResponse)
  return _internal_gethistorictradesresponse();
}
inline ::io::stakenet::orderbook::protos::GetHistoricTradesResponse* Event_CommandResponse::_internal_mutable_gethistorictradesresponse() {
  if (!_internal_has_gethistorictradesresponse()) {
    clear_value();
    set_has_gethistorictradesresponse();
    value_.gethistorictradesresponse_ = CreateMaybeMessage< ::io::stakenet::orderbook::protos::GetHistoricTradesResponse >(
        GetArenaNoVirtual());
  }
  return value_.gethistorictradesresponse_;
}
inline ::io::stakenet::orderbook::protos::GetHistoricTradesResponse* Event_CommandResponse::mutable_gethistorictradesresponse() {
  // @@protoc_insertion_point(field_mutable:io.stakenet.orderbook.protos.Event.CommandResponse.getHistoricTradesResponse)
  return _internal_mutable_gethistorictradesresponse();
}

// .io.stakenet.orderbook.protos.GetBarsPricesResponse getBarsPricesResponse = 9;
inline bool Event_CommandResponse::_internal_has_getbarspricesresponse() const {
  return value_case() == kGetBarsPricesResponse;
}
inline bool Event_CommandResponse::has_getbarspricesresponse() const {
  return _internal_has_getbarspricesresponse();
}
inline void Event_CommandResponse::set_has_getbarspricesresponse() {
  _oneof_case_[0] = kGetBarsPricesResponse;
}
inline ::io::stakenet::orderbook::protos::GetBarsPricesResponse* Event_CommandResponse::release_getbarspricesresponse() {
  // @@protoc_insertion_point(field_release:io.stakenet.orderbook.protos.Event.CommandResponse.getBarsPricesResponse)
  if (_internal_has_getbarspricesresponse()) {
    clear_has_value();
      ::io::stakenet::orderbook::protos::GetBarsPricesResponse* temp = value_.getbarspricesresponse_;
    value_.getbarspricesresponse_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::io::stakenet::orderbook::protos::GetBarsPricesResponse& Event_CommandResponse::_internal_getbarspricesresponse() const {
  return _internal_has_getbarspricesresponse()
      ? *value_.getbarspricesresponse_
      : *reinterpret_cast< ::io::stakenet::orderbook::protos::GetBarsPricesResponse*>(&::io::stakenet::orderbook::protos::_GetBarsPricesResponse_default_instance_);
}
inline const ::io::stakenet::orderbook::protos::GetBarsPricesResponse& Event_CommandResponse::getbarspricesresponse() const {
  // @@protoc_insertion_point(field_get:io.stakenet.orderbook.protos.Event.CommandResponse.getBarsPricesResponse)
  return _internal_getbarspricesresponse();
}
inline ::io::stakenet::orderbook::protos::GetBarsPricesResponse* Event_CommandResponse::_internal_mutable_getbarspricesresponse() {
  if (!_internal_has_getbarspricesresponse()) {
    clear_value();
    set_has_getbarspricesresponse();
    value_.getbarspricesresponse_ = CreateMaybeMessage< ::io::stakenet::orderbook::protos::GetBarsPricesResponse >(
        GetArenaNoVirtual());
  }
  return value_.getbarspricesresponse_;
}
inline ::io::stakenet::orderbook::protos::GetBarsPricesResponse* Event_CommandResponse::mutable_getbarspricesresponse() {
  // @@protoc_insertion_point(field_mutable:io.stakenet.orderbook.protos.Event.CommandResponse.getBarsPricesResponse)
  return _internal_mutable_getbarspricesresponse();
}

// .io.stakenet.orderbook.protos.PlaceOrderResponse placeOrderResponse = 10;
inline bool Event_CommandResponse::_internal_has_placeorderresponse() const {
  return value_case() == kPlaceOrderResponse;
}
inline bool Event_CommandResponse::has_placeorderresponse() const {
  return _internal_has_placeorderresponse();
}
inline void Event_CommandResponse::set_has_placeorderresponse() {
  _oneof_case_[0] = kPlaceOrderResponse;
}
inline ::io::stakenet::orderbook::protos::PlaceOrderResponse* Event_CommandResponse::release_placeorderresponse() {
  // @@protoc_insertion_point(field_release:io.stakenet.orderbook.protos.Event.CommandResponse.placeOrderResponse)
  if (_internal_has_placeorderresponse()) {
    clear_has_value();
      ::io::stakenet::orderbook::protos::PlaceOrderResponse* temp = value_.placeorderresponse_;
    value_.placeorderresponse_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::io::stakenet::orderbook::protos::PlaceOrderResponse& Event_CommandResponse::_internal_placeorderresponse() const {
  return _internal_has_placeorderresponse()
      ? *value_.placeorderresponse_
      : *reinterpret_cast< ::io::stakenet::orderbook::protos::PlaceOrderResponse*>(&::io::stakenet::orderbook::protos::_PlaceOrderResponse_default_instance_);
}
inline const ::io::stakenet::orderbook::protos::PlaceOrderResponse& Event_CommandResponse::placeorderresponse() const {
  // @@protoc_insertion_point(field_get:io.stakenet.orderbook.protos.Event.CommandResponse.placeOrderResponse)
  return _internal_placeorderresponse();
}
inline ::io::stakenet::orderbook::protos::PlaceOrderResponse* Event_CommandResponse::_internal_mutable_placeorderresponse() {
  if (!_internal_has_placeorderresponse()) {
    clear_value();
    set_has_placeorderresponse();
    value_.placeorderresponse_ = CreateMaybeMessage< ::io::stakenet::orderbook::protos::PlaceOrderResponse >(
        GetArenaNoVirtual());
  }
  return value_.placeorderresponse_;
}
inline ::io::stakenet::orderbook::protos::PlaceOrderResponse* Event_CommandResponse::mutable_placeorderresponse() {
  // @@protoc_insertion_point(field_mutable:io.stakenet.orderbook.protos.Event.CommandResponse.placeOrderResponse)
  return _internal_mutable_placeorderresponse();
}

// .io.stakenet.orderbook.protos.GetOpenOrderByIdResponse getOpenOrderByIdResponse = 11;
inline bool Event_CommandResponse::_internal_has_getopenorderbyidresponse() const {
  return value_case() == kGetOpenOrderByIdResponse;
}
inline bool Event_CommandResponse::has_getopenorderbyidresponse() const {
  return _internal_has_getopenorderbyidresponse();
}
inline void Event_CommandResponse::set_has_getopenorderbyidresponse() {
  _oneof_case_[0] = kGetOpenOrderByIdResponse;
}
inline ::io::stakenet::orderbook::protos::GetOpenOrderByIdResponse* Event_CommandResponse::release_getopenorderbyidresponse() {
  // @@protoc_insertion_point(field_release:io.stakenet.orderbook.protos.Event.CommandResponse.getOpenOrderByIdResponse)
  if (_internal_has_getopenorderbyidresponse()) {
    clear_has_value();
      ::io::stakenet::orderbook::protos::GetOpenOrderByIdResponse* temp = value_.getopenorderbyidresponse_;
    value_.getopenorderbyidresponse_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::io::stakenet::orderbook::protos::GetOpenOrderByIdResponse& Event_CommandResponse::_internal_getopenorderbyidresponse() const {
  return _internal_has_getopenorderbyidresponse()
      ? *value_.getopenorderbyidresponse_
      : *reinterpret_cast< ::io::stakenet::orderbook::protos::GetOpenOrderByIdResponse*>(&::io::stakenet::orderbook::protos::_GetOpenOrderByIdResponse_default_instance_);
}
inline const ::io::stakenet::orderbook::protos::GetOpenOrderByIdResponse& Event_CommandResponse::getopenorderbyidresponse() const {
  // @@protoc_insertion_point(field_get:io.stakenet.orderbook.protos.Event.CommandResponse.getOpenOrderByIdResponse)
  return _internal_getopenorderbyidresponse();
}
inline ::io::stakenet::orderbook::protos::GetOpenOrderByIdResponse* Event_CommandResponse::_internal_mutable_getopenorderbyidresponse() {
  if (!_internal_has_getopenorderbyidresponse()) {
    clear_value();
    set_has_getopenorderbyidresponse();
    value_.getopenorderbyidresponse_ = CreateMaybeMessage< ::io::stakenet::orderbook::protos::GetOpenOrderByIdResponse >(
        GetArenaNoVirtual());
  }
  return value_.getopenorderbyidresponse_;
}
inline ::io::stakenet::orderbook::protos::GetOpenOrderByIdResponse* Event_CommandResponse::mutable_getopenorderbyidresponse() {
  // @@protoc_insertion_point(field_mutable:io.stakenet.orderbook.protos.Event.CommandResponse.getOpenOrderByIdResponse)
  return _internal_mutable_getopenorderbyidresponse();
}

// .io.stakenet.orderbook.protos.CancelOpenOrderResponse cancelOrderResponse = 12;
inline bool Event_CommandResponse::_internal_has_cancelorderresponse() const {
  return value_case() == kCancelOrderResponse;
}
inline bool Event_CommandResponse::has_cancelorderresponse() const {
  return _internal_has_cancelorderresponse();
}
inline void Event_CommandResponse::set_has_cancelorderresponse() {
  _oneof_case_[0] = kCancelOrderResponse;
}
inline ::io::stakenet::orderbook::protos::CancelOpenOrderResponse* Event_CommandResponse::release_cancelorderresponse() {
  // @@protoc_insertion_point(field_release:io.stakenet.orderbook.protos.Event.CommandResponse.cancelOrderResponse)
  if (_internal_has_cancelorderresponse()) {
    clear_has_value();
      ::io::stakenet::orderbook::protos::CancelOpenOrderResponse* temp = value_.cancelorderresponse_;
    value_.cancelorderresponse_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::io::stakenet::orderbook::protos::CancelOpenOrderResponse& Event_CommandResponse::_internal_cancelorderresponse() const {
  return _internal_has_cancelorderresponse()
      ? *value_.cancelorderresponse_
      : *reinterpret_cast< ::io::stakenet::orderbook::protos::CancelOpenOrderResponse*>(&::io::stakenet::orderbook::protos::_CancelOpenOrderResponse_default_instance_);
}
inline const ::io::stakenet::orderbook::protos::CancelOpenOrderResponse& Event_CommandResponse::cancelorderresponse() const {
  // @@protoc_insertion_point(field_get:io.stakenet.orderbook.protos.Event.CommandResponse.cancelOrderResponse)
  return _internal_cancelorderresponse();
}
inline ::io::stakenet::orderbook::protos::CancelOpenOrderResponse* Event_CommandResponse::_internal_mutable_cancelorderresponse() {
  if (!_internal_has_cancelorderresponse()) {
    clear_value();
    set_has_cancelorderresponse();
    value_.cancelorderresponse_ = CreateMaybeMessage< ::io::stakenet::orderbook::protos::CancelOpenOrderResponse >(
        GetArenaNoVirtual());
  }
  return value_.cancelorderresponse_;
}
inline ::io::stakenet::orderbook::protos::CancelOpenOrderResponse* Event_CommandResponse::mutable_cancelorderresponse() {
  // @@protoc_insertion_point(field_mutable:io.stakenet.orderbook.protos.Event.CommandResponse.cancelOrderResponse)
  return _internal_mutable_cancelorderresponse();
}

// .io.stakenet.orderbook.protos.CancelMatchedOrderResponse cancelMatchedOrderResponse = 13;
inline bool Event_CommandResponse::_internal_has_cancelmatchedorderresponse() const {
  return value_case() == kCancelMatchedOrderResponse;
}
inline bool Event_CommandResponse::has_cancelmatchedorderresponse() const {
  return _internal_has_cancelmatchedorderresponse();
}
inline void Event_CommandResponse::set_has_cancelmatchedorderresponse() {
  _oneof_case_[0] = kCancelMatchedOrderResponse;
}
inline ::io::stakenet::orderbook::protos::CancelMatchedOrderResponse* Event_CommandResponse::release_cancelmatchedorderresponse() {
  // @@protoc_insertion_point(field_release:io.stakenet.orderbook.protos.Event.CommandResponse.cancelMatchedOrderResponse)
  if (_internal_has_cancelmatchedorderresponse()) {
    clear_has_value();
      ::io::stakenet::orderbook::protos::CancelMatchedOrderResponse* temp = value_.cancelmatchedorderresponse_;
    value_.cancelmatchedorderresponse_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::io::stakenet::orderbook::protos::CancelMatchedOrderResponse& Event_CommandResponse::_internal_cancelmatchedorderresponse() const {
  return _internal_has_cancelmatchedorderresponse()
      ? *value_.cancelmatchedorderresponse_
      : *reinterpret_cast< ::io::stakenet::orderbook::protos::CancelMatchedOrderResponse*>(&::io::stakenet::orderbook::protos::_CancelMatchedOrderResponse_default_instance_);
}
inline const ::io::stakenet::orderbook::protos::CancelMatchedOrderResponse& Event_CommandResponse::cancelmatchedorderresponse() const {
  // @@protoc_insertion_point(field_get:io.stakenet.orderbook.protos.Event.CommandResponse.cancelMatchedOrderResponse)
  return _internal_cancelmatchedorderresponse();
}
inline ::io::stakenet::orderbook::protos::CancelMatchedOrderResponse* Event_CommandResponse::_internal_mutable_cancelmatchedorderresponse() {
  if (!_internal_has_cancelmatchedorderresponse()) {
    clear_value();
    set_has_cancelmatchedorderresponse();
    value_.cancelmatchedorderresponse_ = CreateMaybeMessage< ::io::stakenet::orderbook::protos::CancelMatchedOrderResponse >(
        GetArenaNoVirtual());
  }
  return value_.cancelmatchedorderresponse_;
}
inline ::io::stakenet::orderbook::protos::CancelMatchedOrderResponse* Event_CommandResponse::mutable_cancelmatchedorderresponse() {
  // @@protoc_insertion_point(field_mutable:io.stakenet.orderbook.protos.Event.CommandResponse.cancelMatchedOrderResponse)
  return _internal_mutable_cancelmatchedorderresponse();
}

// .io.stakenet.orderbook.protos.SendOrderMessageResponse sendOrderMessageResponse = 14;
inline bool Event_CommandResponse::_internal_has_sendordermessageresponse() const {
  return value_case() == kSendOrderMessageResponse;
}
inline bool Event_CommandResponse::has_sendordermessageresponse() const {
  return _internal_has_sendordermessageresponse();
}
inline void Event_CommandResponse::set_has_sendordermessageresponse() {
  _oneof_case_[0] = kSendOrderMessageResponse;
}
inline ::io::stakenet::orderbook::protos::SendOrderMessageResponse* Event_CommandResponse::release_sendordermessageresponse() {
  // @@protoc_insertion_point(field_release:io.stakenet.orderbook.protos.Event.CommandResponse.sendOrderMessageResponse)
  if (_internal_has_sendordermessageresponse()) {
    clear_has_value();
      ::io::stakenet::orderbook::protos::SendOrderMessageResponse* temp = value_.sendordermessageresponse_;
    value_.sendordermessageresponse_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::io::stakenet::orderbook::protos::SendOrderMessageResponse& Event_CommandResponse::_internal_sendordermessageresponse() const {
  return _internal_has_sendordermessageresponse()
      ? *value_.sendordermessageresponse_
      : *reinterpret_cast< ::io::stakenet::orderbook::protos::SendOrderMessageResponse*>(&::io::stakenet::orderbook::protos::_SendOrderMessageResponse_default_instance_);
}
inline const ::io::stakenet::orderbook::protos::SendOrderMessageResponse& Event_CommandResponse::sendordermessageresponse() const {
  // @@protoc_insertion_point(field_get:io.stakenet.orderbook.protos.Event.CommandResponse.sendOrderMessageResponse)
  return _internal_sendordermessageresponse();
}
inline ::io::stakenet::orderbook::protos::SendOrderMessageResponse* Event_CommandResponse::_internal_mutable_sendordermessageresponse() {
  if (!_internal_has_sendordermessageresponse()) {
    clear_value();
    set_has_sendordermessageresponse();
    value_.sendordermessageresponse_ = CreateMaybeMessage< ::io::stakenet::orderbook::protos::SendOrderMessageResponse >(
        GetArenaNoVirtual());
  }
  return value_.sendordermessageresponse_;
}
inline ::io::stakenet::orderbook::protos::SendOrderMessageResponse* Event_CommandResponse::mutable_sendordermessageresponse() {
  // @@protoc_insertion_point(field_mutable:io.stakenet.orderbook.protos.Event.CommandResponse.sendOrderMessageResponse)
  return _internal_mutable_sendordermessageresponse();
}

// .io.stakenet.orderbook.protos.CleanTradingPairOrdersResponse cleanTradingPairOrdersResponse = 15;
inline bool Event_CommandResponse::_internal_has_cleantradingpairordersresponse() const {
  return value_case() == kCleanTradingPairOrdersResponse;
}
inline bool Event_CommandResponse::has_cleantradingpairordersresponse() const {
  return _internal_has_cleantradingpairordersresponse();
}
inline void Event_CommandResponse::set_has_cleantradingpairordersresponse() {
  _oneof_case_[0] = kCleanTradingPairOrdersResponse;
}
inline ::io::stakenet::orderbook::protos::CleanTradingPairOrdersResponse* Event_CommandResponse::release_cleantradingpairordersresponse() {
  // @@protoc_insertion_point(field_release:io.stakenet.orderbook.protos.Event.CommandResponse.cleanTradingPairOrdersResponse)
  if (_internal_has_cleantradingpairordersresponse()) {
    clear_has_value();
      ::io::stakenet::orderbook::protos::CleanTradingPairOrdersResponse* temp = value_.cleantradingpairordersresponse_;
    value_.cleantradingpairordersresponse_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::io::stakenet::orderbook::protos::CleanTradingPairOrdersResponse& Event_CommandResponse::_internal_cleantradingpairordersresponse() const {
  return _internal_has_cleantradingpairordersresponse()
      ? *value_.cleantradingpairordersresponse_
      : *reinterpret_cast< ::io::stakenet::orderbook::protos::CleanTradingPairOrdersResponse*>(&::io::stakenet::orderbook::protos::_CleanTradingPairOrdersResponse_default_instance_);
}
inline const ::io::stakenet::orderbook::protos::CleanTradingPairOrdersResponse& Event_CommandResponse::cleantradingpairordersresponse() const {
  // @@protoc_insertion_point(field_get:io.stakenet.orderbook.protos.Event.CommandResponse.cleanTradingPairOrdersResponse)
  return _internal_cleantradingpairordersresponse();
}
inline ::io::stakenet::orderbook::protos::CleanTradingPairOrdersResponse* Event_CommandResponse::_internal_mutable_cleantradingpairordersresponse() {
  if (!_internal_has_cleantradingpairordersresponse()) {
    clear_value();
    set_has_cleantradingpairordersresponse();
    value_.cleantradingpairordersresponse_ = CreateMaybeMessage< ::io::stakenet::orderbook::protos::CleanTradingPairOrdersResponse >(
        GetArenaNoVirtual());
  }
  return value_.cleantradingpairordersresponse_;
}
inline ::io::stakenet::orderbook::protos::CleanTradingPairOrdersResponse* Event_CommandResponse::mutable_cleantradingpairordersresponse() {
  // @@protoc_insertion_point(field_mutable:io.stakenet.orderbook.protos.Event.CommandResponse.cleanTradingPairOrdersResponse)
  return _internal_mutable_cleantradingpairordersresponse();
}

// .io.stakenet.orderbook.protos.GetLndPaymentInvoiceResponse getLndPaymentInvoiceResponse = 16;
inline bool Event_CommandResponse::_internal_has_getlndpaymentinvoiceresponse() const {
  return value_case() == kGetLndPaymentInvoiceResponse;
}
inline bool Event_CommandResponse::has_getlndpaymentinvoiceresponse() const {
  return _internal_has_getlndpaymentinvoiceresponse();
}
inline void Event_CommandResponse::set_has_getlndpaymentinvoiceresponse() {
  _oneof_case_[0] = kGetLndPaymentInvoiceResponse;
}
inline ::io::stakenet::orderbook::protos::GetLndPaymentInvoiceResponse* Event_CommandResponse::release_getlndpaymentinvoiceresponse() {
  // @@protoc_insertion_point(field_release:io.stakenet.orderbook.protos.Event.CommandResponse.getLndPaymentInvoiceResponse)
  if (_internal_has_getlndpaymentinvoiceresponse()) {
    clear_has_value();
      ::io::stakenet::orderbook::protos::GetLndPaymentInvoiceResponse* temp = value_.getlndpaymentinvoiceresponse_;
    value_.getlndpaymentinvoiceresponse_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::io::stakenet::orderbook::protos::GetLndPaymentInvoiceResponse& Event_CommandResponse::_internal_getlndpaymentinvoiceresponse() const {
  return _internal_has_getlndpaymentinvoiceresponse()
      ? *value_.getlndpaymentinvoiceresponse_
      : *reinterpret_cast< ::io::stakenet::orderbook::protos::GetLndPaymentInvoiceResponse*>(&::io::stakenet::orderbook::protos::_GetLndPaymentInvoiceResponse_default_instance_);
}
inline const ::io::stakenet::orderbook::protos::GetLndPaymentInvoiceResponse& Event_CommandResponse::getlndpaymentinvoiceresponse() const {
  // @@protoc_insertion_point(field_get:io.stakenet.orderbook.protos.Event.CommandResponse.getLndPaymentInvoiceResponse)
  return _internal_getlndpaymentinvoiceresponse();
}
inline ::io::stakenet::orderbook::protos::GetLndPaymentInvoiceResponse* Event_CommandResponse::_internal_mutable_getlndpaymentinvoiceresponse() {
  if (!_internal_has_getlndpaymentinvoiceresponse()) {
    clear_value();
    set_has_getlndpaymentinvoiceresponse();
    value_.getlndpaymentinvoiceresponse_ = CreateMaybeMessage< ::io::stakenet::orderbook::protos::GetLndPaymentInvoiceResponse >(
        GetArenaNoVirtual());
  }
  return value_.getlndpaymentinvoiceresponse_;
}
inline ::io::stakenet::orderbook::protos::GetLndPaymentInvoiceResponse* Event_CommandResponse::mutable_getlndpaymentinvoiceresponse() {
  // @@protoc_insertion_point(field_mutable:io.stakenet.orderbook.protos.Event.CommandResponse.getLndPaymentInvoiceResponse)
  return _internal_mutable_getlndpaymentinvoiceresponse();
}

// .io.stakenet.orderbook.protos.GenerateInvoiceToRentChannelResponse generateInvoiceToRentChannelResponse = 17;
inline bool Event_CommandResponse::_internal_has_generateinvoicetorentchannelresponse() const {
  return value_case() == kGenerateInvoiceToRentChannelResponse;
}
inline bool Event_CommandResponse::has_generateinvoicetorentchannelresponse() const {
  return _internal_has_generateinvoicetorentchannelresponse();
}
inline void Event_CommandResponse::set_has_generateinvoicetorentchannelresponse() {
  _oneof_case_[0] = kGenerateInvoiceToRentChannelResponse;
}
inline ::io::stakenet::orderbook::protos::GenerateInvoiceToRentChannelResponse* Event_CommandResponse::release_generateinvoicetorentchannelresponse() {
  // @@protoc_insertion_point(field_release:io.stakenet.orderbook.protos.Event.CommandResponse.generateInvoiceToRentChannelResponse)
  if (_internal_has_generateinvoicetorentchannelresponse()) {
    clear_has_value();
      ::io::stakenet::orderbook::protos::GenerateInvoiceToRentChannelResponse* temp = value_.generateinvoicetorentchannelresponse_;
    value_.generateinvoicetorentchannelresponse_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::io::stakenet::orderbook::protos::GenerateInvoiceToRentChannelResponse& Event_CommandResponse::_internal_generateinvoicetorentchannelresponse() const {
  return _internal_has_generateinvoicetorentchannelresponse()
      ? *value_.generateinvoicetorentchannelresponse_
      : *reinterpret_cast< ::io::stakenet::orderbook::protos::GenerateInvoiceToRentChannelResponse*>(&::io::stakenet::orderbook::protos::_GenerateInvoiceToRentChannelResponse_default_instance_);
}
inline const ::io::stakenet::orderbook::protos::GenerateInvoiceToRentChannelResponse& Event_CommandResponse::generateinvoicetorentchannelresponse() const {
  // @@protoc_insertion_point(field_get:io.stakenet.orderbook.protos.Event.CommandResponse.generateInvoiceToRentChannelResponse)
  return _internal_generateinvoicetorentchannelresponse();
}
inline ::io::stakenet::orderbook::protos::GenerateInvoiceToRentChannelResponse* Event_CommandResponse::_internal_mutable_generateinvoicetorentchannelresponse() {
  if (!_internal_has_generateinvoicetorentchannelresponse()) {
    clear_value();
    set_has_generateinvoicetorentchannelresponse();
    value_.generateinvoicetorentchannelresponse_ = CreateMaybeMessage< ::io::stakenet::orderbook::protos::GenerateInvoiceToRentChannelResponse >(
        GetArenaNoVirtual());
  }
  return value_.generateinvoicetorentchannelresponse_;
}
inline ::io::stakenet::orderbook::protos::GenerateInvoiceToRentChannelResponse* Event_CommandResponse::mutable_generateinvoicetorentchannelresponse() {
  // @@protoc_insertion_point(field_mutable:io.stakenet.orderbook.protos.Event.CommandResponse.generateInvoiceToRentChannelResponse)
  return _internal_mutable_generateinvoicetorentchannelresponse();
}

// .io.stakenet.orderbook.protos.RentChannelResponse rentChannelResponse = 18;
inline bool Event_CommandResponse::_internal_has_rentchannelresponse() const {
  return value_case() == kRentChannelResponse;
}
inline bool Event_CommandResponse::has_rentchannelresponse() const {
  return _internal_has_rentchannelresponse();
}
inline void Event_CommandResponse::set_has_rentchannelresponse() {
  _oneof_case_[0] = kRentChannelResponse;
}
inline ::io::stakenet::orderbook::protos::RentChannelResponse* Event_CommandResponse::release_rentchannelresponse() {
  // @@protoc_insertion_point(field_release:io.stakenet.orderbook.protos.Event.CommandResponse.rentChannelResponse)
  if (_internal_has_rentchannelresponse()) {
    clear_has_value();
      ::io::stakenet::orderbook::protos::RentChannelResponse* temp = value_.rentchannelresponse_;
    value_.rentchannelresponse_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::io::stakenet::orderbook::protos::RentChannelResponse& Event_CommandResponse::_internal_rentchannelresponse() const {
  return _internal_has_rentchannelresponse()
      ? *value_.rentchannelresponse_
      : *reinterpret_cast< ::io::stakenet::orderbook::protos::RentChannelResponse*>(&::io::stakenet::orderbook::protos::_RentChannelResponse_default_instance_);
}
inline const ::io::stakenet::orderbook::protos::RentChannelResponse& Event_CommandResponse::rentchannelresponse() const {
  // @@protoc_insertion_point(field_get:io.stakenet.orderbook.protos.Event.CommandResponse.rentChannelResponse)
  return _internal_rentchannelresponse();
}
inline ::io::stakenet::orderbook::protos::RentChannelResponse* Event_CommandResponse::_internal_mutable_rentchannelresponse() {
  if (!_internal_has_rentchannelresponse()) {
    clear_value();
    set_has_rentchannelresponse();
    value_.rentchannelresponse_ = CreateMaybeMessage< ::io::stakenet::orderbook::protos::RentChannelResponse >(
        GetArenaNoVirtual());
  }
  return value_.rentchannelresponse_;
}
inline ::io::stakenet::orderbook::protos::RentChannelResponse* Event_CommandResponse::mutable_rentchannelresponse() {
  // @@protoc_insertion_point(field_mutable:io.stakenet.orderbook.protos.Event.CommandResponse.rentChannelResponse)
  return _internal_mutable_rentchannelresponse();
}

// .io.stakenet.orderbook.protos.GetChannelStatusResponse getChannelStatusResponse = 19;
inline bool Event_CommandResponse::_internal_has_getchannelstatusresponse() const {
  return value_case() == kGetChannelStatusResponse;
}
inline bool Event_CommandResponse::has_getchannelstatusresponse() const {
  return _internal_has_getchannelstatusresponse();
}
inline void Event_CommandResponse::set_has_getchannelstatusresponse() {
  _oneof_case_[0] = kGetChannelStatusResponse;
}
inline ::io::stakenet::orderbook::protos::GetChannelStatusResponse* Event_CommandResponse::release_getchannelstatusresponse() {
  // @@protoc_insertion_point(field_release:io.stakenet.orderbook.protos.Event.CommandResponse.getChannelStatusResponse)
  if (_internal_has_getchannelstatusresponse()) {
    clear_has_value();
      ::io::stakenet::orderbook::protos::GetChannelStatusResponse* temp = value_.getchannelstatusresponse_;
    value_.getchannelstatusresponse_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::io::stakenet::orderbook::protos::GetChannelStatusResponse& Event_CommandResponse::_internal_getchannelstatusresponse() const {
  return _internal_has_getchannelstatusresponse()
      ? *value_.getchannelstatusresponse_
      : *reinterpret_cast< ::io::stakenet::orderbook::protos::GetChannelStatusResponse*>(&::io::stakenet::orderbook::protos::_GetChannelStatusResponse_default_instance_);
}
inline const ::io::stakenet::orderbook::protos::GetChannelStatusResponse& Event_CommandResponse::getchannelstatusresponse() const {
  // @@protoc_insertion_point(field_get:io.stakenet.orderbook.protos.Event.CommandResponse.getChannelStatusResponse)
  return _internal_getchannelstatusresponse();
}
inline ::io::stakenet::orderbook::protos::GetChannelStatusResponse* Event_CommandResponse::_internal_mutable_getchannelstatusresponse() {
  if (!_internal_has_getchannelstatusresponse()) {
    clear_value();
    set_has_getchannelstatusresponse();
    value_.getchannelstatusresponse_ = CreateMaybeMessage< ::io::stakenet::orderbook::protos::GetChannelStatusResponse >(
        GetArenaNoVirtual());
  }
  return value_.getchannelstatusresponse_;
}
inline ::io::stakenet::orderbook::protos::GetChannelStatusResponse* Event_CommandResponse::mutable_getchannelstatusresponse() {
  // @@protoc_insertion_point(field_mutable:io.stakenet.orderbook.protos.Event.CommandResponse.getChannelStatusResponse)
  return _internal_mutable_getchannelstatusresponse();
}

// .io.stakenet.orderbook.protos.GetFeeToRentChannelResponse getFeeToRentChannelResponse = 20;
inline bool Event_CommandResponse::_internal_has_getfeetorentchannelresponse() const {
  return value_case() == kGetFeeToRentChannelResponse;
}
inline bool Event_CommandResponse::has_getfeetorentchannelresponse() const {
  return _internal_has_getfeetorentchannelresponse();
}
inline void Event_CommandResponse::set_has_getfeetorentchannelresponse() {
  _oneof_case_[0] = kGetFeeToRentChannelResponse;
}
inline ::io::stakenet::orderbook::protos::GetFeeToRentChannelResponse* Event_CommandResponse::release_getfeetorentchannelresponse() {
  // @@protoc_insertion_point(field_release:io.stakenet.orderbook.protos.Event.CommandResponse.getFeeToRentChannelResponse)
  if (_internal_has_getfeetorentchannelresponse()) {
    clear_has_value();
      ::io::stakenet::orderbook::protos::GetFeeToRentChannelResponse* temp = value_.getfeetorentchannelresponse_;
    value_.getfeetorentchannelresponse_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::io::stakenet::orderbook::protos::GetFeeToRentChannelResponse& Event_CommandResponse::_internal_getfeetorentchannelresponse() const {
  return _internal_has_getfeetorentchannelresponse()
      ? *value_.getfeetorentchannelresponse_
      : *reinterpret_cast< ::io::stakenet::orderbook::protos::GetFeeToRentChannelResponse*>(&::io::stakenet::orderbook::protos::_GetFeeToRentChannelResponse_default_instance_);
}
inline const ::io::stakenet::orderbook::protos::GetFeeToRentChannelResponse& Event_CommandResponse::getfeetorentchannelresponse() const {
  // @@protoc_insertion_point(field_get:io.stakenet.orderbook.protos.Event.CommandResponse.getFeeToRentChannelResponse)
  return _internal_getfeetorentchannelresponse();
}
inline ::io::stakenet::orderbook::protos::GetFeeToRentChannelResponse* Event_CommandResponse::_internal_mutable_getfeetorentchannelresponse() {
  if (!_internal_has_getfeetorentchannelresponse()) {
    clear_value();
    set_has_getfeetorentchannelresponse();
    value_.getfeetorentchannelresponse_ = CreateMaybeMessage< ::io::stakenet::orderbook::protos::GetFeeToRentChannelResponse >(
        GetArenaNoVirtual());
  }
  return value_.getfeetorentchannelresponse_;
}
inline ::io::stakenet::orderbook::protos::GetFeeToRentChannelResponse* Event_CommandResponse::mutable_getfeetorentchannelresponse() {
  // @@protoc_insertion_point(field_mutable:io.stakenet.orderbook.protos.Event.CommandResponse.getFeeToRentChannelResponse)
  return _internal_mutable_getfeetorentchannelresponse();
}

// .io.stakenet.orderbook.protos.RefundFeeResponse refundFeeResponse = 21;
inline bool Event_CommandResponse::_internal_has_refundfeeresponse() const {
  return value_case() == kRefundFeeResponse;
}
inline bool Event_CommandResponse::has_refundfeeresponse() const {
  return _internal_has_refundfeeresponse();
}
inline void Event_CommandResponse::set_has_refundfeeresponse() {
  _oneof_case_[0] = kRefundFeeResponse;
}
inline ::io::stakenet::orderbook::protos::RefundFeeResponse* Event_CommandResponse::release_refundfeeresponse() {
  // @@protoc_insertion_point(field_release:io.stakenet.orderbook.protos.Event.CommandResponse.refundFeeResponse)
  if (_internal_has_refundfeeresponse()) {
    clear_has_value();
      ::io::stakenet::orderbook::protos::RefundFeeResponse* temp = value_.refundfeeresponse_;
    value_.refundfeeresponse_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::io::stakenet::orderbook::protos::RefundFeeResponse& Event_CommandResponse::_internal_refundfeeresponse() const {
  return _internal_has_refundfeeresponse()
      ? *value_.refundfeeresponse_
      : *reinterpret_cast< ::io::stakenet::orderbook::protos::RefundFeeResponse*>(&::io::stakenet::orderbook::protos::_RefundFeeResponse_default_instance_);
}
inline const ::io::stakenet::orderbook::protos::RefundFeeResponse& Event_CommandResponse::refundfeeresponse() const {
  // @@protoc_insertion_point(field_get:io.stakenet.orderbook.protos.Event.CommandResponse.refundFeeResponse)
  return _internal_refundfeeresponse();
}
inline ::io::stakenet::orderbook::protos::RefundFeeResponse* Event_CommandResponse::_internal_mutable_refundfeeresponse() {
  if (!_internal_has_refundfeeresponse()) {
    clear_value();
    set_has_refundfeeresponse();
    value_.refundfeeresponse_ = CreateMaybeMessage< ::io::stakenet::orderbook::protos::RefundFeeResponse >(
        GetArenaNoVirtual());
  }
  return value_.refundfeeresponse_;
}
inline ::io::stakenet::orderbook::protos::RefundFeeResponse* Event_CommandResponse::mutable_refundfeeresponse() {
  // @@protoc_insertion_point(field_mutable:io.stakenet.orderbook.protos.Event.CommandResponse.refundFeeResponse)
  return _internal_mutable_refundfeeresponse();
}

// .io.stakenet.orderbook.protos.GetRefundableAmountResponse getRefundableAmountResponse = 22;
inline bool Event_CommandResponse::_internal_has_getrefundableamountresponse() const {
  return value_case() == kGetRefundableAmountResponse;
}
inline bool Event_CommandResponse::has_getrefundableamountresponse() const {
  return _internal_has_getrefundableamountresponse();
}
inline void Event_CommandResponse::set_has_getrefundableamountresponse() {
  _oneof_case_[0] = kGetRefundableAmountResponse;
}
inline ::io::stakenet::orderbook::protos::GetRefundableAmountResponse* Event_CommandResponse::release_getrefundableamountresponse() {
  // @@protoc_insertion_point(field_release:io.stakenet.orderbook.protos.Event.CommandResponse.getRefundableAmountResponse)
  if (_internal_has_getrefundableamountresponse()) {
    clear_has_value();
      ::io::stakenet::orderbook::protos::GetRefundableAmountResponse* temp = value_.getrefundableamountresponse_;
    value_.getrefundableamountresponse_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::io::stakenet::orderbook::protos::GetRefundableAmountResponse& Event_CommandResponse::_internal_getrefundableamountresponse() const {
  return _internal_has_getrefundableamountresponse()
      ? *value_.getrefundableamountresponse_
      : *reinterpret_cast< ::io::stakenet::orderbook::protos::GetRefundableAmountResponse*>(&::io::stakenet::orderbook::protos::_GetRefundableAmountResponse_default_instance_);
}
inline const ::io::stakenet::orderbook::protos::GetRefundableAmountResponse& Event_CommandResponse::getrefundableamountresponse() const {
  // @@protoc_insertion_point(field_get:io.stakenet.orderbook.protos.Event.CommandResponse.getRefundableAmountResponse)
  return _internal_getrefundableamountresponse();
}
inline ::io::stakenet::orderbook::protos::GetRefundableAmountResponse* Event_CommandResponse::_internal_mutable_getrefundableamountresponse() {
  if (!_internal_has_getrefundableamountresponse()) {
    clear_value();
    set_has_getrefundableamountresponse();
    value_.getrefundableamountresponse_ = CreateMaybeMessage< ::io::stakenet::orderbook::protos::GetRefundableAmountResponse >(
        GetArenaNoVirtual());
  }
  return value_.getrefundableamountresponse_;
}
inline ::io::stakenet::orderbook::protos::GetRefundableAmountResponse* Event_CommandResponse::mutable_getrefundableamountresponse() {
  // @@protoc_insertion_point(field_mutable:io.stakenet.orderbook.protos.Event.CommandResponse.getRefundableAmountResponse)
  return _internal_mutable_getrefundableamountresponse();
}

// .io.stakenet.orderbook.protos.GetFeeToExtendRentedChannelResponse getFeeToExtendRentedChannelResponse = 23;
inline bool Event_CommandResponse::_internal_has_getfeetoextendrentedchannelresponse() const {
  return value_case() == kGetFeeToExtendRentedChannelResponse;
}
inline bool Event_CommandResponse::has_getfeetoextendrentedchannelresponse() const {
  return _internal_has_getfeetoextendrentedchannelresponse();
}
inline void Event_CommandResponse::set_has_getfeetoextendrentedchannelresponse() {
  _oneof_case_[0] = kGetFeeToExtendRentedChannelResponse;
}
inline ::io::stakenet::orderbook::protos::GetFeeToExtendRentedChannelResponse* Event_CommandResponse::release_getfeetoextendrentedchannelresponse() {
  // @@protoc_insertion_point(field_release:io.stakenet.orderbook.protos.Event.CommandResponse.getFeeToExtendRentedChannelResponse)
  if (_internal_has_getfeetoextendrentedchannelresponse()) {
    clear_has_value();
      ::io::stakenet::orderbook::protos::GetFeeToExtendRentedChannelResponse* temp = value_.getfeetoextendrentedchannelresponse_;
    value_.getfeetoextendrentedchannelresponse_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::io::stakenet::orderbook::protos::GetFeeToExtendRentedChannelResponse& Event_CommandResponse::_internal_getfeetoextendrentedchannelresponse() const {
  return _internal_has_getfeetoextendrentedchannelresponse()
      ? *value_.getfeetoextendrentedchannelresponse_
      : *reinterpret_cast< ::io::stakenet::orderbook::protos::GetFeeToExtendRentedChannelResponse*>(&::io::stakenet::orderbook::protos::_GetFeeToExtendRentedChannelResponse_default_instance_);
}
inline const ::io::stakenet::orderbook::protos::GetFeeToExtendRentedChannelResponse& Event_CommandResponse::getfeetoextendrentedchannelresponse() const {
  // @@protoc_insertion_point(field_get:io.stakenet.orderbook.protos.Event.CommandResponse.getFeeToExtendRentedChannelResponse)
  return _internal_getfeetoextendrentedchannelresponse();
}
inline ::io::stakenet::orderbook::protos::GetFeeToExtendRentedChannelResponse* Event_CommandResponse::_internal_mutable_getfeetoextendrentedchannelresponse() {
  if (!_internal_has_getfeetoextendrentedchannelresponse()) {
    clear_value();
    set_has_getfeetoextendrentedchannelresponse();
    value_.getfeetoextendrentedchannelresponse_ = CreateMaybeMessage< ::io::stakenet::orderbook::protos::GetFeeToExtendRentedChannelResponse >(
        GetArenaNoVirtual());
  }
  return value_.getfeetoextendrentedchannelresponse_;
}
inline ::io::stakenet::orderbook::protos::GetFeeToExtendRentedChannelResponse* Event_CommandResponse::mutable_getfeetoextendrentedchannelresponse() {
  // @@protoc_insertion_point(field_mutable:io.stakenet.orderbook.protos.Event.CommandResponse.getFeeToExtendRentedChannelResponse)
  return _internal_mutable_getfeetoextendrentedchannelresponse();
}

// .io.stakenet.orderbook.protos.GenerateInvoiceToExtendRentedChannelResponse generateInvoiceToExtendRentedChannelResponse = 24;
inline bool Event_CommandResponse::_internal_has_generateinvoicetoextendrentedchannelresponse() const {
  return value_case() == kGenerateInvoiceToExtendRentedChannelResponse;
}
inline bool Event_CommandResponse::has_generateinvoicetoextendrentedchannelresponse() const {
  return _internal_has_generateinvoicetoextendrentedchannelresponse();
}
inline void Event_CommandResponse::set_has_generateinvoicetoextendrentedchannelresponse() {
  _oneof_case_[0] = kGenerateInvoiceToExtendRentedChannelResponse;
}
inline ::io::stakenet::orderbook::protos::GenerateInvoiceToExtendRentedChannelResponse* Event_CommandResponse::release_generateinvoicetoextendrentedchannelresponse() {
  // @@protoc_insertion_point(field_release:io.stakenet.orderbook.protos.Event.CommandResponse.generateInvoiceToExtendRentedChannelResponse)
  if (_internal_has_generateinvoicetoextendrentedchannelresponse()) {
    clear_has_value();
      ::io::stakenet::orderbook::protos::GenerateInvoiceToExtendRentedChannelResponse* temp = value_.generateinvoicetoextendrentedchannelresponse_;
    value_.generateinvoicetoextendrentedchannelresponse_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::io::stakenet::orderbook::protos::GenerateInvoiceToExtendRentedChannelResponse& Event_CommandResponse::_internal_generateinvoicetoextendrentedchannelresponse() const {
  return _internal_has_generateinvoicetoextendrentedchannelresponse()
      ? *value_.generateinvoicetoextendrentedchannelresponse_
      : *reinterpret_cast< ::io::stakenet::orderbook::protos::GenerateInvoiceToExtendRentedChannelResponse*>(&::io::stakenet::orderbook::protos::_GenerateInvoiceToExtendRentedChannelResponse_default_instance_);
}
inline const ::io::stakenet::orderbook::protos::GenerateInvoiceToExtendRentedChannelResponse& Event_CommandResponse::generateinvoicetoextendrentedchannelresponse() const {
  // @@protoc_insertion_point(field_get:io.stakenet.orderbook.protos.Event.CommandResponse.generateInvoiceToExtendRentedChannelResponse)
  return _internal_generateinvoicetoextendrentedchannelresponse();
}
inline ::io::stakenet::orderbook::protos::GenerateInvoiceToExtendRentedChannelResponse* Event_CommandResponse::_internal_mutable_generateinvoicetoextendrentedchannelresponse() {
  if (!_internal_has_generateinvoicetoextendrentedchannelresponse()) {
    clear_value();
    set_has_generateinvoicetoextendrentedchannelresponse();
    value_.generateinvoicetoextendrentedchannelresponse_ = CreateMaybeMessage< ::io::stakenet::orderbook::protos::GenerateInvoiceToExtendRentedChannelResponse >(
        GetArenaNoVirtual());
  }
  return value_.generateinvoicetoextendrentedchannelresponse_;
}
inline ::io::stakenet::orderbook::protos::GenerateInvoiceToExtendRentedChannelResponse* Event_CommandResponse::mutable_generateinvoicetoextendrentedchannelresponse() {
  // @@protoc_insertion_point(field_mutable:io.stakenet.orderbook.protos.Event.CommandResponse.generateInvoiceToExtendRentedChannelResponse)
  return _internal_mutable_generateinvoicetoextendrentedchannelresponse();
}

// .io.stakenet.orderbook.protos.ExtendRentedChannelTimeResponse extendRentedChannelTimeResponse = 25;
inline bool Event_CommandResponse::_internal_has_extendrentedchanneltimeresponse() const {
  return value_case() == kExtendRentedChannelTimeResponse;
}
inline bool Event_CommandResponse::has_extendrentedchanneltimeresponse() const {
  return _internal_has_extendrentedchanneltimeresponse();
}
inline void Event_CommandResponse::set_has_extendrentedchanneltimeresponse() {
  _oneof_case_[0] = kExtendRentedChannelTimeResponse;
}
inline ::io::stakenet::orderbook::protos::ExtendRentedChannelTimeResponse* Event_CommandResponse::release_extendrentedchanneltimeresponse() {
  // @@protoc_insertion_point(field_release:io.stakenet.orderbook.protos.Event.CommandResponse.extendRentedChannelTimeResponse)
  if (_internal_has_extendrentedchanneltimeresponse()) {
    clear_has_value();
      ::io::stakenet::orderbook::protos::ExtendRentedChannelTimeResponse* temp = value_.extendrentedchanneltimeresponse_;
    value_.extendrentedchanneltimeresponse_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::io::stakenet::orderbook::protos::ExtendRentedChannelTimeResponse& Event_CommandResponse::_internal_extendrentedchanneltimeresponse() const {
  return _internal_has_extendrentedchanneltimeresponse()
      ? *value_.extendrentedchanneltimeresponse_
      : *reinterpret_cast< ::io::stakenet::orderbook::protos::ExtendRentedChannelTimeResponse*>(&::io::stakenet::orderbook::protos::_ExtendRentedChannelTimeResponse_default_instance_);
}
inline const ::io::stakenet::orderbook::protos::ExtendRentedChannelTimeResponse& Event_CommandResponse::extendrentedchanneltimeresponse() const {
  // @@protoc_insertion_point(field_get:io.stakenet.orderbook.protos.Event.CommandResponse.extendRentedChannelTimeResponse)
  return _internal_extendrentedchanneltimeresponse();
}
inline ::io::stakenet::orderbook::protos::ExtendRentedChannelTimeResponse* Event_CommandResponse::_internal_mutable_extendrentedchanneltimeresponse() {
  if (!_internal_has_extendrentedchanneltimeresponse()) {
    clear_value();
    set_has_extendrentedchanneltimeresponse();
    value_.extendrentedchanneltimeresponse_ = CreateMaybeMessage< ::io::stakenet::orderbook::protos::ExtendRentedChannelTimeResponse >(
        GetArenaNoVirtual());
  }
  return value_.extendrentedchanneltimeresponse_;
}
inline ::io::stakenet::orderbook::protos::ExtendRentedChannelTimeResponse* Event_CommandResponse::mutable_extendrentedchanneltimeresponse() {
  // @@protoc_insertion_point(field_mutable:io.stakenet.orderbook.protos.Event.CommandResponse.extendRentedChannelTimeResponse)
  return _internal_mutable_extendrentedchanneltimeresponse();
}

// .io.stakenet.orderbook.protos.RegisterPublicKeyResponse registerPublicKeyResponse = 26;
inline bool Event_CommandResponse::_internal_has_registerpublickeyresponse() const {
  return value_case() == kRegisterPublicKeyResponse;
}
inline bool Event_CommandResponse::has_registerpublickeyresponse() const {
  return _internal_has_registerpublickeyresponse();
}
inline void Event_CommandResponse::set_has_registerpublickeyresponse() {
  _oneof_case_[0] = kRegisterPublicKeyResponse;
}
inline ::io::stakenet::orderbook::protos::RegisterPublicKeyResponse* Event_CommandResponse::release_registerpublickeyresponse() {
  // @@protoc_insertion_point(field_release:io.stakenet.orderbook.protos.Event.CommandResponse.registerPublicKeyResponse)
  if (_internal_has_registerpublickeyresponse()) {
    clear_has_value();
      ::io::stakenet::orderbook::protos::RegisterPublicKeyResponse* temp = value_.registerpublickeyresponse_;
    value_.registerpublickeyresponse_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::io::stakenet::orderbook::protos::RegisterPublicKeyResponse& Event_CommandResponse::_internal_registerpublickeyresponse() const {
  return _internal_has_registerpublickeyresponse()
      ? *value_.registerpublickeyresponse_
      : *reinterpret_cast< ::io::stakenet::orderbook::protos::RegisterPublicKeyResponse*>(&::io::stakenet::orderbook::protos::_RegisterPublicKeyResponse_default_instance_);
}
inline const ::io::stakenet::orderbook::protos::RegisterPublicKeyResponse& Event_CommandResponse::registerpublickeyresponse() const {
  // @@protoc_insertion_point(field_get:io.stakenet.orderbook.protos.Event.CommandResponse.registerPublicKeyResponse)
  return _internal_registerpublickeyresponse();
}
inline ::io::stakenet::orderbook::protos::RegisterPublicKeyResponse* Event_CommandResponse::_internal_mutable_registerpublickeyresponse() {
  if (!_internal_has_registerpublickeyresponse()) {
    clear_value();
    set_has_registerpublickeyresponse();
    value_.registerpublickeyresponse_ = CreateMaybeMessage< ::io::stakenet::orderbook::protos::RegisterPublicKeyResponse >(
        GetArenaNoVirtual());
  }
  return value_.registerpublickeyresponse_;
}
inline ::io::stakenet::orderbook::protos::RegisterPublicKeyResponse* Event_CommandResponse::mutable_registerpublickeyresponse() {
  // @@protoc_insertion_point(field_mutable:io.stakenet.orderbook.protos.Event.CommandResponse.registerPublicKeyResponse)
  return _internal_mutable_registerpublickeyresponse();
}

// .io.stakenet.orderbook.protos.RegisterPublicIdentifierResponse registerPublicIdentifierResponse = 27;
inline bool Event_CommandResponse::_internal_has_registerpublicidentifierresponse() const {
  return value_case() == kRegisterPublicIdentifierResponse;
}
inline bool Event_CommandResponse::has_registerpublicidentifierresponse() const {
  return _internal_has_registerpublicidentifierresponse();
}
inline void Event_CommandResponse::set_has_registerpublicidentifierresponse() {
  _oneof_case_[0] = kRegisterPublicIdentifierResponse;
}
inline ::io::stakenet::orderbook::protos::RegisterPublicIdentifierResponse* Event_CommandResponse::release_registerpublicidentifierresponse() {
  // @@protoc_insertion_point(field_release:io.stakenet.orderbook.protos.Event.CommandResponse.registerPublicIdentifierResponse)
  if (_internal_has_registerpublicidentifierresponse()) {
    clear_has_value();
      ::io::stakenet::orderbook::protos::RegisterPublicIdentifierResponse* temp = value_.registerpublicidentifierresponse_;
    value_.registerpublicidentifierresponse_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::io::stakenet::orderbook::protos::RegisterPublicIdentifierResponse& Event_CommandResponse::_internal_registerpublicidentifierresponse() const {
  return _internal_has_registerpublicidentifierresponse()
      ? *value_.registerpublicidentifierresponse_
      : *reinterpret_cast< ::io::stakenet::orderbook::protos::RegisterPublicIdentifierResponse*>(&::io::stakenet::orderbook::protos::_RegisterPublicIdentifierResponse_default_instance_);
}
inline const ::io::stakenet::orderbook::protos::RegisterPublicIdentifierResponse& Event_CommandResponse::registerpublicidentifierresponse() const {
  // @@protoc_insertion_point(field_get:io.stakenet.orderbook.protos.Event.CommandResponse.registerPublicIdentifierResponse)
  return _internal_registerpublicidentifierresponse();
}
inline ::io::stakenet::orderbook::protos::RegisterPublicIdentifierResponse* Event_CommandResponse::_internal_mutable_registerpublicidentifierresponse() {
  if (!_internal_has_registerpublicidentifierresponse()) {
    clear_value();
    set_has_registerpublicidentifierresponse();
    value_.registerpublicidentifierresponse_ = CreateMaybeMessage< ::io::stakenet::orderbook::protos::RegisterPublicIdentifierResponse >(
        GetArenaNoVirtual());
  }
  return value_.registerpublicidentifierresponse_;
}
inline ::io::stakenet::orderbook::protos::RegisterPublicIdentifierResponse* Event_CommandResponse::mutable_registerpublicidentifierresponse() {
  // @@protoc_insertion_point(field_mutable:io.stakenet.orderbook.protos.Event.CommandResponse.registerPublicIdentifierResponse)
  return _internal_mutable_registerpublicidentifierresponse();
}

// .io.stakenet.orderbook.protos.GetConnextPaymentInformationResponse getConnextPaymentInformationResponse = 28;
inline bool Event_CommandResponse::_internal_has_getconnextpaymentinformationresponse() const {
  return value_case() == kGetConnextPaymentInformationResponse;
}
inline bool Event_CommandResponse::has_getconnextpaymentinformationresponse() const {
  return _internal_has_getconnextpaymentinformationresponse();
}
inline void Event_CommandResponse::set_has_getconnextpaymentinformationresponse() {
  _oneof_case_[0] = kGetConnextPaymentInformationResponse;
}
inline ::io::stakenet::orderbook::protos::GetConnextPaymentInformationResponse* Event_CommandResponse::release_getconnextpaymentinformationresponse() {
  // @@protoc_insertion_point(field_release:io.stakenet.orderbook.protos.Event.CommandResponse.getConnextPaymentInformationResponse)
  if (_internal_has_getconnextpaymentinformationresponse()) {
    clear_has_value();
      ::io::stakenet::orderbook::protos::GetConnextPaymentInformationResponse* temp = value_.getconnextpaymentinformationresponse_;
    value_.getconnextpaymentinformationresponse_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::io::stakenet::orderbook::protos::GetConnextPaymentInformationResponse& Event_CommandResponse::_internal_getconnextpaymentinformationresponse() const {
  return _internal_has_getconnextpaymentinformationresponse()
      ? *value_.getconnextpaymentinformationresponse_
      : *reinterpret_cast< ::io::stakenet::orderbook::protos::GetConnextPaymentInformationResponse*>(&::io::stakenet::orderbook::protos::_GetConnextPaymentInformationResponse_default_instance_);
}
inline const ::io::stakenet::orderbook::protos::GetConnextPaymentInformationResponse& Event_CommandResponse::getconnextpaymentinformationresponse() const {
  // @@protoc_insertion_point(field_get:io.stakenet.orderbook.protos.Event.CommandResponse.getConnextPaymentInformationResponse)
  return _internal_getconnextpaymentinformationresponse();
}
inline ::io::stakenet::orderbook::protos::GetConnextPaymentInformationResponse* Event_CommandResponse::_internal_mutable_getconnextpaymentinformationresponse() {
  if (!_internal_has_getconnextpaymentinformationresponse()) {
    clear_value();
    set_has_getconnextpaymentinformationresponse();
    value_.getconnextpaymentinformationresponse_ = CreateMaybeMessage< ::io::stakenet::orderbook::protos::GetConnextPaymentInformationResponse >(
        GetArenaNoVirtual());
  }
  return value_.getconnextpaymentinformationresponse_;
}
inline ::io::stakenet::orderbook::protos::GetConnextPaymentInformationResponse* Event_CommandResponse::mutable_getconnextpaymentinformationresponse() {
  // @@protoc_insertion_point(field_mutable:io.stakenet.orderbook.protos.Event.CommandResponse.getConnextPaymentInformationResponse)
  return _internal_mutable_getconnextpaymentinformationresponse();
}

// .io.stakenet.orderbook.protos.GeneratePaymentHashToRentChannelResponse generatePaymentHashToRentChannelResponse = 29;
inline bool Event_CommandResponse::_internal_has_generatepaymenthashtorentchannelresponse() const {
  return value_case() == kGeneratePaymentHashToRentChannelResponse;
}
inline bool Event_CommandResponse::has_generatepaymenthashtorentchannelresponse() const {
  return _internal_has_generatepaymenthashtorentchannelresponse();
}
inline void Event_CommandResponse::set_has_generatepaymenthashtorentchannelresponse() {
  _oneof_case_[0] = kGeneratePaymentHashToRentChannelResponse;
}
inline ::io::stakenet::orderbook::protos::GeneratePaymentHashToRentChannelResponse* Event_CommandResponse::release_generatepaymenthashtorentchannelresponse() {
  // @@protoc_insertion_point(field_release:io.stakenet.orderbook.protos.Event.CommandResponse.generatePaymentHashToRentChannelResponse)
  if (_internal_has_generatepaymenthashtorentchannelresponse()) {
    clear_has_value();
      ::io::stakenet::orderbook::protos::GeneratePaymentHashToRentChannelResponse* temp = value_.generatepaymenthashtorentchannelresponse_;
    value_.generatepaymenthashtorentchannelresponse_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::io::stakenet::orderbook::protos::GeneratePaymentHashToRentChannelResponse& Event_CommandResponse::_internal_generatepaymenthashtorentchannelresponse() const {
  return _internal_has_generatepaymenthashtorentchannelresponse()
      ? *value_.generatepaymenthashtorentchannelresponse_
      : *reinterpret_cast< ::io::stakenet::orderbook::protos::GeneratePaymentHashToRentChannelResponse*>(&::io::stakenet::orderbook::protos::_GeneratePaymentHashToRentChannelResponse_default_instance_);
}
inline const ::io::stakenet::orderbook::protos::GeneratePaymentHashToRentChannelResponse& Event_CommandResponse::generatepaymenthashtorentchannelresponse() const {
  // @@protoc_insertion_point(field_get:io.stakenet.orderbook.protos.Event.CommandResponse.generatePaymentHashToRentChannelResponse)
  return _internal_generatepaymenthashtorentchannelresponse();
}
inline ::io::stakenet::orderbook::protos::GeneratePaymentHashToRentChannelResponse* Event_CommandResponse::_internal_mutable_generatepaymenthashtorentchannelresponse() {
  if (!_internal_has_generatepaymenthashtorentchannelresponse()) {
    clear_value();
    set_has_generatepaymenthashtorentchannelresponse();
    value_.generatepaymenthashtorentchannelresponse_ = CreateMaybeMessage< ::io::stakenet::orderbook::protos::GeneratePaymentHashToRentChannelResponse >(
        GetArenaNoVirtual());
  }
  return value_.generatepaymenthashtorentchannelresponse_;
}
inline ::io::stakenet::orderbook::protos::GeneratePaymentHashToRentChannelResponse* Event_CommandResponse::mutable_generatepaymenthashtorentchannelresponse() {
  // @@protoc_insertion_point(field_mutable:io.stakenet.orderbook.protos.Event.CommandResponse.generatePaymentHashToRentChannelResponse)
  return _internal_mutable_generatepaymenthashtorentchannelresponse();
}

// .io.stakenet.orderbook.protos.GeneratePaymentHashToExtendConnextRentedChannelResponse generatePaymentHashToExtendConnextRentedChannelResponse = 30;
inline bool Event_CommandResponse::_internal_has_generatepaymenthashtoextendconnextrentedchannelresponse() const {
  return value_case() == kGeneratePaymentHashToExtendConnextRentedChannelResponse;
}
inline bool Event_CommandResponse::has_generatepaymenthashtoextendconnextrentedchannelresponse() const {
  return _internal_has_generatepaymenthashtoextendconnextrentedchannelresponse();
}
inline void Event_CommandResponse::set_has_generatepaymenthashtoextendconnextrentedchannelresponse() {
  _oneof_case_[0] = kGeneratePaymentHashToExtendConnextRentedChannelResponse;
}
inline ::io::stakenet::orderbook::protos::GeneratePaymentHashToExtendConnextRentedChannelResponse* Event_CommandResponse::release_generatepaymenthashtoextendconnextrentedchannelresponse() {
  // @@protoc_insertion_point(field_release:io.stakenet.orderbook.protos.Event.CommandResponse.generatePaymentHashToExtendConnextRentedChannelResponse)
  if (_internal_has_generatepaymenthashtoextendconnextrentedchannelresponse()) {
    clear_has_value();
      ::io::stakenet::orderbook::protos::GeneratePaymentHashToExtendConnextRentedChannelResponse* temp = value_.generatepaymenthashtoextendconnextrentedchannelresponse_;
    value_.generatepaymenthashtoextendconnextrentedchannelresponse_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::io::stakenet::orderbook::protos::GeneratePaymentHashToExtendConnextRentedChannelResponse& Event_CommandResponse::_internal_generatepaymenthashtoextendconnextrentedchannelresponse() const {
  return _internal_has_generatepaymenthashtoextendconnextrentedchannelresponse()
      ? *value_.generatepaymenthashtoextendconnextrentedchannelresponse_
      : *reinterpret_cast< ::io::stakenet::orderbook::protos::GeneratePaymentHashToExtendConnextRentedChannelResponse*>(&::io::stakenet::orderbook::protos::_GeneratePaymentHashToExtendConnextRentedChannelResponse_default_instance_);
}
inline const ::io::stakenet::orderbook::protos::GeneratePaymentHashToExtendConnextRentedChannelResponse& Event_CommandResponse::generatepaymenthashtoextendconnextrentedchannelresponse() const {
  // @@protoc_insertion_point(field_get:io.stakenet.orderbook.protos.Event.CommandResponse.generatePaymentHashToExtendConnextRentedChannelResponse)
  return _internal_generatepaymenthashtoextendconnextrentedchannelresponse();
}
inline ::io::stakenet::orderbook::protos::GeneratePaymentHashToExtendConnextRentedChannelResponse* Event_CommandResponse::_internal_mutable_generatepaymenthashtoextendconnextrentedchannelresponse() {
  if (!_internal_has_generatepaymenthashtoextendconnextrentedchannelresponse()) {
    clear_value();
    set_has_generatepaymenthashtoextendconnextrentedchannelresponse();
    value_.generatepaymenthashtoextendconnextrentedchannelresponse_ = CreateMaybeMessage< ::io::stakenet::orderbook::protos::GeneratePaymentHashToExtendConnextRentedChannelResponse >(
        GetArenaNoVirtual());
  }
  return value_.generatepaymenthashtoextendconnextrentedchannelresponse_;
}
inline ::io::stakenet::orderbook::protos::GeneratePaymentHashToExtendConnextRentedChannelResponse* Event_CommandResponse::mutable_generatepaymenthashtoextendconnextrentedchannelresponse() {
  // @@protoc_insertion_point(field_mutable:io.stakenet.orderbook.protos.Event.CommandResponse.generatePaymentHashToExtendConnextRentedChannelResponse)
  return _internal_mutable_generatepaymenthashtoextendconnextrentedchannelresponse();
}

// .io.stakenet.orderbook.protos.GetConnextChannelContractDeploymentFeeResponse getConnextChannelContractDeploymentFeeResponse = 31;
inline bool Event_CommandResponse::_internal_has_getconnextchannelcontractdeploymentfeeresponse() const {
  return value_case() == kGetConnextChannelContractDeploymentFeeResponse;
}
inline bool Event_CommandResponse::has_getconnextchannelcontractdeploymentfeeresponse() const {
  return _internal_has_getconnextchannelcontractdeploymentfeeresponse();
}
inline void Event_CommandResponse::set_has_getconnextchannelcontractdeploymentfeeresponse() {
  _oneof_case_[0] = kGetConnextChannelContractDeploymentFeeResponse;
}
inline ::io::stakenet::orderbook::protos::GetConnextChannelContractDeploymentFeeResponse* Event_CommandResponse::release_getconnextchannelcontractdeploymentfeeresponse() {
  // @@protoc_insertion_point(field_release:io.stakenet.orderbook.protos.Event.CommandResponse.getConnextChannelContractDeploymentFeeResponse)
  if (_internal_has_getconnextchannelcontractdeploymentfeeresponse()) {
    clear_has_value();
      ::io::stakenet::orderbook::protos::GetConnextChannelContractDeploymentFeeResponse* temp = value_.getconnextchannelcontractdeploymentfeeresponse_;
    value_.getconnextchannelcontractdeploymentfeeresponse_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::io::stakenet::orderbook::protos::GetConnextChannelContractDeploymentFeeResponse& Event_CommandResponse::_internal_getconnextchannelcontractdeploymentfeeresponse() const {
  return _internal_has_getconnextchannelcontractdeploymentfeeresponse()
      ? *value_.getconnextchannelcontractdeploymentfeeresponse_
      : *reinterpret_cast< ::io::stakenet::orderbook::protos::GetConnextChannelContractDeploymentFeeResponse*>(&::io::stakenet::orderbook::protos::_GetConnextChannelContractDeploymentFeeResponse_default_instance_);
}
inline const ::io::stakenet::orderbook::protos::GetConnextChannelContractDeploymentFeeResponse& Event_CommandResponse::getconnextchannelcontractdeploymentfeeresponse() const {
  // @@protoc_insertion_point(field_get:io.stakenet.orderbook.protos.Event.CommandResponse.getConnextChannelContractDeploymentFeeResponse)
  return _internal_getconnextchannelcontractdeploymentfeeresponse();
}
inline ::io::stakenet::orderbook::protos::GetConnextChannelContractDeploymentFeeResponse* Event_CommandResponse::_internal_mutable_getconnextchannelcontractdeploymentfeeresponse() {
  if (!_internal_has_getconnextchannelcontractdeploymentfeeresponse()) {
    clear_value();
    set_has_getconnextchannelcontractdeploymentfeeresponse();
    value_.getconnextchannelcontractdeploymentfeeresponse_ = CreateMaybeMessage< ::io::stakenet::orderbook::protos::GetConnextChannelContractDeploymentFeeResponse >(
        GetArenaNoVirtual());
  }
  return value_.getconnextchannelcontractdeploymentfeeresponse_;
}
inline ::io::stakenet::orderbook::protos::GetConnextChannelContractDeploymentFeeResponse* Event_CommandResponse::mutable_getconnextchannelcontractdeploymentfeeresponse() {
  // @@protoc_insertion_point(field_mutable:io.stakenet.orderbook.protos.Event.CommandResponse.getConnextChannelContractDeploymentFeeResponse)
  return _internal_mutable_getconnextchannelcontractdeploymentfeeresponse();
}

// .io.stakenet.orderbook.protos.RegisterConnextChannelContractDeploymentFeeResponse registerConnextChannelContractDeploymentFeeResponse = 32;
inline bool Event_CommandResponse::_internal_has_registerconnextchannelcontractdeploymentfeeresponse() const {
  return value_case() == kRegisterConnextChannelContractDeploymentFeeResponse;
}
inline bool Event_CommandResponse::has_registerconnextchannelcontractdeploymentfeeresponse() const {
  return _internal_has_registerconnextchannelcontractdeploymentfeeresponse();
}
inline void Event_CommandResponse::set_has_registerconnextchannelcontractdeploymentfeeresponse() {
  _oneof_case_[0] = kRegisterConnextChannelContractDeploymentFeeResponse;
}
inline ::io::stakenet::orderbook::protos::RegisterConnextChannelContractDeploymentFeeResponse* Event_CommandResponse::release_registerconnextchannelcontractdeploymentfeeresponse() {
  // @@protoc_insertion_point(field_release:io.stakenet.orderbook.protos.Event.CommandResponse.registerConnextChannelContractDeploymentFeeResponse)
  if (_internal_has_registerconnextchannelcontractdeploymentfeeresponse()) {
    clear_has_value();
      ::io::stakenet::orderbook::protos::RegisterConnextChannelContractDeploymentFeeResponse* temp = value_.registerconnextchannelcontractdeploymentfeeresponse_;
    value_.registerconnextchannelcontractdeploymentfeeresponse_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::io::stakenet::orderbook::protos::RegisterConnextChannelContractDeploymentFeeResponse& Event_CommandResponse::_internal_registerconnextchannelcontractdeploymentfeeresponse() const {
  return _internal_has_registerconnextchannelcontractdeploymentfeeresponse()
      ? *value_.registerconnextchannelcontractdeploymentfeeresponse_
      : *reinterpret_cast< ::io::stakenet::orderbook::protos::RegisterConnextChannelContractDeploymentFeeResponse*>(&::io::stakenet::orderbook::protos::_RegisterConnextChannelContractDeploymentFeeResponse_default_instance_);
}
inline const ::io::stakenet::orderbook::protos::RegisterConnextChannelContractDeploymentFeeResponse& Event_CommandResponse::registerconnextchannelcontractdeploymentfeeresponse() const {
  // @@protoc_insertion_point(field_get:io.stakenet.orderbook.protos.Event.CommandResponse.registerConnextChannelContractDeploymentFeeResponse)
  return _internal_registerconnextchannelcontractdeploymentfeeresponse();
}
inline ::io::stakenet::orderbook::protos::RegisterConnextChannelContractDeploymentFeeResponse* Event_CommandResponse::_internal_mutable_registerconnextchannelcontractdeploymentfeeresponse() {
  if (!_internal_has_registerconnextchannelcontractdeploymentfeeresponse()) {
    clear_value();
    set_has_registerconnextchannelcontractdeploymentfeeresponse();
    value_.registerconnextchannelcontractdeploymentfeeresponse_ = CreateMaybeMessage< ::io::stakenet::orderbook::protos::RegisterConnextChannelContractDeploymentFeeResponse >(
        GetArenaNoVirtual());
  }
  return value_.registerconnextchannelcontractdeploymentfeeresponse_;
}
inline ::io::stakenet::orderbook::protos::RegisterConnextChannelContractDeploymentFeeResponse* Event_CommandResponse::mutable_registerconnextchannelcontractdeploymentfeeresponse() {
  // @@protoc_insertion_point(field_mutable:io.stakenet.orderbook.protos.Event.CommandResponse.registerConnextChannelContractDeploymentFeeResponse)
  return _internal_mutable_registerconnextchannelcontractdeploymentfeeresponse();
}

inline bool Event_CommandResponse::has_value() const {
  return value_case() != VALUE_NOT_SET;
}
inline void Event_CommandResponse::clear_has_value() {
  _oneof_case_[0] = VALUE_NOT_SET;
}
inline Event_CommandResponse::ValueCase Event_CommandResponse::value_case() const {
  return Event_CommandResponse::ValueCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// Event_ServerEvent

// .io.stakenet.orderbook.protos.MyOrderMatched myOrderMatched = 1;
inline bool Event_ServerEvent::_internal_has_myordermatched() const {
  return value_case() == kMyOrderMatched;
}
inline bool Event_ServerEvent::has_myordermatched() const {
  return _internal_has_myordermatched();
}
inline void Event_ServerEvent::set_has_myordermatched() {
  _oneof_case_[0] = kMyOrderMatched;
}
inline ::io::stakenet::orderbook::protos::MyOrderMatched* Event_ServerEvent::release_myordermatched() {
  // @@protoc_insertion_point(field_release:io.stakenet.orderbook.protos.Event.ServerEvent.myOrderMatched)
  if (_internal_has_myordermatched()) {
    clear_has_value();
      ::io::stakenet::orderbook::protos::MyOrderMatched* temp = value_.myordermatched_;
    value_.myordermatched_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::io::stakenet::orderbook::protos::MyOrderMatched& Event_ServerEvent::_internal_myordermatched() const {
  return _internal_has_myordermatched()
      ? *value_.myordermatched_
      : *reinterpret_cast< ::io::stakenet::orderbook::protos::MyOrderMatched*>(&::io::stakenet::orderbook::protos::_MyOrderMatched_default_instance_);
}
inline const ::io::stakenet::orderbook::protos::MyOrderMatched& Event_ServerEvent::myordermatched() const {
  // @@protoc_insertion_point(field_get:io.stakenet.orderbook.protos.Event.ServerEvent.myOrderMatched)
  return _internal_myordermatched();
}
inline ::io::stakenet::orderbook::protos::MyOrderMatched* Event_ServerEvent::_internal_mutable_myordermatched() {
  if (!_internal_has_myordermatched()) {
    clear_value();
    set_has_myordermatched();
    value_.myordermatched_ = CreateMaybeMessage< ::io::stakenet::orderbook::protos::MyOrderMatched >(
        GetArenaNoVirtual());
  }
  return value_.myordermatched_;
}
inline ::io::stakenet::orderbook::protos::MyOrderMatched* Event_ServerEvent::mutable_myordermatched() {
  // @@protoc_insertion_point(field_mutable:io.stakenet.orderbook.protos.Event.ServerEvent.myOrderMatched)
  return _internal_mutable_myordermatched();
}

// .io.stakenet.orderbook.protos.MyMatchedOrderCanceled myMatchedOrderCanceled = 2;
inline bool Event_ServerEvent::_internal_has_mymatchedordercanceled() const {
  return value_case() == kMyMatchedOrderCanceled;
}
inline bool Event_ServerEvent::has_mymatchedordercanceled() const {
  return _internal_has_mymatchedordercanceled();
}
inline void Event_ServerEvent::set_has_mymatchedordercanceled() {
  _oneof_case_[0] = kMyMatchedOrderCanceled;
}
inline ::io::stakenet::orderbook::protos::MyMatchedOrderCanceled* Event_ServerEvent::release_mymatchedordercanceled() {
  // @@protoc_insertion_point(field_release:io.stakenet.orderbook.protos.Event.ServerEvent.myMatchedOrderCanceled)
  if (_internal_has_mymatchedordercanceled()) {
    clear_has_value();
      ::io::stakenet::orderbook::protos::MyMatchedOrderCanceled* temp = value_.mymatchedordercanceled_;
    value_.mymatchedordercanceled_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::io::stakenet::orderbook::protos::MyMatchedOrderCanceled& Event_ServerEvent::_internal_mymatchedordercanceled() const {
  return _internal_has_mymatchedordercanceled()
      ? *value_.mymatchedordercanceled_
      : *reinterpret_cast< ::io::stakenet::orderbook::protos::MyMatchedOrderCanceled*>(&::io::stakenet::orderbook::protos::_MyMatchedOrderCanceled_default_instance_);
}
inline const ::io::stakenet::orderbook::protos::MyMatchedOrderCanceled& Event_ServerEvent::mymatchedordercanceled() const {
  // @@protoc_insertion_point(field_get:io.stakenet.orderbook.protos.Event.ServerEvent.myMatchedOrderCanceled)
  return _internal_mymatchedordercanceled();
}
inline ::io::stakenet::orderbook::protos::MyMatchedOrderCanceled* Event_ServerEvent::_internal_mutable_mymatchedordercanceled() {
  if (!_internal_has_mymatchedordercanceled()) {
    clear_value();
    set_has_mymatchedordercanceled();
    value_.mymatchedordercanceled_ = CreateMaybeMessage< ::io::stakenet::orderbook::protos::MyMatchedOrderCanceled >(
        GetArenaNoVirtual());
  }
  return value_.mymatchedordercanceled_;
}
inline ::io::stakenet::orderbook::protos::MyMatchedOrderCanceled* Event_ServerEvent::mutable_mymatchedordercanceled() {
  // @@protoc_insertion_point(field_mutable:io.stakenet.orderbook.protos.Event.ServerEvent.myMatchedOrderCanceled)
  return _internal_mutable_mymatchedordercanceled();
}

// .io.stakenet.orderbook.protos.OrderPlaced orderPlaced = 3;
inline bool Event_ServerEvent::_internal_has_orderplaced() const {
  return value_case() == kOrderPlaced;
}
inline bool Event_ServerEvent::has_orderplaced() const {
  return _internal_has_orderplaced();
}
inline void Event_ServerEvent::set_has_orderplaced() {
  _oneof_case_[0] = kOrderPlaced;
}
inline ::io::stakenet::orderbook::protos::OrderPlaced* Event_ServerEvent::release_orderplaced() {
  // @@protoc_insertion_point(field_release:io.stakenet.orderbook.protos.Event.ServerEvent.orderPlaced)
  if (_internal_has_orderplaced()) {
    clear_has_value();
      ::io::stakenet::orderbook::protos::OrderPlaced* temp = value_.orderplaced_;
    value_.orderplaced_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::io::stakenet::orderbook::protos::OrderPlaced& Event_ServerEvent::_internal_orderplaced() const {
  return _internal_has_orderplaced()
      ? *value_.orderplaced_
      : *reinterpret_cast< ::io::stakenet::orderbook::protos::OrderPlaced*>(&::io::stakenet::orderbook::protos::_OrderPlaced_default_instance_);
}
inline const ::io::stakenet::orderbook::protos::OrderPlaced& Event_ServerEvent::orderplaced() const {
  // @@protoc_insertion_point(field_get:io.stakenet.orderbook.protos.Event.ServerEvent.orderPlaced)
  return _internal_orderplaced();
}
inline ::io::stakenet::orderbook::protos::OrderPlaced* Event_ServerEvent::_internal_mutable_orderplaced() {
  if (!_internal_has_orderplaced()) {
    clear_value();
    set_has_orderplaced();
    value_.orderplaced_ = CreateMaybeMessage< ::io::stakenet::orderbook::protos::OrderPlaced >(
        GetArenaNoVirtual());
  }
  return value_.orderplaced_;
}
inline ::io::stakenet::orderbook::protos::OrderPlaced* Event_ServerEvent::mutable_orderplaced() {
  // @@protoc_insertion_point(field_mutable:io.stakenet.orderbook.protos.Event.ServerEvent.orderPlaced)
  return _internal_mutable_orderplaced();
}

// .io.stakenet.orderbook.protos.OrderCanceled orderCanceled = 4;
inline bool Event_ServerEvent::_internal_has_ordercanceled() const {
  return value_case() == kOrderCanceled;
}
inline bool Event_ServerEvent::has_ordercanceled() const {
  return _internal_has_ordercanceled();
}
inline void Event_ServerEvent::set_has_ordercanceled() {
  _oneof_case_[0] = kOrderCanceled;
}
inline ::io::stakenet::orderbook::protos::OrderCanceled* Event_ServerEvent::release_ordercanceled() {
  // @@protoc_insertion_point(field_release:io.stakenet.orderbook.protos.Event.ServerEvent.orderCanceled)
  if (_internal_has_ordercanceled()) {
    clear_has_value();
      ::io::stakenet::orderbook::protos::OrderCanceled* temp = value_.ordercanceled_;
    value_.ordercanceled_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::io::stakenet::orderbook::protos::OrderCanceled& Event_ServerEvent::_internal_ordercanceled() const {
  return _internal_has_ordercanceled()
      ? *value_.ordercanceled_
      : *reinterpret_cast< ::io::stakenet::orderbook::protos::OrderCanceled*>(&::io::stakenet::orderbook::protos::_OrderCanceled_default_instance_);
}
inline const ::io::stakenet::orderbook::protos::OrderCanceled& Event_ServerEvent::ordercanceled() const {
  // @@protoc_insertion_point(field_get:io.stakenet.orderbook.protos.Event.ServerEvent.orderCanceled)
  return _internal_ordercanceled();
}
inline ::io::stakenet::orderbook::protos::OrderCanceled* Event_ServerEvent::_internal_mutable_ordercanceled() {
  if (!_internal_has_ordercanceled()) {
    clear_value();
    set_has_ordercanceled();
    value_.ordercanceled_ = CreateMaybeMessage< ::io::stakenet::orderbook::protos::OrderCanceled >(
        GetArenaNoVirtual());
  }
  return value_.ordercanceled_;
}
inline ::io::stakenet::orderbook::protos::OrderCanceled* Event_ServerEvent::mutable_ordercanceled() {
  // @@protoc_insertion_point(field_mutable:io.stakenet.orderbook.protos.Event.ServerEvent.orderCanceled)
  return _internal_mutable_ordercanceled();
}

// .io.stakenet.orderbook.protos.OrdersMatched ordersMatched = 5;
inline bool Event_ServerEvent::_internal_has_ordersmatched() const {
  return value_case() == kOrdersMatched;
}
inline bool Event_ServerEvent::has_ordersmatched() const {
  return _internal_has_ordersmatched();
}
inline void Event_ServerEvent::set_has_ordersmatched() {
  _oneof_case_[0] = kOrdersMatched;
}
inline ::io::stakenet::orderbook::protos::OrdersMatched* Event_ServerEvent::release_ordersmatched() {
  // @@protoc_insertion_point(field_release:io.stakenet.orderbook.protos.Event.ServerEvent.ordersMatched)
  if (_internal_has_ordersmatched()) {
    clear_has_value();
      ::io::stakenet::orderbook::protos::OrdersMatched* temp = value_.ordersmatched_;
    value_.ordersmatched_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::io::stakenet::orderbook::protos::OrdersMatched& Event_ServerEvent::_internal_ordersmatched() const {
  return _internal_has_ordersmatched()
      ? *value_.ordersmatched_
      : *reinterpret_cast< ::io::stakenet::orderbook::protos::OrdersMatched*>(&::io::stakenet::orderbook::protos::_OrdersMatched_default_instance_);
}
inline const ::io::stakenet::orderbook::protos::OrdersMatched& Event_ServerEvent::ordersmatched() const {
  // @@protoc_insertion_point(field_get:io.stakenet.orderbook.protos.Event.ServerEvent.ordersMatched)
  return _internal_ordersmatched();
}
inline ::io::stakenet::orderbook::protos::OrdersMatched* Event_ServerEvent::_internal_mutable_ordersmatched() {
  if (!_internal_has_ordersmatched()) {
    clear_value();
    set_has_ordersmatched();
    value_.ordersmatched_ = CreateMaybeMessage< ::io::stakenet::orderbook::protos::OrdersMatched >(
        GetArenaNoVirtual());
  }
  return value_.ordersmatched_;
}
inline ::io::stakenet::orderbook::protos::OrdersMatched* Event_ServerEvent::mutable_ordersmatched() {
  // @@protoc_insertion_point(field_mutable:io.stakenet.orderbook.protos.Event.ServerEvent.ordersMatched)
  return _internal_mutable_ordersmatched();
}

// .io.stakenet.orderbook.protos.NewOrderMessage newOrderMessage = 6;
inline bool Event_ServerEvent::_internal_has_newordermessage() const {
  return value_case() == kNewOrderMessage;
}
inline bool Event_ServerEvent::has_newordermessage() const {
  return _internal_has_newordermessage();
}
inline void Event_ServerEvent::set_has_newordermessage() {
  _oneof_case_[0] = kNewOrderMessage;
}
inline ::io::stakenet::orderbook::protos::NewOrderMessage* Event_ServerEvent::release_newordermessage() {
  // @@protoc_insertion_point(field_release:io.stakenet.orderbook.protos.Event.ServerEvent.newOrderMessage)
  if (_internal_has_newordermessage()) {
    clear_has_value();
      ::io::stakenet::orderbook::protos::NewOrderMessage* temp = value_.newordermessage_;
    value_.newordermessage_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::io::stakenet::orderbook::protos::NewOrderMessage& Event_ServerEvent::_internal_newordermessage() const {
  return _internal_has_newordermessage()
      ? *value_.newordermessage_
      : *reinterpret_cast< ::io::stakenet::orderbook::protos::NewOrderMessage*>(&::io::stakenet::orderbook::protos::_NewOrderMessage_default_instance_);
}
inline const ::io::stakenet::orderbook::protos::NewOrderMessage& Event_ServerEvent::newordermessage() const {
  // @@protoc_insertion_point(field_get:io.stakenet.orderbook.protos.Event.ServerEvent.newOrderMessage)
  return _internal_newordermessage();
}
inline ::io::stakenet::orderbook::protos::NewOrderMessage* Event_ServerEvent::_internal_mutable_newordermessage() {
  if (!_internal_has_newordermessage()) {
    clear_value();
    set_has_newordermessage();
    value_.newordermessage_ = CreateMaybeMessage< ::io::stakenet::orderbook::protos::NewOrderMessage >(
        GetArenaNoVirtual());
  }
  return value_.newordermessage_;
}
inline ::io::stakenet::orderbook::protos::NewOrderMessage* Event_ServerEvent::mutable_newordermessage() {
  // @@protoc_insertion_point(field_mutable:io.stakenet.orderbook.protos.Event.ServerEvent.newOrderMessage)
  return _internal_mutable_newordermessage();
}

// .io.stakenet.orderbook.protos.SwapSuccess swapSuccess = 7;
inline bool Event_ServerEvent::_internal_has_swapsuccess() const {
  return value_case() == kSwapSuccess;
}
inline bool Event_ServerEvent::has_swapsuccess() const {
  return _internal_has_swapsuccess();
}
inline void Event_ServerEvent::set_has_swapsuccess() {
  _oneof_case_[0] = kSwapSuccess;
}
inline ::io::stakenet::orderbook::protos::SwapSuccess* Event_ServerEvent::release_swapsuccess() {
  // @@protoc_insertion_point(field_release:io.stakenet.orderbook.protos.Event.ServerEvent.swapSuccess)
  if (_internal_has_swapsuccess()) {
    clear_has_value();
      ::io::stakenet::orderbook::protos::SwapSuccess* temp = value_.swapsuccess_;
    value_.swapsuccess_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::io::stakenet::orderbook::protos::SwapSuccess& Event_ServerEvent::_internal_swapsuccess() const {
  return _internal_has_swapsuccess()
      ? *value_.swapsuccess_
      : *reinterpret_cast< ::io::stakenet::orderbook::protos::SwapSuccess*>(&::io::stakenet::orderbook::protos::_SwapSuccess_default_instance_);
}
inline const ::io::stakenet::orderbook::protos::SwapSuccess& Event_ServerEvent::swapsuccess() const {
  // @@protoc_insertion_point(field_get:io.stakenet.orderbook.protos.Event.ServerEvent.swapSuccess)
  return _internal_swapsuccess();
}
inline ::io::stakenet::orderbook::protos::SwapSuccess* Event_ServerEvent::_internal_mutable_swapsuccess() {
  if (!_internal_has_swapsuccess()) {
    clear_value();
    set_has_swapsuccess();
    value_.swapsuccess_ = CreateMaybeMessage< ::io::stakenet::orderbook::protos::SwapSuccess >(
        GetArenaNoVirtual());
  }
  return value_.swapsuccess_;
}
inline ::io::stakenet::orderbook::protos::SwapSuccess* Event_ServerEvent::mutable_swapsuccess() {
  // @@protoc_insertion_point(field_mutable:io.stakenet.orderbook.protos.Event.ServerEvent.swapSuccess)
  return _internal_mutable_swapsuccess();
}

// .io.stakenet.orderbook.protos.SwapFailure swapFailure = 8;
inline bool Event_ServerEvent::_internal_has_swapfailure() const {
  return value_case() == kSwapFailure;
}
inline bool Event_ServerEvent::has_swapfailure() const {
  return _internal_has_swapfailure();
}
inline void Event_ServerEvent::set_has_swapfailure() {
  _oneof_case_[0] = kSwapFailure;
}
inline ::io::stakenet::orderbook::protos::SwapFailure* Event_ServerEvent::release_swapfailure() {
  // @@protoc_insertion_point(field_release:io.stakenet.orderbook.protos.Event.ServerEvent.swapFailure)
  if (_internal_has_swapfailure()) {
    clear_has_value();
      ::io::stakenet::orderbook::protos::SwapFailure* temp = value_.swapfailure_;
    value_.swapfailure_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::io::stakenet::orderbook::protos::SwapFailure& Event_ServerEvent::_internal_swapfailure() const {
  return _internal_has_swapfailure()
      ? *value_.swapfailure_
      : *reinterpret_cast< ::io::stakenet::orderbook::protos::SwapFailure*>(&::io::stakenet::orderbook::protos::_SwapFailure_default_instance_);
}
inline const ::io::stakenet::orderbook::protos::SwapFailure& Event_ServerEvent::swapfailure() const {
  // @@protoc_insertion_point(field_get:io.stakenet.orderbook.protos.Event.ServerEvent.swapFailure)
  return _internal_swapfailure();
}
inline ::io::stakenet::orderbook::protos::SwapFailure* Event_ServerEvent::_internal_mutable_swapfailure() {
  if (!_internal_has_swapfailure()) {
    clear_value();
    set_has_swapfailure();
    value_.swapfailure_ = CreateMaybeMessage< ::io::stakenet::orderbook::protos::SwapFailure >(
        GetArenaNoVirtual());
  }
  return value_.swapfailure_;
}
inline ::io::stakenet::orderbook::protos::SwapFailure* Event_ServerEvent::mutable_swapfailure() {
  // @@protoc_insertion_point(field_mutable:io.stakenet.orderbook.protos.Event.ServerEvent.swapFailure)
  return _internal_mutable_swapfailure();
}

// .io.stakenet.orderbook.protos.MaintenanceInProgress maintenanceInProgress = 9;
inline bool Event_ServerEvent::_internal_has_maintenanceinprogress() const {
  return value_case() == kMaintenanceInProgress;
}
inline bool Event_ServerEvent::has_maintenanceinprogress() const {
  return _internal_has_maintenanceinprogress();
}
inline void Event_ServerEvent::set_has_maintenanceinprogress() {
  _oneof_case_[0] = kMaintenanceInProgress;
}
inline ::io::stakenet::orderbook::protos::MaintenanceInProgress* Event_ServerEvent::release_maintenanceinprogress() {
  // @@protoc_insertion_point(field_release:io.stakenet.orderbook.protos.Event.ServerEvent.maintenanceInProgress)
  if (_internal_has_maintenanceinprogress()) {
    clear_has_value();
      ::io::stakenet::orderbook::protos::MaintenanceInProgress* temp = value_.maintenanceinprogress_;
    value_.maintenanceinprogress_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::io::stakenet::orderbook::protos::MaintenanceInProgress& Event_ServerEvent::_internal_maintenanceinprogress() const {
  return _internal_has_maintenanceinprogress()
      ? *value_.maintenanceinprogress_
      : *reinterpret_cast< ::io::stakenet::orderbook::protos::MaintenanceInProgress*>(&::io::stakenet::orderbook::protos::_MaintenanceInProgress_default_instance_);
}
inline const ::io::stakenet::orderbook::protos::MaintenanceInProgress& Event_ServerEvent::maintenanceinprogress() const {
  // @@protoc_insertion_point(field_get:io.stakenet.orderbook.protos.Event.ServerEvent.maintenanceInProgress)
  return _internal_maintenanceinprogress();
}
inline ::io::stakenet::orderbook::protos::MaintenanceInProgress* Event_ServerEvent::_internal_mutable_maintenanceinprogress() {
  if (!_internal_has_maintenanceinprogress()) {
    clear_value();
    set_has_maintenanceinprogress();
    value_.maintenanceinprogress_ = CreateMaybeMessage< ::io::stakenet::orderbook::protos::MaintenanceInProgress >(
        GetArenaNoVirtual());
  }
  return value_.maintenanceinprogress_;
}
inline ::io::stakenet::orderbook::protos::MaintenanceInProgress* Event_ServerEvent::mutable_maintenanceinprogress() {
  // @@protoc_insertion_point(field_mutable:io.stakenet.orderbook.protos.Event.ServerEvent.maintenanceInProgress)
  return _internal_mutable_maintenanceinprogress();
}

// .io.stakenet.orderbook.protos.MaintenanceCompleted maintenanceCompleted = 10;
inline bool Event_ServerEvent::_internal_has_maintenancecompleted() const {
  return value_case() == kMaintenanceCompleted;
}
inline bool Event_ServerEvent::has_maintenancecompleted() const {
  return _internal_has_maintenancecompleted();
}
inline void Event_ServerEvent::set_has_maintenancecompleted() {
  _oneof_case_[0] = kMaintenanceCompleted;
}
inline ::io::stakenet::orderbook::protos::MaintenanceCompleted* Event_ServerEvent::release_maintenancecompleted() {
  // @@protoc_insertion_point(field_release:io.stakenet.orderbook.protos.Event.ServerEvent.maintenanceCompleted)
  if (_internal_has_maintenancecompleted()) {
    clear_has_value();
      ::io::stakenet::orderbook::protos::MaintenanceCompleted* temp = value_.maintenancecompleted_;
    value_.maintenancecompleted_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::io::stakenet::orderbook::protos::MaintenanceCompleted& Event_ServerEvent::_internal_maintenancecompleted() const {
  return _internal_has_maintenancecompleted()
      ? *value_.maintenancecompleted_
      : *reinterpret_cast< ::io::stakenet::orderbook::protos::MaintenanceCompleted*>(&::io::stakenet::orderbook::protos::_MaintenanceCompleted_default_instance_);
}
inline const ::io::stakenet::orderbook::protos::MaintenanceCompleted& Event_ServerEvent::maintenancecompleted() const {
  // @@protoc_insertion_point(field_get:io.stakenet.orderbook.protos.Event.ServerEvent.maintenanceCompleted)
  return _internal_maintenancecompleted();
}
inline ::io::stakenet::orderbook::protos::MaintenanceCompleted* Event_ServerEvent::_internal_mutable_maintenancecompleted() {
  if (!_internal_has_maintenancecompleted()) {
    clear_value();
    set_has_maintenancecompleted();
    value_.maintenancecompleted_ = CreateMaybeMessage< ::io::stakenet::orderbook::protos::MaintenanceCompleted >(
        GetArenaNoVirtual());
  }
  return value_.maintenancecompleted_;
}
inline ::io::stakenet::orderbook::protos::MaintenanceCompleted* Event_ServerEvent::mutable_maintenancecompleted() {
  // @@protoc_insertion_point(field_mutable:io.stakenet.orderbook.protos.Event.ServerEvent.maintenanceCompleted)
  return _internal_mutable_maintenancecompleted();
}

inline bool Event_ServerEvent::has_value() const {
  return value_case() != VALUE_NOT_SET;
}
inline void Event_ServerEvent::clear_has_value() {
  _oneof_case_[0] = VALUE_NOT_SET;
}
inline Event_ServerEvent::ValueCase Event_ServerEvent::value_case() const {
  return Event_ServerEvent::ValueCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// Event

// int64 messageCounter = 1;
inline void Event::clear_messagecounter() {
  messagecounter_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 Event::_internal_messagecounter() const {
  return messagecounter_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 Event::messagecounter() const {
  // @@protoc_insertion_point(field_get:io.stakenet.orderbook.protos.Event.messageCounter)
  return _internal_messagecounter();
}
inline void Event::_internal_set_messagecounter(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  messagecounter_ = value;
}
inline void Event::set_messagecounter(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_messagecounter(value);
  // @@protoc_insertion_point(field_set:io.stakenet.orderbook.protos.Event.messageCounter)
}

// .io.stakenet.orderbook.protos.Event.CommandResponse response = 2;
inline bool Event::_internal_has_response() const {
  return value_case() == kResponse;
}
inline bool Event::has_response() const {
  return _internal_has_response();
}
inline void Event::set_has_response() {
  _oneof_case_[0] = kResponse;
}
inline void Event::clear_response() {
  if (_internal_has_response()) {
    delete value_.response_;
    clear_has_value();
  }
}
inline ::io::stakenet::orderbook::protos::Event_CommandResponse* Event::release_response() {
  // @@protoc_insertion_point(field_release:io.stakenet.orderbook.protos.Event.response)
  if (_internal_has_response()) {
    clear_has_value();
      ::io::stakenet::orderbook::protos::Event_CommandResponse* temp = value_.response_;
    value_.response_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::io::stakenet::orderbook::protos::Event_CommandResponse& Event::_internal_response() const {
  return _internal_has_response()
      ? *value_.response_
      : *reinterpret_cast< ::io::stakenet::orderbook::protos::Event_CommandResponse*>(&::io::stakenet::orderbook::protos::_Event_CommandResponse_default_instance_);
}
inline const ::io::stakenet::orderbook::protos::Event_CommandResponse& Event::response() const {
  // @@protoc_insertion_point(field_get:io.stakenet.orderbook.protos.Event.response)
  return _internal_response();
}
inline ::io::stakenet::orderbook::protos::Event_CommandResponse* Event::_internal_mutable_response() {
  if (!_internal_has_response()) {
    clear_value();
    set_has_response();
    value_.response_ = CreateMaybeMessage< ::io::stakenet::orderbook::protos::Event_CommandResponse >(
        GetArenaNoVirtual());
  }
  return value_.response_;
}
inline ::io::stakenet::orderbook::protos::Event_CommandResponse* Event::mutable_response() {
  // @@protoc_insertion_point(field_mutable:io.stakenet.orderbook.protos.Event.response)
  return _internal_mutable_response();
}

// .io.stakenet.orderbook.protos.Event.ServerEvent event = 3;
inline bool Event::_internal_has_event() const {
  return value_case() == kEvent;
}
inline bool Event::has_event() const {
  return _internal_has_event();
}
inline void Event::set_has_event() {
  _oneof_case_[0] = kEvent;
}
inline void Event::clear_event() {
  if (_internal_has_event()) {
    delete value_.event_;
    clear_has_value();
  }
}
inline ::io::stakenet::orderbook::protos::Event_ServerEvent* Event::release_event() {
  // @@protoc_insertion_point(field_release:io.stakenet.orderbook.protos.Event.event)
  if (_internal_has_event()) {
    clear_has_value();
      ::io::stakenet::orderbook::protos::Event_ServerEvent* temp = value_.event_;
    value_.event_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::io::stakenet::orderbook::protos::Event_ServerEvent& Event::_internal_event() const {
  return _internal_has_event()
      ? *value_.event_
      : *reinterpret_cast< ::io::stakenet::orderbook::protos::Event_ServerEvent*>(&::io::stakenet::orderbook::protos::_Event_ServerEvent_default_instance_);
}
inline const ::io::stakenet::orderbook::protos::Event_ServerEvent& Event::event() const {
  // @@protoc_insertion_point(field_get:io.stakenet.orderbook.protos.Event.event)
  return _internal_event();
}
inline ::io::stakenet::orderbook::protos::Event_ServerEvent* Event::_internal_mutable_event() {
  if (!_internal_has_event()) {
    clear_value();
    set_has_event();
    value_.event_ = CreateMaybeMessage< ::io::stakenet::orderbook::protos::Event_ServerEvent >(
        GetArenaNoVirtual());
  }
  return value_.event_;
}
inline ::io::stakenet::orderbook::protos::Event_ServerEvent* Event::mutable_event() {
  // @@protoc_insertion_point(field_mutable:io.stakenet.orderbook.protos.Event.event)
  return _internal_mutable_event();
}

inline bool Event::has_value() const {
  return value_case() != VALUE_NOT_SET;
}
inline void Event::clear_has_value() {
  _oneof_case_[0] = VALUE_NOT_SET;
}
inline Event::ValueCase Event::value_case() const {
  return Event::ValueCase(_oneof_case_[0]);
}
#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace protos
}  // namespace orderbook
}  // namespace stakenet
}  // namespace io

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_stakenet_2forderbook_2fapi_2eproto
